{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/images/从零开始搭建Maui框架04-添加日志组件/1725334390810.png","path":"images/从零开始搭建Maui框架04-添加日志组件/1725334390810.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架04-添加日志组件/1725334573040.png","path":"images/从零开始搭建Maui框架04-添加日志组件/1725334573040.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架04-添加日志组件/1725344761115.png","path":"images/从零开始搭建Maui框架04-添加日志组件/1725344761115.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725933072526.png","path":"images/从零开始搭建Maui框架06-使用第三方UI/1725933072526.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725933061153.png","path":"images/从零开始搭建Maui框架06-使用第三方UI/1725933061153.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725934537652.png","path":"images/从零开始搭建Maui框架06-使用第三方UI/1725934537652.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725934481071.png","path":"images/从零开始搭建Maui框架06-使用第三方UI/1725934481071.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725947908410.png","path":"images/从零开始搭建Maui框架06-使用第三方UI/1725947908410.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725934488281.png","path":"images/从零开始搭建Maui框架06-使用第三方UI/1725934488281.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725948089234.png","path":"images/从零开始搭建Maui框架06-使用第三方UI/1725948089234.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725947925585.png","path":"images/从零开始搭建Maui框架06-使用第三方UI/1725947925585.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架/1724825693606.png","path":"images/从零开始搭建Maui框架/1724825693606.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架/1724825979147.png","path":"images/从零开始搭建Maui框架/1724825979147.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架/1724828119533.png","path":"images/从零开始搭建Maui框架/1724828119533.png","modified":0,"renderable":0},{"_id":"source/images/从零开始搭建Maui框架02-自动注册视图和视图模型/1724903446286.png","path":"images/从零开始搭建Maui框架02-自动注册视图和视图模型/1724903446286.png","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/umami-view.js","path":"js/umami-view.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-10.png","path":"images/免费激活office-2024-LTSC-增强版/image-10.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-1.png","path":"images/免费激活office-2024-LTSC-增强版/image-1.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-11.png","path":"images/免费激活office-2024-LTSC-增强版/image-11.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-12.png","path":"images/免费激活office-2024-LTSC-增强版/image-12.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-14.png","path":"images/免费激活office-2024-LTSC-增强版/image-14.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-13.png","path":"images/免费激活office-2024-LTSC-增强版/image-13.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-15.png","path":"images/免费激活office-2024-LTSC-增强版/image-15.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-2.png","path":"images/免费激活office-2024-LTSC-增强版/image-2.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-3.png","path":"images/免费激活office-2024-LTSC-增强版/image-3.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-4.png","path":"images/免费激活office-2024-LTSC-增强版/image-4.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-5.png","path":"images/免费激活office-2024-LTSC-增强版/image-5.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-6.png","path":"images/免费激活office-2024-LTSC-增强版/image-6.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-7.png","path":"images/免费激活office-2024-LTSC-增强版/image-7.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-8.png","path":"images/免费激活office-2024-LTSC-增强版/image-8.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-9.png","path":"images/免费激活office-2024-LTSC-增强版/image-9.png","modified":0,"renderable":0},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image.png","path":"images/免费激活office-2024-LTSC-增强版/image.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_drafts/使用Github-Page-和-Hexo-创建blog.md","hash":"1514630b0df293318ce4caad298873535a8eda05","modified":1731998491730},{"_id":"source/about/index.md","hash":"3ca0457dc8629d95387f0b00324272e71ce715d1","modified":1732001628858},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1731987634447},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1731987635950},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1731987635727},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1731987635741},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1731987635994},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1731987635960},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1731987636013},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1731987635972},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1731987635982},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1731987636035},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1731987636024},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1731987636062},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1731987636049},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1731987636070},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1731987636082},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1731987636094},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1731987636105},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1731987636117},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1731987636132},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1731987636152},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1731987636143},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1731987636003},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1731987636163},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1731987636171},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1731987636181},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1731987636195},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1731987636204},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1731987636213},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1731987636222},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1731987636235},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1731987636241},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1731987636281},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1731987636255},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1731987636302},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1731987636312},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1731987635336},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1731987635012},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1731987636326},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1731987635153},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1731987635353},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1731987635410},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1731987635613},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1731987635424},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1731987635491},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1731987634719},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1731987634801},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1731987635048},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1731987634859},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1731987635259},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1731987635210},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1731987635280},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1731987634954},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1731987635300},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1731987635121},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1731987635319},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1731987635450},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1731987635365},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1731987635762},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1731987635436},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1731987635771},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1731987635507},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1731987635480},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1731987635941},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1731987634558},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1731987635713},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1731987635181},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1731987635094},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1731987635465},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1731987635390},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1731987635235},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1731987635522},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1731987635805},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1731987635788},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1731987635817},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1731987635827},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1731987635863},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1731987635875},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1731987635917},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1731987635905},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1731987635897},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1731987635851},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1731987635929},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1731987635885},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1731987635665},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1731987635692},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1731987635595},{"_id":"source/_posts/images/从零开始搭建Maui框架02-自动注册视图和视图模型/1724903446286.png","hash":"696b6b0501c96b00c42fae6843954346d657df88","modified":1724903446000},{"_id":"source/images/从零开始搭建Maui框架02-自动注册视图和视图模型/1724903446286.png","hash":"696b6b0501c96b00c42fae6843954346d657df88","modified":1724903446000},{"_id":"source/images/从零开始搭建Maui框架04-添加日志组件/1725334390810.png","hash":"e82db355ab42a63349583f1515f217340c4b03b1","modified":1725334390000},{"_id":"source/_posts/从零开始搭建Maui框架01-搭建基础框架.md","hash":"8d6447ec49f58559405d5ac43e8c992c46ab8868","modified":1732005459369},{"_id":"source/_posts/从零开始搭建Maui框架02-自动注册视图和视图模型.md","hash":"07f6fdeef05c94dd0b39495d1cf4818aee70de7d","modified":1732005453313},{"_id":"source/_posts/从零开始搭建Maui框架03-添加事件聚合器.md","hash":"7a31871181ff37df12b101bf090bbfe8c96eb13a","modified":1732005446960},{"_id":"source/_posts/从零开始搭建Maui框架04-添加日志组件.md","hash":"10fbdbfc7eab899c80e4a405bda2dd51cefa17e4","modified":1732005440252},{"_id":"source/_posts/从零开始搭建Maui框架05-添加自定义Dialog弹窗.md","hash":"52c827b448d5364475d49c1bc051317314b475d8","modified":1732005434123},{"_id":"source/_posts/从零开始搭建Maui框架06-使用第三方UI.md","hash":"8cdb723f56aba4e67e3c2a71638f64a55c6c9a7c","modified":1732005427517},{"_id":"source/_posts/从零开始搭建Maui框架07-多主题切换.md","hash":"09d8500e0d2bbca047ecbe939fdfe565fb6ab9e1","modified":1732005418910},{"_id":"source/images/1724825693606.png","hash":"45602f60b9f77556b4e510742a795d6b26ef1626","modified":1724825693000},{"_id":"source/images/1724825979147.png","hash":"7d1a000fabe288fbc5e388ff8bc74459bc605e7b","modified":1724825979000},{"_id":"source/images/1724828119533.png","hash":"007dd73efabc0befbd4815acebe56277eae2112f","modified":1724828119000},{"_id":"source/images/1725334390810.png","hash":"e82db355ab42a63349583f1515f217340c4b03b1","modified":1725334390000},{"_id":"source/images/1724903446286.png","hash":"696b6b0501c96b00c42fae6843954346d657df88","modified":1724903446000},{"_id":"source/images/1725334573040.png","hash":"840b60e6054f96a4d26d14370c5228798ab68220","modified":1725334573000},{"_id":"source/images/1725344761115.png","hash":"c2964a4a44f960a5cb06817252271f5d52fa5791","modified":1725344761000},{"_id":"source/images/1725933061153.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1725933061000},{"_id":"source/images/1725933072526.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1725933072000},{"_id":"source/images/1725934537652.png","hash":"9f3b0466f0e75ec9830e53deb9fc9421477ad927","modified":1725934537000},{"_id":"source/images/1725947908410.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725947908000},{"_id":"source/images/1725948089234.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725948089000},{"_id":"source/images/1725947925585.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725947925000},{"_id":"source/images/1725934481071.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1725934481000},{"_id":"source/images/1725934488281.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1725934488000},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731996333958},{"_id":"public/2024/11/19/从零开始搭建Maui框架07-多主题切换/index.html","hash":"60cc48b670b90661efd05fab13a32a080bb4c21b","modified":1732005509768},{"_id":"public/2024/11/19/从零开始搭建Maui框架06-使用第三方UI/index.html","hash":"80027e03e507e6a1003b4dccb8a1b757e4755857","modified":1732005509768},{"_id":"public/2024/11/19/从零开始搭建Maui框架05-添加自定义Dialog弹窗/index.html","hash":"a4f901c9dc557786f0ddb49871b030076e11b6f5","modified":1732005509768},{"_id":"public/2024/11/19/从零开始搭建Maui框架04-添加日志组件/index.html","hash":"e5f369cb7b8964f0908d8794241a2e71bfaeaea1","modified":1732005509768},{"_id":"public/2024/11/19/从零开始搭建Maui框架03-添加事件聚合器/index.html","hash":"9a5820d4953afce071dc4f4d41dce992e84ac7b1","modified":1732005509768},{"_id":"public/2024/11/19/从零开始搭建Maui框架02-自动注册视图和视图模型/index.html","hash":"6bfec65db126d9bb89ebd9caa0a5b35260b13b93","modified":1732005509768},{"_id":"public/2024/11/19/从零开始搭建Maui框架01-搭建基础框架/index.html","hash":"698ce57058e39521bf786d96e32d249049979448","modified":1732005509768},{"_id":"public/archives/2024/index.html","hash":"3208002b59259d3db89c07e353b7b6f3ff751c01","modified":1732005509768},{"_id":"public/archives/2024/11/index.html","hash":"aed90cba85fbb3d6715075d1721398a44bcf2303","modified":1732005509768},{"_id":"public/archives/index.html","hash":"9ffefae2bf7e5a73cfc882bb660145ff5ec9be92","modified":1732005509768},{"_id":"public/index.html","hash":"3af736242f52803b138b9e9cd6fb34d0bb29d421","modified":1732005509768},{"_id":"public/images/1724825693606.png","hash":"45602f60b9f77556b4e510742a795d6b26ef1626","modified":1731996333958},{"_id":"public/images/1725334390810.png","hash":"e82db355ab42a63349583f1515f217340c4b03b1","modified":1731996333958},{"_id":"public/images/1724828119533.png","hash":"007dd73efabc0befbd4815acebe56277eae2112f","modified":1731996333958},{"_id":"public/images/1725344761115.png","hash":"c2964a4a44f960a5cb06817252271f5d52fa5791","modified":1731996333958},{"_id":"public/images/1724903446286.png","hash":"696b6b0501c96b00c42fae6843954346d657df88","modified":1731996333958},{"_id":"public/images/1724825979147.png","hash":"7d1a000fabe288fbc5e388ff8bc74459bc605e7b","modified":1731996333958},{"_id":"public/images/1725933061153.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1731996333958},{"_id":"public/images/1725334573040.png","hash":"840b60e6054f96a4d26d14370c5228798ab68220","modified":1731996333958},{"_id":"public/images/1725933072526.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1731996333958},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1731996333958},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1731996333958},{"_id":"public/images/1725934537652.png","hash":"9f3b0466f0e75ec9830e53deb9fc9421477ad927","modified":1731996333958},{"_id":"public/images/1725947908410.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1731996333958},{"_id":"public/images/1725947925585.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1731996333958},{"_id":"public/images/1725948089234.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1731996333958},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1731996333958},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1731996333958},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1731996333958},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1731996333958},{"_id":"public/images/1725934481071.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1731996333958},{"_id":"public/images/1725934488281.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1731996333958},{"_id":"source/_posts/images/从零开始搭建Maui框架04-添加日志组件/1725334390810.png","hash":"e82db355ab42a63349583f1515f217340c4b03b1","modified":1725334390000},{"_id":"source/_posts/images/从零开始搭建Maui框架04-添加日志组件/1725344761115.png","hash":"c2964a4a44f960a5cb06817252271f5d52fa5791","modified":1725344761000},{"_id":"source/_posts/images/从零开始搭建Maui框架04-添加日志组件/1725334573040.png","hash":"840b60e6054f96a4d26d14370c5228798ab68220","modified":1725334573000},{"_id":"source/_posts/images/从零开始搭建Maui框架06-使用第三方UI/1725933061153.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1725933061000},{"_id":"source/_posts/images/从零开始搭建Maui框架06-使用第三方UI/1725933072526.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1725933072000},{"_id":"source/_posts/images/从零开始搭建Maui框架06-使用第三方UI/1725934537652.png","hash":"9f3b0466f0e75ec9830e53deb9fc9421477ad927","modified":1725934537000},{"_id":"source/_posts/images/从零开始搭建Maui框架06-使用第三方UI/1725947908410.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725947908000},{"_id":"source/_posts/images/从零开始搭建Maui框架06-使用第三方UI/1725947925585.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725947925000},{"_id":"source/_posts/images/从零开始搭建Maui框架06-使用第三方UI/1725948089234.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725948089000},{"_id":"source/_posts/images/从零开始搭建Maui框架/1724825979147.png","hash":"7d1a000fabe288fbc5e388ff8bc74459bc605e7b","modified":1724825979000},{"_id":"source/_posts/images/从零开始搭建Maui框架/1724825693606.png","hash":"45602f60b9f77556b4e510742a795d6b26ef1626","modified":1724825693000},{"_id":"source/_posts/images/从零开始搭建Maui框架/1724828119533.png","hash":"007dd73efabc0befbd4815acebe56277eae2112f","modified":1724828119000},{"_id":"source/_posts/images/从零开始搭建Maui框架06-使用第三方UI/1725934481071.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1725934481000},{"_id":"source/_posts/images/从零开始搭建Maui框架06-使用第三方UI/1725934488281.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1725934488000},{"_id":"source/images/从零开始搭建Maui框架/1724825693606.png","hash":"45602f60b9f77556b4e510742a795d6b26ef1626","modified":1724825693000},{"_id":"source/images/从零开始搭建Maui框架/1724825979147.png","hash":"7d1a000fabe288fbc5e388ff8bc74459bc605e7b","modified":1724825979000},{"_id":"source/images/从零开始搭建Maui框架/1724828119533.png","hash":"007dd73efabc0befbd4815acebe56277eae2112f","modified":1724828119000},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725933061153.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1725933061000},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725933072526.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1725933072000},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725947908410.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725947908000},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725947925585.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725947925000},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725934537652.png","hash":"9f3b0466f0e75ec9830e53deb9fc9421477ad927","modified":1725934537000},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725948089234.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1725948089000},{"_id":"source/images/从零开始搭建Maui框架04-添加日志组件/1725344761115.png","hash":"c2964a4a44f960a5cb06817252271f5d52fa5791","modified":1725344761000},{"_id":"source/images/从零开始搭建Maui框架04-添加日志组件/1725334573040.png","hash":"840b60e6054f96a4d26d14370c5228798ab68220","modified":1725334573000},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725934481071.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1725934481000},{"_id":"source/images/从零开始搭建Maui框架06-使用第三方UI/1725934488281.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1725934488000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731998451618},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"ff9b0e1fb9dba665af2f1e4a577f8cb9e840464b","modified":1731998451497},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1731998451239},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"e62d2e25cae57e8469e3f48c9d17be1fd284a969","modified":1731998451627},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"7746460fc2eba7439b494c46aa9b5ded81370819","modified":1731998451495},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"026ddf1a49bf8ddfef6ed86ab4d6af143c1dd95f","modified":1731998451633},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"58dccef1d98b472dc4e6f4693c2297b0c9c5afba","modified":1731998451628},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"9c580471257f5a32bee701a059a45ea96755dcdc","modified":1731998451630},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"7c1a0c9f6186b6643b19d3980f055329bdb4efa4","modified":1731998451631},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1731998451250},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"550b95d3614a64592f02666938d235e9f11e449e","modified":1731998451634},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"93818f8bf07195fb1ebffbb5210e531b0e3a6ec4","modified":1731998451634},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1731998451263},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"a60847136709bb95586a98d9d67b50390a8d2c96","modified":1731998451636},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"51c2b4d64c6992a39bfd2586a1bdf5fbbbdf0175","modified":1731998451637},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"e1043de394f6dcf5c0647adcfdefe60637f78426","modified":1731998451638},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1731998451271},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"052e9fc19c753f53fdc083c7fb098e3668880140","modified":1731998451254},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"33c3317cdcee062789de2336dd8d0cc7f86d3650","modified":1731998451324},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1731998451281},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1731998451325},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1731998451326},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1731998451350},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1731998451371},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1731998451260},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1731998451374},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1731998451280},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1731998451278},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"9bf0d357a607a282f3b9cb04525a4df0cc2a8b76","modified":1731998451357},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1731998451291},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"67be642f99482c07904474f410cfbc2f99003288","modified":1731998451317},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"1dadb118d580280524ed0a5f69bd34d234a92276","modified":1731998451297},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"40c8b0852873032e7aaef3f68e8ea08706cdef13","modified":1731998451311},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1731998451317},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1731998451571},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1731998451331},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1731998451247},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1731998451589},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1731998451497},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1731998451360},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1731998451362},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1731998451353},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1731998451389},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1731998451511},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1731998451576},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"6869811f67e4c3de3edfa4b08464bb242b97a402","modified":1731998451419},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1731998451391},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1731998451513},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"1ef88c881b9f942deadde3d890387b94c617342a","modified":1731998451401},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1731998451428},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1731998451450},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1731998451470},{"_id":"node_modules/hexo-theme-fluid/source/js/umami-view.js","hash":"33c4b3883fa747604074ad3921606eeeaeb50716","modified":1731998451481},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1731998451438},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1731998451453},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1731998451491},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1731998451624},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1731998451410},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"82bb06686158ebe160a631c79f156cd4fde35656","modified":1731998451473},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1731998451454},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1731998451415},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1731998451431},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1731998451421},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1731998451415},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1731998451441},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1731998451464},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1731998451479},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1731998451486},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"966689d7c5e4320008285395fbaa2751f6209be5","modified":1731998451489},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1731998451434},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4d48c424e47ff9a17a563167ea5f480890267adf","modified":1731998451492},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1731998451468},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1731998451451},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"6eaf53cf4bfc756a65bda18184cf8998a12c861d","modified":1731998451400},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1731998451396},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/fold.js","hash":"73e4fd12ce3e47981479391ed354b7d9d3279f70","modified":1731998451421},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1731998451424},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1731998451444},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1731998451403},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1731998451460},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1731998451463},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1731998451457},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1731998451481},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1731998451475},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1731998451299},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1731998451284},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1731998451300},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1731998451304},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/crypto.js","hash":"ae4ad8a188ef5b3fa6818b01629fc962b3de8551","modified":1731998451407},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1731998451315},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1731998451314},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1731998451359},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1731998451328},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1731998451378},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1731998451381},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1731998451384},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1731998451271},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"3d08c73b77e412d2f06a24d9344565fc7dbc76f8","modified":1731998451386},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1731998451267},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"954a29b58d72647d20450da270b5d8fb2e0824f5","modified":1731998451370},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"37d750428772d7c71ba36ce0c2540780d90fadea","modified":1731998451345},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1731998451528},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1731998451531},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"cbfa32c5f5973133afd043853b24f8200455cb2d","modified":1731998451295},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1731998451275},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1731998451339},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1731998451363},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1731998451367},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"54dd479dbb440126e4ddd9d902229db5afaaae98","modified":1731998451343},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1731998451540},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1731998451376},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"e6dcbf1c2f56314d56bb46b50aca86ff68cacebd","modified":1731998451257},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1731998451258},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1731998451601},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1731998451287},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1731998451306},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1731998451308},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1731998451320},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1731998451333},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/moment.ejs","hash":"4ff3fb1b60ccc95a0af3bbdbd0757fedefc088b5","modified":1731998451344},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1731998451406},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1731998451335},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1731998451347},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"c19ac8050b82c3676b0332a56099ccfcc36d9d52","modified":1731998451423},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"bd8376e1cf7892dc2daa58f2f443574be559fdbf","modified":1731998451425},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1731998451441},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1731998451380},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"a5fe1deccb73b5f578797dbb11038efc15f63ce8","modified":1731998451427},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1731998451455},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1731998451448},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1731998451515},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1731998451521},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1731998451537},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"85492ef64d7e5f70f0f7e46d570bbc911e686d7e","modified":1731998451557},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1731998451582},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1731998451547},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1731998451610},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1731998451583},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1731998451548},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"25fb6fa4c783b847c632584c49a7e1593cdb2f5d","modified":1731998451582},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1731998451551},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1731998451589},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1731998451560},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1731998451592},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1731998451575},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"7eee3f78296a3c81849a5415d1d43dcc6e03e6aa","modified":1731998451607},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"c96d36aa8fe20f0c3c1a29ee2473cd8064b10f73","modified":1731998451609},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1731998451620},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1731998451519},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1731998451525},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1731998451564},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1731998451553},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1731998451542},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1731998451565},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1731998451566},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"d42b748f2f49ef32aafb1a21d75991d2459da927","modified":1731998451570},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1731998451595},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1731998451595},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1731998451604},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1731998451598},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1731998451610},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1731998451614},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1731998451615},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1731998451623},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1731998451510},{"_id":"public/local-search.xml","hash":"74ae960b2203f70beb332bc8acbec0acc2b6c46e","modified":1732005509768},{"_id":"public/categories/教程/index.html","hash":"2f2f73e7ad3d3ac73f6171cc56995788a1209d73","modified":1731998824918},{"_id":"public/tags/NET/index.html","hash":"bb67a87ebd8126c14ff8e12c709e4b927e93d738","modified":1732005509768},{"_id":"public/tags/C/index.html","hash":"d04052b00346562a3c540a3a101ab5e56ce16c79","modified":1732005509768},{"_id":"public/tags/MAUI/index.html","hash":"d9aa97213901283f6e1999d64bb34654cd22e4ba","modified":1732005509768},{"_id":"public/tags/Prism/index.html","hash":"4197c1b22766ce67b9c68efc04ddea1d74e7bdc3","modified":1732005509768},{"_id":"public/tags/index.html","hash":"c007ae692404012ee27b8dc0515b13d2ad18a2d3","modified":1732005509768},{"_id":"public/categories/index.html","hash":"3cf97b4658e6df5dfc6dce4a06e2c7cde62434a4","modified":1732005509768},{"_id":"public/links/index.html","hash":"d563c76f2b555d399fc45343f6c6fa01e14a7eb1","modified":1732005509768},{"_id":"public/404.html","hash":"7b79d0e85541f9b7b064b4e9b7b755ef40060533","modified":1732005509768},{"_id":"public/images/从零开始搭建Maui框架04-添加日志组件/1725334390810.png","hash":"e82db355ab42a63349583f1515f217340c4b03b1","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架06-使用第三方UI/1725933072526.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架04-添加日志组件/1725334573040.png","hash":"840b60e6054f96a4d26d14370c5228798ab68220","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架04-添加日志组件/1725344761115.png","hash":"c2964a4a44f960a5cb06817252271f5d52fa5791","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架06-使用第三方UI/1725933061153.png","hash":"762189ffd8487c1511181a51e5d371c5f9792908","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架06-使用第三方UI/1725934537652.png","hash":"9f3b0466f0e75ec9830e53deb9fc9421477ad927","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架/1724825979147.png","hash":"7d1a000fabe288fbc5e388ff8bc74459bc605e7b","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架06-使用第三方UI/1725947908410.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架/1724825693606.png","hash":"45602f60b9f77556b4e510742a795d6b26ef1626","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架02-自动注册视图和视图模型/1724903446286.png","hash":"696b6b0501c96b00c42fae6843954346d657df88","modified":1731998824918},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架06-使用第三方UI/1725948089234.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1731998824918},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架06-使用第三方UI/1725947925585.png","hash":"7fcf5d2d04c5bd2d0b8f391b0eb03d62c5606450","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架/1724828119533.png","hash":"007dd73efabc0befbd4815acebe56277eae2112f","modified":1731998824918},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1731998824918},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1731998824918},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1731998824918},{"_id":"public/css/highlight-dark.css","hash":"902294bada4323c0f51502d67cba8c3a0298952f","modified":1731998824918},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1731998824918},{"_id":"public/css/main.css","hash":"14ebd9b515085666cee29bbcbe362ad3604ab62a","modified":1731998824918},{"_id":"public/css/highlight.css","hash":"04d4ddbb5e1d1007447c2fe293ee05aae9b9563e","modified":1731998824918},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1731998824918},{"_id":"public/js/events.js","hash":"6869811f67e4c3de3edfa4b08464bb242b97a402","modified":1731998824918},{"_id":"public/js/color-schema.js","hash":"1ef88c881b9f942deadde3d890387b94c617342a","modified":1731998824918},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1731998824918},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1731998824918},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1731998824918},{"_id":"public/js/umami-view.js","hash":"33c4b3883fa747604074ad3921606eeeaeb50716","modified":1731998824918},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1731998824918},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1731998824918},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架06-使用第三方UI/1725934481071.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1731998824918},{"_id":"public/images/从零开始搭建Maui框架06-使用第三方UI/1725934488281.png","hash":"024c90ef02b410f891d4039b7a35dfa27e758bad","modified":1731998824918},{"_id":"source/_posts/使用Github-Page-和-Hexo-创建blog.md","hash":"11b284d10808f14558144d392f932fa33bd90419","modified":1732005729634},{"_id":"public/2024/11/19/使用Github-Page-和-Hexo-创建blog/index.html","hash":"defa0da10111e1ae1d525f77c2a98d3cb5372ca0","modified":1732005509768},{"_id":"public/tags/Hexo/index.html","hash":"7756c58398f87b6ea3ac9d82987aba2ff04fc605","modified":1732005509768},{"_id":"public/tags/Github-Page/index.html","hash":"c5ea21f06a69c6cb0bf067643f235860e526e246","modified":1732005509768},{"_id":"public/tags/Fluid/index.html","hash":"23beef717db2ac9f58f60d4602948e7594d75cd2","modified":1732005509768},{"_id":"public/categories/博客搭建教程/index.html","hash":"dc8dabb72230e06143261c47f7e58fd7dbc1b885","modified":1732005509768},{"_id":"public/categories/MAUI教程/index.html","hash":"85184f3b6024e684bc08fddeb41593d5d437453c","modified":1732005509768},{"_id":"source/_posts/免费激活office-2024-LTSC-增强版.md","hash":"e7743ab867f208ac2e398eb3804ad0f0c7503cd7","modified":1733109262864},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-10.png","hash":"692e780584a5e2a0a31a85cef2b69625803a554c","modified":1733108162037},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-1.png","hash":"0fe444d6658b7474eb4bbfe1dff56de043ed3688","modified":1733106798071},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-11.png","hash":"a43b38b2b8f4354351de94efcbc4e73cfeab2e66","modified":1733108343819},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-14.png","hash":"7e37c70977a3772de0a29038c754be8f84ba1d06","modified":1733108722007},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-15.png","hash":"6b18d40dcdf4aa942f9c519f415f6eb98e525231","modified":1733108988394},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-2.png","hash":"f92f2cfda40c02f8192adf48b8b5af65d091e7c9","modified":1733107174829},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-3.png","hash":"e6917be688c0042b8815d86c41616aac43ef057b","modified":1733107234373},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-13.png","hash":"c74346601960ebd3accb09a3074b927a64cb422b","modified":1733108675891},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-5.png","hash":"cc06dd34d8f8442b5ee7cb5058d98eeb31001017","modified":1733107447172},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-4.png","hash":"ff4dcf0febf898f3de330513959fad60d8096ebf","modified":1733107362629},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-6.png","hash":"35e707505f9b3ca96b3a031ba215e77b1b248fde","modified":1733107487235},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-9.png","hash":"a8c786199ba7825e799c187088732823c6ffb0fc","modified":1733108043210},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-7.png","hash":"c9f2bdd13723b4980af85216e1056356edf4ba10","modified":1733107620478},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-8.png","hash":"3bdc7ec1da4aade873bd0eb7a37cd5b38f319298","modified":1733107741555},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image.png","hash":"bf937a5d115c540137227fcf6622397daac1da10","modified":1733106686791},{"_id":"source/images/免费激活office-2024-LTSC-增强版/image-12.png","hash":"65c147bea69ef81f9b6a6067f72dd76a437381f2","modified":1733108426371},{"_id":"source/_posts/江湖秘本之英耀篇.md","hash":"020e27ef437234753bfd659c82dbdf1748d6cc5d","modified":1733130176963},{"_id":"source/_posts/江湖秘本之军马篇.md","hash":"9b34023cc2c330383e62acd3ad5acde362d37d16","modified":1733130185806},{"_id":"source/_posts/江湖秘本术语解读.md","hash":"bfcfe4288a65385eebe8b053acafd067c29abfb1","modified":1733130193501}],"Category":[{"name":"教程","_id":"cm3o28urf00013kv4h6a2gwl5"},{"name":"博客搭建教程","_id":"cm3o7asec00083wv4fo50e5ua"},{"name":"MAUI教程","_id":"cm3o7b2iv000a3wv42u963pdc"},{"name":"工具","_id":"cm46gjx9q0001dwv48qqg93wj"},{"name":"心理学","_id":"cm46syinf000bg4v4dj18470n"}],"Data":[],"Page":[{"title":"about","layout":"layout","date":"2024-11-19T03:55:52.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\nlayout: layout\ndate: 2024-11-19 11:55:52\n---\n","updated":"2024-11-19T07:33:48.858Z","path":"about/index.html","_id":"cm3nxc1pu0000ikv438o2hncp","comments":1,"content":"","excerpt":"","more":""}],"Post":[{"title":"从零开始搭建Maui框架01-搭建基础框架","date":"2024-11-19T06:12:32.000Z","_content":"# 从零搭建Maui框架，基于Prism9.0\n\nPrism9.0正式版发布了，利用Prism搭建一个Maui框架。\n\n## 一、用VS模板创建Maui项目\n\n使用Visual Studio 2022及以上，创建.NET MAUI应用\n\n![1724825693606](images/从零开始搭建Maui框架/1724825693606.png)\n\n## 二、 导包\n\n导入`Prism.Maui` 和`Prism.DryIoc.Maui` 两个Nuget包\n\n![1724825979147](images/从零开始搭建Maui框架/1724825979147.png)\n\n## 三、修改Maui程序入口\n\n在`MauiProgram.cs` 中`CreateMauiApp` 方法中添加以下代码\n\n```\nbuilder.UsePrism(prism =>\n{\n    //注册MainPage到导航\n    prism.RegisterTypes(container => { container.RegisterForNavigation<MainPage>(); });\n   \n    //导航到根目录\n    prism.CreateWindow(navigationService => navigationService.NavigateAsync($\"/{nameof(MainPage)}\"));\n});\n```\n\n上面代码的作用是，注册`MainPage`到Prism的导航服务中。如果不注册，直接使用`prism.CreateWindow`方法会报错，**提示创建Root页面失败**。\n\n## 四、删除AppShell\n\n使用Prism不需要`AppShell` ，这里直接删除。\n\n在`App.xaml`文件中删除 `MainPage = new AppShell();` 代码。\n\n直接运行程序，会发现程序的行为和VS模板创建的动作行为基本是一致的。\n\n这里因为我们删除了AppShell，所以看不到Home字样。\n\n## 五、添加区域`Region`\n\n1. 将`MainPage.xaml`中的UI代码删除，新增`ContentView`控件\n2. 导入命名空间`xmlns:prism=\"http://prismlibrary.com\"`\n3. 给`ContentView`附加区域导航属性`prism:RegionManager.RegionName=\"MainRegion\"`\n4. 注释`MainPage.xaml.cs`中报错的部分\n\n`MainPage.xaml` 完整代码如下\n\n```\n<ContentPage x:Class=\"MauiPrism9Demo.MainPage\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:core=\"clr-namespace:Core;assembly=Core\"\n             xmlns:prism=\"http://prismlibrary.com\">\n\n    <ContentView prism:RegionManager.RegionName=\"MainRegion\" />\n\n\n</ContentPage>\n\n```\n\n## 六、添加新视图\n\n新增Views文件夹和ViewModels文件夹。\n\n在Views文件夹中新增一个名为`ViewA`的`.NET MAUI ContentView(XAML)`项目\n\n在ViewModels中新增名为`ViewAViewModel` 的类，并使**类继承Prism的MVVM基类`BindableBase`**\n\n![1724828119533](images/从零开始搭建Maui框架/1724828119533.png)\n\n## 七、注入新视图并导航\n\n在**程序入口**处使用Prism**基于区域注册**新的视图。\n\n代码为`container.RegisterForRegionNavigation<ViewA, ViewAViewModel>();`\n\n新增Prism加载完成后导航到ViewA的代码。\n\n```\n  prism.OnInitialized((container) =>\n  {\n      var regionManager = container.Resolve<IRegionManager>();\n      regionManager.RegisterViewWithRegion(\"MainRegion\", \"ViewA\");\n  });\n```\n\n上面这段代码是**在Prism初始化完成以后**，使用区域管理器`RegionManager` 将`ViewA`导航到`MainRegion`中。\n\n运行程序，会发现ViewA的UI已经显示在了应用程序中。\n\n## 八、区域导航\n\n重复第六条，新增ViewB和ViewBViewModel。\n\n在ViewB中添加一个按钮，绑定命令为ToViewACommand。\n\n```\n <Button Command=\"{Binding ToViewACommand}\"\n         HorizontalOptions=\"Center\"\n         Text=\"GoBack\"\n         VerticalOptions=\"Center\" />\n```\n\n在ViewBViewModel中新增一个返回值为`ICommand`的方法，代码如下\n\n```\n public ICommand ToViewACommand => new DelegateCommand(() =>\n {\n     regionManager.RequestNavigate(\"MainRegion\", nameof(ViewA));\n });\n```\n\n**同样在ViewA和ViewAViewModel中新增ToViewB的按钮和Command。**\n\n## 九、注册区域导航\n\n在程序入口文件`MauiProgram` 中，像注册ViewA一样，新增ViewB和ViewBViewModel的注册，基于区域导航，\n\n代码为`container.RegisterForRegionNavigation<ViewB, ViewBViewModel>();`\n\n运行程序，ViewA和ViewB正常互相导航，基本框架完成。\n\n## 十、完整代码\n\n`MauiProgram.cs`\n\n```\nnamespace MauiPrism9Demo\n{\n    public static class MauiProgram\n    {\n        public static MauiApp CreateMauiApp()\n        {\n            var builder = MauiApp.CreateBuilder();\n            builder.UseMauiApp<App>();\n\n\n            builder.ConfigureFonts(fonts =>\n            {\n                fonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n                fonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n            });\n\n            builder.UsePrism(prism =>\n            {\n                prism.RegisterTypes(container =>\n                {\n                    container.RegisterForNavigation<MainPage>();\n                    container.RegisterForRegionNavigation<ViewA, ViewAViewModel>();\n                    container.RegisterForRegionNavigation<ViewB, ViewBViewModel>();\n                });\n                prism.OnInitialized((container) =>\n                {\n                    var regionManager = container.Resolve<IRegionManager>();\n                    regionManager.RegisterViewWithRegion(\"MainRegion\", nameof(ViewA));\n                });\n  \n                //导航到根目录\n                prism.CreateWindow(navigationService => navigationService.NavigateAsync($\"/{nameof(MainPage)}\"));\n            });\n\n\n#if DEBUG\n            builder.Logging.AddDebug();\n#endif\n\n            return builder.Build();\n        }\n    }\n}\n```\n\n`ViewA`\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentView x:Class=\"MauiPrism9Demo.Views.ViewA\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout HorizontalOptions=\"Center\" VerticalOptions=\"Center\">\n        <Label HorizontalOptions=\"Center\"\n               Text=\"ViewA\"\n               VerticalOptions=\"Center\" />\n        <Button Command=\"{Binding ToViewBCommand}\"\n                HorizontalOptions=\"Center\"\n                Text=\"ToViewBCommand\"\n                VerticalOptions=\"Center\" />\n    </VerticalStackLayout>\n</ContentView>\n\n```\n\n`ViewAViewModel`\n\n```\nnamespace MauiPrism9Demo.ViewModels\n{\n    public class ViewAViewModel(IRegionManager regionManager) : BindableBase\n    {\n        public ICommand ToViewBCommand => new DelegateCommand(() =>\n        {\n            regionManager.RequestNavigate(\"MainRegion\", nameof(ViewB));\n        });\n    }\n}\n```\n\n## 十一、模块化\n\nPrism.Maui的模块化和Prism.Wpf的模块化几乎是一样的。只需要在程序入口(`MauiProgram`)处注册模块即可。\n\n```\n     prism.ConfigureModuleCatalog(configureCatalog =>\n     {\n         configureCatalog.AddModule<CoreModule>();\n         configureCatalog.AddModule<UiModule>();\n     });\n```\n\n上面的代码添加了2个模块到应用程序中。模块只需要实现`IModule`接口即可。\n\n我这里把ViewA、ViewB包括ViewModel都移动到了UiModule中，注册视图(ViewA、ViewB)的代码都移动到了UiModule中。CoreModule是一些业务代码。\n\nUi移动到别的模块中以后，`MauiProgram`中就可以将视图的注册和程序初始化导航都移除了。最终的`MauiProgram`代码为\n\n```\nnamespace MauiPrism9Demo\n{\n    public static class MauiProgram\n    {\n        public static MauiApp CreateMauiApp()\n        {\n            var builder = MauiApp.CreateBuilder();\n            builder.UseMauiApp<App>();\n\n\n            builder.ConfigureFonts(fonts =>\n            {\n                fonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n                fonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n            });\n\n            builder.UsePrism(prism =>\n            {\n                prism.RegisterTypes(container => { container.RegisterForNavigation<MainPage>(); });\n\n                prism.ConfigureModuleCatalog(configureCatalog =>\n                {\n                    configureCatalog.AddModule<CoreModule>();\n                    configureCatalog.AddModule<UiModule>();\n                });\n\n                //导航到根目录\n                prism.CreateWindow(navigationService => navigationService.NavigateAsync($\"/{nameof(MainPage)}\"));\n            });\n\n\n#if DEBUG\n            builder.Logging.AddDebug();\n#endif\n\n            return builder.Build();\n        }\n    }\n}\n```\n\n自此，整个基础框架就搭建完成了。\n","source":"_posts/从零开始搭建Maui框架01-搭建基础框架.md","raw":"---\ntitle: 从零开始搭建Maui框架01-搭建基础框架\ndate: 2024-11-19 14:12:32\ncategories:\n\t- MAUI教程\ntags:\n\t- C#\n\t- .NET\n\t- MAUI\n\t- Prism\n---\n# 从零搭建Maui框架，基于Prism9.0\n\nPrism9.0正式版发布了，利用Prism搭建一个Maui框架。\n\n## 一、用VS模板创建Maui项目\n\n使用Visual Studio 2022及以上，创建.NET MAUI应用\n\n![1724825693606](images/从零开始搭建Maui框架/1724825693606.png)\n\n## 二、 导包\n\n导入`Prism.Maui` 和`Prism.DryIoc.Maui` 两个Nuget包\n\n![1724825979147](images/从零开始搭建Maui框架/1724825979147.png)\n\n## 三、修改Maui程序入口\n\n在`MauiProgram.cs` 中`CreateMauiApp` 方法中添加以下代码\n\n```\nbuilder.UsePrism(prism =>\n{\n    //注册MainPage到导航\n    prism.RegisterTypes(container => { container.RegisterForNavigation<MainPage>(); });\n   \n    //导航到根目录\n    prism.CreateWindow(navigationService => navigationService.NavigateAsync($\"/{nameof(MainPage)}\"));\n});\n```\n\n上面代码的作用是，注册`MainPage`到Prism的导航服务中。如果不注册，直接使用`prism.CreateWindow`方法会报错，**提示创建Root页面失败**。\n\n## 四、删除AppShell\n\n使用Prism不需要`AppShell` ，这里直接删除。\n\n在`App.xaml`文件中删除 `MainPage = new AppShell();` 代码。\n\n直接运行程序，会发现程序的行为和VS模板创建的动作行为基本是一致的。\n\n这里因为我们删除了AppShell，所以看不到Home字样。\n\n## 五、添加区域`Region`\n\n1. 将`MainPage.xaml`中的UI代码删除，新增`ContentView`控件\n2. 导入命名空间`xmlns:prism=\"http://prismlibrary.com\"`\n3. 给`ContentView`附加区域导航属性`prism:RegionManager.RegionName=\"MainRegion\"`\n4. 注释`MainPage.xaml.cs`中报错的部分\n\n`MainPage.xaml` 完整代码如下\n\n```\n<ContentPage x:Class=\"MauiPrism9Demo.MainPage\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:core=\"clr-namespace:Core;assembly=Core\"\n             xmlns:prism=\"http://prismlibrary.com\">\n\n    <ContentView prism:RegionManager.RegionName=\"MainRegion\" />\n\n\n</ContentPage>\n\n```\n\n## 六、添加新视图\n\n新增Views文件夹和ViewModels文件夹。\n\n在Views文件夹中新增一个名为`ViewA`的`.NET MAUI ContentView(XAML)`项目\n\n在ViewModels中新增名为`ViewAViewModel` 的类，并使**类继承Prism的MVVM基类`BindableBase`**\n\n![1724828119533](images/从零开始搭建Maui框架/1724828119533.png)\n\n## 七、注入新视图并导航\n\n在**程序入口**处使用Prism**基于区域注册**新的视图。\n\n代码为`container.RegisterForRegionNavigation<ViewA, ViewAViewModel>();`\n\n新增Prism加载完成后导航到ViewA的代码。\n\n```\n  prism.OnInitialized((container) =>\n  {\n      var regionManager = container.Resolve<IRegionManager>();\n      regionManager.RegisterViewWithRegion(\"MainRegion\", \"ViewA\");\n  });\n```\n\n上面这段代码是**在Prism初始化完成以后**，使用区域管理器`RegionManager` 将`ViewA`导航到`MainRegion`中。\n\n运行程序，会发现ViewA的UI已经显示在了应用程序中。\n\n## 八、区域导航\n\n重复第六条，新增ViewB和ViewBViewModel。\n\n在ViewB中添加一个按钮，绑定命令为ToViewACommand。\n\n```\n <Button Command=\"{Binding ToViewACommand}\"\n         HorizontalOptions=\"Center\"\n         Text=\"GoBack\"\n         VerticalOptions=\"Center\" />\n```\n\n在ViewBViewModel中新增一个返回值为`ICommand`的方法，代码如下\n\n```\n public ICommand ToViewACommand => new DelegateCommand(() =>\n {\n     regionManager.RequestNavigate(\"MainRegion\", nameof(ViewA));\n });\n```\n\n**同样在ViewA和ViewAViewModel中新增ToViewB的按钮和Command。**\n\n## 九、注册区域导航\n\n在程序入口文件`MauiProgram` 中，像注册ViewA一样，新增ViewB和ViewBViewModel的注册，基于区域导航，\n\n代码为`container.RegisterForRegionNavigation<ViewB, ViewBViewModel>();`\n\n运行程序，ViewA和ViewB正常互相导航，基本框架完成。\n\n## 十、完整代码\n\n`MauiProgram.cs`\n\n```\nnamespace MauiPrism9Demo\n{\n    public static class MauiProgram\n    {\n        public static MauiApp CreateMauiApp()\n        {\n            var builder = MauiApp.CreateBuilder();\n            builder.UseMauiApp<App>();\n\n\n            builder.ConfigureFonts(fonts =>\n            {\n                fonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n                fonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n            });\n\n            builder.UsePrism(prism =>\n            {\n                prism.RegisterTypes(container =>\n                {\n                    container.RegisterForNavigation<MainPage>();\n                    container.RegisterForRegionNavigation<ViewA, ViewAViewModel>();\n                    container.RegisterForRegionNavigation<ViewB, ViewBViewModel>();\n                });\n                prism.OnInitialized((container) =>\n                {\n                    var regionManager = container.Resolve<IRegionManager>();\n                    regionManager.RegisterViewWithRegion(\"MainRegion\", nameof(ViewA));\n                });\n  \n                //导航到根目录\n                prism.CreateWindow(navigationService => navigationService.NavigateAsync($\"/{nameof(MainPage)}\"));\n            });\n\n\n#if DEBUG\n            builder.Logging.AddDebug();\n#endif\n\n            return builder.Build();\n        }\n    }\n}\n```\n\n`ViewA`\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentView x:Class=\"MauiPrism9Demo.Views.ViewA\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout HorizontalOptions=\"Center\" VerticalOptions=\"Center\">\n        <Label HorizontalOptions=\"Center\"\n               Text=\"ViewA\"\n               VerticalOptions=\"Center\" />\n        <Button Command=\"{Binding ToViewBCommand}\"\n                HorizontalOptions=\"Center\"\n                Text=\"ToViewBCommand\"\n                VerticalOptions=\"Center\" />\n    </VerticalStackLayout>\n</ContentView>\n\n```\n\n`ViewAViewModel`\n\n```\nnamespace MauiPrism9Demo.ViewModels\n{\n    public class ViewAViewModel(IRegionManager regionManager) : BindableBase\n    {\n        public ICommand ToViewBCommand => new DelegateCommand(() =>\n        {\n            regionManager.RequestNavigate(\"MainRegion\", nameof(ViewB));\n        });\n    }\n}\n```\n\n## 十一、模块化\n\nPrism.Maui的模块化和Prism.Wpf的模块化几乎是一样的。只需要在程序入口(`MauiProgram`)处注册模块即可。\n\n```\n     prism.ConfigureModuleCatalog(configureCatalog =>\n     {\n         configureCatalog.AddModule<CoreModule>();\n         configureCatalog.AddModule<UiModule>();\n     });\n```\n\n上面的代码添加了2个模块到应用程序中。模块只需要实现`IModule`接口即可。\n\n我这里把ViewA、ViewB包括ViewModel都移动到了UiModule中，注册视图(ViewA、ViewB)的代码都移动到了UiModule中。CoreModule是一些业务代码。\n\nUi移动到别的模块中以后，`MauiProgram`中就可以将视图的注册和程序初始化导航都移除了。最终的`MauiProgram`代码为\n\n```\nnamespace MauiPrism9Demo\n{\n    public static class MauiProgram\n    {\n        public static MauiApp CreateMauiApp()\n        {\n            var builder = MauiApp.CreateBuilder();\n            builder.UseMauiApp<App>();\n\n\n            builder.ConfigureFonts(fonts =>\n            {\n                fonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n                fonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n            });\n\n            builder.UsePrism(prism =>\n            {\n                prism.RegisterTypes(container => { container.RegisterForNavigation<MainPage>(); });\n\n                prism.ConfigureModuleCatalog(configureCatalog =>\n                {\n                    configureCatalog.AddModule<CoreModule>();\n                    configureCatalog.AddModule<UiModule>();\n                });\n\n                //导航到根目录\n                prism.CreateWindow(navigationService => navigationService.NavigateAsync($\"/{nameof(MainPage)}\"));\n            });\n\n\n#if DEBUG\n            builder.Logging.AddDebug();\n#endif\n\n            return builder.Build();\n        }\n    }\n}\n```\n\n自此，整个基础框架就搭建完成了。\n","slug":"从零开始搭建Maui框架01-搭建基础框架","published":1,"updated":"2024-11-19T08:37:39.369Z","_id":"cm3o28urb00003kv481uq1dir","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"从零搭建Maui框架，基于Prism9-0\"><a href=\"#从零搭建Maui框架，基于Prism9-0\" class=\"headerlink\" title=\"从零搭建Maui框架，基于Prism9.0\"></a>从零搭建Maui框架，基于Prism9.0</h1><p>Prism9.0正式版发布了，利用Prism搭建一个Maui框架。</p>\n<h2 id=\"一、用VS模板创建Maui项目\"><a href=\"#一、用VS模板创建Maui项目\" class=\"headerlink\" title=\"一、用VS模板创建Maui项目\"></a>一、用VS模板创建Maui项目</h2><p>使用Visual Studio 2022及以上，创建.NET MAUI应用</p>\n<p><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAMaui%E6%A1%86%E6%9E%B6/1724825693606.png\" alt=\"1724825693606\"></p>\n<h2 id=\"二、-导包\"><a href=\"#二、-导包\" class=\"headerlink\" title=\"二、 导包\"></a>二、 导包</h2><p>导入<code>Prism.Maui</code> 和<code>Prism.DryIoc.Maui</code> 两个Nuget包</p>\n<p><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAMaui%E6%A1%86%E6%9E%B6/1724825979147.png\" alt=\"1724825979147\"></p>\n<h2 id=\"三、修改Maui程序入口\"><a href=\"#三、修改Maui程序入口\" class=\"headerlink\" title=\"三、修改Maui程序入口\"></a>三、修改Maui程序入口</h2><p>在<code>MauiProgram.cs</code> 中<code>CreateMauiApp</code> 方法中添加以下代码</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arcade\">builder.UsePrism(<span class=\"hljs-function\"><span class=\"hljs-params\">prism</span> =&gt;</span><br>&#123;<br>    <span class=\"hljs-comment\">//注册MainPage到导航</span><br>    prism.RegisterTypes(<span class=\"hljs-function\"><span class=\"hljs-params\">container</span> =&gt;</span> &#123; container.RegisterForNavigation&lt;MainPage&gt;(); &#125;);<br>   <br>    <span class=\"hljs-comment\">//导航到根目录</span><br>    prism.CreateWindow(<span class=\"hljs-function\"><span class=\"hljs-params\">navigationService</span> =&gt;</span> navigationService.NavigateAsync($<span class=\"hljs-string\">&quot;/&#123;nameof(MainPage)&#125;&quot;</span>));<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<p>上面代码的作用是，注册<code>MainPage</code>到Prism的导航服务中。如果不注册，直接使用<code>prism.CreateWindow</code>方法会报错，<strong>提示创建Root页面失败</strong>。</p>\n<h2 id=\"四、删除AppShell\"><a href=\"#四、删除AppShell\" class=\"headerlink\" title=\"四、删除AppShell\"></a>四、删除AppShell</h2><p>使用Prism不需要<code>AppShell</code> ，这里直接删除。</p>\n<p>在<code>App.xaml</code>文件中删除 <code>MainPage = new AppShell();</code> 代码。</p>\n<p>直接运行程序，会发现程序的行为和VS模板创建的动作行为基本是一致的。</p>\n<p>这里因为我们删除了AppShell，所以看不到Home字样。</p>\n<h2 id=\"五、添加区域Region\"><a href=\"#五、添加区域Region\" class=\"headerlink\" title=\"五、添加区域Region\"></a>五、添加区域<code>Region</code></h2><ol>\n<li>将<code>MainPage.xaml</code>中的UI代码删除，新增<code>ContentView</code>控件</li>\n<li>导入命名空间<code>xmlns:prism=&quot;http://prismlibrary.com&quot;</code></li>\n<li>给<code>ContentView</code>附加区域导航属性<code>prism:RegionManager.RegionName=&quot;MainRegion&quot;</code></li>\n<li>注释<code>MainPage.xaml.cs</code>中报错的部分</li>\n</ol>\n<p><code>MainPage.xaml</code> 完整代码如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentPage</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;MauiPrism9Demo.MainPage&quot;</span></span><br><span class=\"hljs-tag\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span><br><span class=\"hljs-tag\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span><br><span class=\"hljs-tag\">             <span class=\"hljs-attr\">xmlns:core</span>=<span class=\"hljs-string\">&quot;clr-namespace:Core;assembly=Core&quot;</span></span><br><span class=\"hljs-tag\">             <span class=\"hljs-attr\">xmlns:prism</span>=<span class=\"hljs-string\">&quot;http://prismlibrary.com&quot;</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">prism:RegionManager.RegionName</span>=<span class=\"hljs-string\">&quot;MainRegion&quot;</span> /&gt;</span><br><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentPage</span>&gt;</span><br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"六、添加新视图\"><a href=\"#六、添加新视图\" class=\"headerlink\" title=\"六、添加新视图\"></a>六、添加新视图</h2><p>新增Views文件夹和ViewModels文件夹。</p>\n<p>在Views文件夹中新增一个名为<code>ViewA</code>的<code>.NET MAUI ContentView(XAML)</code>项目</p>\n<p>在ViewModels中新增名为<code>ViewAViewModel</code> 的类，并使<strong>类继承Prism的MVVM基类<code>BindableBase</code></strong></p>\n<p><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAMaui%E6%A1%86%E6%9E%B6/1724828119533.png\" alt=\"1724828119533\"></p>\n<h2 id=\"七、注入新视图并导航\"><a href=\"#七、注入新视图并导航\" class=\"headerlink\" title=\"七、注入新视图并导航\"></a>七、注入新视图并导航</h2><p>在<strong>程序入口</strong>处使用Prism<strong>基于区域注册</strong>新的视图。</p>\n<p>代码为<code>container.RegisterForRegionNavigation&lt;ViewA, ViewAViewModel&gt;();</code></p>\n<p>新增Prism加载完成后导航到ViewA的代码。</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arcade\">prism.OnInitialized(<span class=\"hljs-function\">(<span class=\"hljs-params\">container</span>) =&gt;</span><br>&#123;<br>    <span class=\"hljs-keyword\">var</span> regionManager = container.Resolve&lt;IRegionManager&gt;();<br>    regionManager.RegisterViewWithRegion(<span class=\"hljs-string\">&quot;MainRegion&quot;</span>, <span class=\"hljs-string\">&quot;ViewA&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<p>上面这段代码是<strong>在Prism初始化完成以后</strong>，使用区域管理器<code>RegionManager</code> 将<code>ViewA</code>导航到<code>MainRegion</code>中。</p>\n<p>运行程序，会发现ViewA的UI已经显示在了应用程序中。</p>\n<h2 id=\"八、区域导航\"><a href=\"#八、区域导航\" class=\"headerlink\" title=\"八、区域导航\"></a>八、区域导航</h2><p>重复第六条，新增ViewB和ViewBViewModel。</p>\n<p>在ViewB中添加一个按钮，绑定命令为ToViewACommand。</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\">&lt;Button Command<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;&#123;Binding ToViewACommand&#125;&quot;</span><br>        HorizontalOptions<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;Center&quot;</span><br>        Text<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;GoBack&quot;</span><br>        VerticalOptions<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;<br></code></pre></td></tr></table></figure>\n\n<p>在ViewBViewModel中新增一个返回值为<code>ICommand</code>的方法，代码如下</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coffeescript\">public ICommand ToViewACommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span><br>&#123;<br>    regionManager.RequestNavigate(<span class=\"hljs-string\">&quot;MainRegion&quot;</span>, nameof(ViewA));<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<p><strong>同样在ViewA和ViewAViewModel中新增ToViewB的按钮和Command。</strong></p>\n<h2 id=\"九、注册区域导航\"><a href=\"#九、注册区域导航\" class=\"headerlink\" title=\"九、注册区域导航\"></a>九、注册区域导航</h2><p>在程序入口文件<code>MauiProgram</code> 中，像注册ViewA一样，新增ViewB和ViewBViewModel的注册，基于区域导航，</p>\n<p>代码为<code>container.RegisterForRegionNavigation&lt;ViewB, ViewBViewModel&gt;();</code></p>\n<p>运行程序，ViewA和ViewB正常互相导航，基本框架完成。</p>\n<h2 id=\"十、完整代码\"><a href=\"#十、完整代码\" class=\"headerlink\" title=\"十、完整代码\"></a>十、完整代码</h2><p><code>MauiProgram.cs</code></p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs axapta\"><span class=\"hljs-keyword\">namespace</span> MauiPrism9Demo<br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MauiProgram</span><br>    &#123;<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> MauiApp CreateMauiApp()<br>        &#123;<br>            <span class=\"hljs-built_in\">var</span> builder = MauiApp.CreateBuilder();<br>            builder.UseMauiApp&lt;App&gt;();<br><br><br>            builder.ConfigureFonts(fonts =&gt;<br>            &#123;<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Regular.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansRegular&quot;</span>);<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Semibold.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansSemibold&quot;</span>);<br>            &#125;);<br><br>            builder.UsePrism(prism =&gt;<br>            &#123;<br>                prism.RegisterTypes(<span class=\"hljs-built_in\">container</span> =&gt;<br>                &#123;<br>                    <span class=\"hljs-built_in\">container</span>.RegisterForNavigation&lt;MainPage&gt;();<br>                    <span class=\"hljs-built_in\">container</span>.RegisterForRegionNavigation&lt;ViewA, ViewAViewModel&gt;();<br>                    <span class=\"hljs-built_in\">container</span>.RegisterForRegionNavigation&lt;ViewB, ViewBViewModel&gt;();<br>                &#125;);<br>                prism.OnInitialized((<span class=\"hljs-built_in\">container</span>) =&gt;<br>                &#123;<br>                    <span class=\"hljs-built_in\">var</span> regionManager = <span class=\"hljs-built_in\">container</span>.Resolve&lt;IRegionManager&gt;();<br>                    regionManager.RegisterViewWithRegion(<span class=\"hljs-string\">&quot;MainRegion&quot;</span>, nameof(ViewA));<br>                &#125;);<br>  <br>                <span class=\"hljs-comment\">//导航到根目录</span><br>                prism.CreateWindow(navigationService =&gt; navigationService.NavigateAsync($<span class=\"hljs-string\">&quot;/&#123;nameof(MainPage)&#125;&quot;</span>));<br>            &#125;);<br><br><br><span class=\"hljs-meta\">#if DEBUG</span><br>            builder.Logging.AddDebug();<br><span class=\"hljs-meta\">#endif</span><br><br>            <span class=\"hljs-keyword\">return</span> builder.Build();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p><code>ViewA</code></p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;MauiPrism9Demo.Views.ViewA&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span>&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ViewA&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">Command</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding ToViewBCommand&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ToViewBCommand&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p><code>ViewAViewModel</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">namespace</span> MauiPrism9Demo.ViewModels<br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewAViewModel</span><span class=\"hljs-params\">(IRegionManager regionManager)</span> : BindableBase</span><br><span class=\"hljs-function\">    &#123;</span><br>        <span class=\"hljs-keyword\">public</span> ICommand ToViewBCommand =&gt; <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">DelegateCommand</span>(() =&gt;<br>        &#123;<br>            regionManager.<span class=\"hljs-built_in\">RequestNavigate</span>(<span class=\"hljs-string\">&quot;MainRegion&quot;</span>, <span class=\"hljs-built_in\">nameof</span>(ViewB));<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"十一、模块化\"><a href=\"#十一、模块化\" class=\"headerlink\" title=\"十一、模块化\"></a>十一、模块化</h2><p>Prism.Maui的模块化和Prism.Wpf的模块化几乎是一样的。只需要在程序入口(<code>MauiProgram</code>)处注册模块即可。</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\">prism.ConfigureModuleCatalog(configureCatalog <span class=\"hljs-operator\">=</span>&gt;<br>&#123;<br>    configureCatalog.AddModule&lt;CoreModule&gt;()<span class=\"hljs-comment\">;</span><br>    configureCatalog.AddModule&lt;UiModule&gt;()<span class=\"hljs-comment\">;</span><br>&#125;)<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<p>上面的代码添加了2个模块到应用程序中。模块只需要实现<code>IModule</code>接口即可。</p>\n<p>我这里把ViewA、ViewB包括ViewModel都移动到了UiModule中，注册视图(ViewA、ViewB)的代码都移动到了UiModule中。CoreModule是一些业务代码。</p>\n<p>Ui移动到别的模块中以后，<code>MauiProgram</code>中就可以将视图的注册和程序初始化导航都移除了。最终的<code>MauiProgram</code>代码为</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">MauiPrism9Demo</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MauiProgram</span><br>    &#123;<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> MauiApp <span class=\"hljs-title\">CreateMauiApp</span>()</span><br>        &#123;<br>            <span class=\"hljs-keyword\">var</span> builder = MauiApp.CreateBuilder();<br>            builder.UseMauiApp&lt;App&gt;();<br><br><br>            builder.ConfigureFonts(fonts =&gt;<br>            &#123;<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Regular.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansRegular&quot;</span>);<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Semibold.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansSemibold&quot;</span>);<br>            &#125;);<br><br>            builder.UsePrism(prism =&gt;<br>            &#123;<br>                prism.RegisterTypes(container =&gt; &#123; container.RegisterForNavigation&lt;MainPage&gt;(); &#125;);<br><br>                prism.ConfigureModuleCatalog(configureCatalog =&gt;<br>                &#123;<br>                    configureCatalog.AddModule&lt;CoreModule&gt;();<br>                    configureCatalog.AddModule&lt;UiModule&gt;();<br>                &#125;);<br><br>                <span class=\"hljs-comment\">//导航到根目录</span><br>                prism.CreateWindow(navigationService =&gt; navigationService.NavigateAsync(<span class=\"hljs-string\">$&quot;/<span class=\"hljs-subst\">&#123;<span class=\"hljs-keyword\">nameof</span>(MainPage)&#125;</span>&quot;</span>));<br>            &#125;);<br><br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> DEBUG</span><br>            builder.Logging.AddDebug();<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br>            <span class=\"hljs-keyword\">return</span> builder.Build();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>自此，整个基础框架就搭建完成了。</p>\n","excerpt":"","more":"<h1 id=\"从零搭建Maui框架，基于Prism9-0\"><a href=\"#从零搭建Maui框架，基于Prism9-0\" class=\"headerlink\" title=\"从零搭建Maui框架，基于Prism9.0\"></a>从零搭建Maui框架，基于Prism9.0</h1><p>Prism9.0正式版发布了，利用Prism搭建一个Maui框架。</p>\n<h2 id=\"一、用VS模板创建Maui项目\"><a href=\"#一、用VS模板创建Maui项目\" class=\"headerlink\" title=\"一、用VS模板创建Maui项目\"></a>一、用VS模板创建Maui项目</h2><p>使用Visual Studio 2022及以上，创建.NET MAUI应用</p>\n<p><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAMaui%E6%A1%86%E6%9E%B6/1724825693606.png\" alt=\"1724825693606\"></p>\n<h2 id=\"二、-导包\"><a href=\"#二、-导包\" class=\"headerlink\" title=\"二、 导包\"></a>二、 导包</h2><p>导入<code>Prism.Maui</code> 和<code>Prism.DryIoc.Maui</code> 两个Nuget包</p>\n<p><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAMaui%E6%A1%86%E6%9E%B6/1724825979147.png\" alt=\"1724825979147\"></p>\n<h2 id=\"三、修改Maui程序入口\"><a href=\"#三、修改Maui程序入口\" class=\"headerlink\" title=\"三、修改Maui程序入口\"></a>三、修改Maui程序入口</h2><p>在<code>MauiProgram.cs</code> 中<code>CreateMauiApp</code> 方法中添加以下代码</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arcade\">builder.UsePrism(<span class=\"hljs-function\"><span class=\"hljs-params\">prism</span> =&gt;</span><br>&#123;<br>    <span class=\"hljs-comment\">//注册MainPage到导航</span><br>    prism.RegisterTypes(<span class=\"hljs-function\"><span class=\"hljs-params\">container</span> =&gt;</span> &#123; container.RegisterForNavigation&lt;MainPage&gt;(); &#125;);<br>   <br>    <span class=\"hljs-comment\">//导航到根目录</span><br>    prism.CreateWindow(<span class=\"hljs-function\"><span class=\"hljs-params\">navigationService</span> =&gt;</span> navigationService.NavigateAsync($<span class=\"hljs-string\">&quot;/&#123;nameof(MainPage)&#125;&quot;</span>));<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<p>上面代码的作用是，注册<code>MainPage</code>到Prism的导航服务中。如果不注册，直接使用<code>prism.CreateWindow</code>方法会报错，<strong>提示创建Root页面失败</strong>。</p>\n<h2 id=\"四、删除AppShell\"><a href=\"#四、删除AppShell\" class=\"headerlink\" title=\"四、删除AppShell\"></a>四、删除AppShell</h2><p>使用Prism不需要<code>AppShell</code> ，这里直接删除。</p>\n<p>在<code>App.xaml</code>文件中删除 <code>MainPage = new AppShell();</code> 代码。</p>\n<p>直接运行程序，会发现程序的行为和VS模板创建的动作行为基本是一致的。</p>\n<p>这里因为我们删除了AppShell，所以看不到Home字样。</p>\n<h2 id=\"五、添加区域Region\"><a href=\"#五、添加区域Region\" class=\"headerlink\" title=\"五、添加区域Region\"></a>五、添加区域<code>Region</code></h2><ol>\n<li>将<code>MainPage.xaml</code>中的UI代码删除，新增<code>ContentView</code>控件</li>\n<li>导入命名空间<code>xmlns:prism=&quot;http://prismlibrary.com&quot;</code></li>\n<li>给<code>ContentView</code>附加区域导航属性<code>prism:RegionManager.RegionName=&quot;MainRegion&quot;</code></li>\n<li>注释<code>MainPage.xaml.cs</code>中报错的部分</li>\n</ol>\n<p><code>MainPage.xaml</code> 完整代码如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentPage</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;MauiPrism9Demo.MainPage&quot;</span></span><br><span class=\"hljs-tag\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span><br><span class=\"hljs-tag\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span><br><span class=\"hljs-tag\">             <span class=\"hljs-attr\">xmlns:core</span>=<span class=\"hljs-string\">&quot;clr-namespace:Core;assembly=Core&quot;</span></span><br><span class=\"hljs-tag\">             <span class=\"hljs-attr\">xmlns:prism</span>=<span class=\"hljs-string\">&quot;http://prismlibrary.com&quot;</span>&gt;</span><br><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">prism:RegionManager.RegionName</span>=<span class=\"hljs-string\">&quot;MainRegion&quot;</span> /&gt;</span><br><br><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentPage</span>&gt;</span><br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"六、添加新视图\"><a href=\"#六、添加新视图\" class=\"headerlink\" title=\"六、添加新视图\"></a>六、添加新视图</h2><p>新增Views文件夹和ViewModels文件夹。</p>\n<p>在Views文件夹中新增一个名为<code>ViewA</code>的<code>.NET MAUI ContentView(XAML)</code>项目</p>\n<p>在ViewModels中新增名为<code>ViewAViewModel</code> 的类，并使<strong>类继承Prism的MVVM基类<code>BindableBase</code></strong></p>\n<p><img src=\"/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BAMaui%E6%A1%86%E6%9E%B6/1724828119533.png\" alt=\"1724828119533\"></p>\n<h2 id=\"七、注入新视图并导航\"><a href=\"#七、注入新视图并导航\" class=\"headerlink\" title=\"七、注入新视图并导航\"></a>七、注入新视图并导航</h2><p>在<strong>程序入口</strong>处使用Prism<strong>基于区域注册</strong>新的视图。</p>\n<p>代码为<code>container.RegisterForRegionNavigation&lt;ViewA, ViewAViewModel&gt;();</code></p>\n<p>新增Prism加载完成后导航到ViewA的代码。</p>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arcade\">prism.OnInitialized(<span class=\"hljs-function\">(<span class=\"hljs-params\">container</span>) =&gt;</span><br>&#123;<br>    <span class=\"hljs-keyword\">var</span> regionManager = container.Resolve&lt;IRegionManager&gt;();<br>    regionManager.RegisterViewWithRegion(<span class=\"hljs-string\">&quot;MainRegion&quot;</span>, <span class=\"hljs-string\">&quot;ViewA&quot;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<p>上面这段代码是<strong>在Prism初始化完成以后</strong>，使用区域管理器<code>RegionManager</code> 将<code>ViewA</code>导航到<code>MainRegion</code>中。</p>\n<p>运行程序，会发现ViewA的UI已经显示在了应用程序中。</p>\n<h2 id=\"八、区域导航\"><a href=\"#八、区域导航\" class=\"headerlink\" title=\"八、区域导航\"></a>八、区域导航</h2><p>重复第六条，新增ViewB和ViewBViewModel。</p>\n<p>在ViewB中添加一个按钮，绑定命令为ToViewACommand。</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\">&lt;Button Command<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;&#123;Binding ToViewACommand&#125;&quot;</span><br>        HorizontalOptions<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;Center&quot;</span><br>        Text<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;GoBack&quot;</span><br>        VerticalOptions<span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;<br></code></pre></td></tr></table></figure>\n\n<p>在ViewBViewModel中新增一个返回值为<code>ICommand</code>的方法，代码如下</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coffeescript\">public ICommand ToViewACommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span><br>&#123;<br>    regionManager.RequestNavigate(<span class=\"hljs-string\">&quot;MainRegion&quot;</span>, nameof(ViewA));<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n<p><strong>同样在ViewA和ViewAViewModel中新增ToViewB的按钮和Command。</strong></p>\n<h2 id=\"九、注册区域导航\"><a href=\"#九、注册区域导航\" class=\"headerlink\" title=\"九、注册区域导航\"></a>九、注册区域导航</h2><p>在程序入口文件<code>MauiProgram</code> 中，像注册ViewA一样，新增ViewB和ViewBViewModel的注册，基于区域导航，</p>\n<p>代码为<code>container.RegisterForRegionNavigation&lt;ViewB, ViewBViewModel&gt;();</code></p>\n<p>运行程序，ViewA和ViewB正常互相导航，基本框架完成。</p>\n<h2 id=\"十、完整代码\"><a href=\"#十、完整代码\" class=\"headerlink\" title=\"十、完整代码\"></a>十、完整代码</h2><p><code>MauiProgram.cs</code></p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs axapta\"><span class=\"hljs-keyword\">namespace</span> MauiPrism9Demo<br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MauiProgram</span><br>    &#123;<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> MauiApp CreateMauiApp()<br>        &#123;<br>            <span class=\"hljs-built_in\">var</span> builder = MauiApp.CreateBuilder();<br>            builder.UseMauiApp&lt;App&gt;();<br><br><br>            builder.ConfigureFonts(fonts =&gt;<br>            &#123;<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Regular.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansRegular&quot;</span>);<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Semibold.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansSemibold&quot;</span>);<br>            &#125;);<br><br>            builder.UsePrism(prism =&gt;<br>            &#123;<br>                prism.RegisterTypes(<span class=\"hljs-built_in\">container</span> =&gt;<br>                &#123;<br>                    <span class=\"hljs-built_in\">container</span>.RegisterForNavigation&lt;MainPage&gt;();<br>                    <span class=\"hljs-built_in\">container</span>.RegisterForRegionNavigation&lt;ViewA, ViewAViewModel&gt;();<br>                    <span class=\"hljs-built_in\">container</span>.RegisterForRegionNavigation&lt;ViewB, ViewBViewModel&gt;();<br>                &#125;);<br>                prism.OnInitialized((<span class=\"hljs-built_in\">container</span>) =&gt;<br>                &#123;<br>                    <span class=\"hljs-built_in\">var</span> regionManager = <span class=\"hljs-built_in\">container</span>.Resolve&lt;IRegionManager&gt;();<br>                    regionManager.RegisterViewWithRegion(<span class=\"hljs-string\">&quot;MainRegion&quot;</span>, nameof(ViewA));<br>                &#125;);<br>  <br>                <span class=\"hljs-comment\">//导航到根目录</span><br>                prism.CreateWindow(navigationService =&gt; navigationService.NavigateAsync($<span class=\"hljs-string\">&quot;/&#123;nameof(MainPage)&#125;&quot;</span>));<br>            &#125;);<br><br><br><span class=\"hljs-meta\">#if DEBUG</span><br>            builder.Logging.AddDebug();<br><span class=\"hljs-meta\">#endif</span><br><br>            <span class=\"hljs-keyword\">return</span> builder.Build();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p><code>ViewA</code></p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;MauiPrism9Demo.Views.ViewA&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span>&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ViewA&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">Command</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding ToViewBCommand&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ToViewBCommand&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p><code>ViewAViewModel</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\"><span class=\"hljs-keyword\">namespace</span> MauiPrism9Demo.ViewModels<br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewAViewModel</span><span class=\"hljs-params\">(IRegionManager regionManager)</span> : BindableBase</span><br><span class=\"hljs-function\">    &#123;</span><br>        <span class=\"hljs-keyword\">public</span> ICommand ToViewBCommand =&gt; <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">DelegateCommand</span>(() =&gt;<br>        &#123;<br>            regionManager.<span class=\"hljs-built_in\">RequestNavigate</span>(<span class=\"hljs-string\">&quot;MainRegion&quot;</span>, <span class=\"hljs-built_in\">nameof</span>(ViewB));<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"十一、模块化\"><a href=\"#十一、模块化\" class=\"headerlink\" title=\"十一、模块化\"></a>十一、模块化</h2><p>Prism.Maui的模块化和Prism.Wpf的模块化几乎是一样的。只需要在程序入口(<code>MauiProgram</code>)处注册模块即可。</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs abnf\">prism.ConfigureModuleCatalog(configureCatalog <span class=\"hljs-operator\">=</span>&gt;<br>&#123;<br>    configureCatalog.AddModule&lt;CoreModule&gt;()<span class=\"hljs-comment\">;</span><br>    configureCatalog.AddModule&lt;UiModule&gt;()<span class=\"hljs-comment\">;</span><br>&#125;)<span class=\"hljs-comment\">;</span><br></code></pre></td></tr></table></figure>\n\n<p>上面的代码添加了2个模块到应用程序中。模块只需要实现<code>IModule</code>接口即可。</p>\n<p>我这里把ViewA、ViewB包括ViewModel都移动到了UiModule中，注册视图(ViewA、ViewB)的代码都移动到了UiModule中。CoreModule是一些业务代码。</p>\n<p>Ui移动到别的模块中以后，<code>MauiProgram</code>中就可以将视图的注册和程序初始化导航都移除了。最终的<code>MauiProgram</code>代码为</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">MauiPrism9Demo</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MauiProgram</span><br>    &#123;<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> MauiApp <span class=\"hljs-title\">CreateMauiApp</span>()</span><br>        &#123;<br>            <span class=\"hljs-keyword\">var</span> builder = MauiApp.CreateBuilder();<br>            builder.UseMauiApp&lt;App&gt;();<br><br><br>            builder.ConfigureFonts(fonts =&gt;<br>            &#123;<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Regular.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansRegular&quot;</span>);<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Semibold.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansSemibold&quot;</span>);<br>            &#125;);<br><br>            builder.UsePrism(prism =&gt;<br>            &#123;<br>                prism.RegisterTypes(container =&gt; &#123; container.RegisterForNavigation&lt;MainPage&gt;(); &#125;);<br><br>                prism.ConfigureModuleCatalog(configureCatalog =&gt;<br>                &#123;<br>                    configureCatalog.AddModule&lt;CoreModule&gt;();<br>                    configureCatalog.AddModule&lt;UiModule&gt;();<br>                &#125;);<br><br>                <span class=\"hljs-comment\">//导航到根目录</span><br>                prism.CreateWindow(navigationService =&gt; navigationService.NavigateAsync(<span class=\"hljs-string\">$&quot;/<span class=\"hljs-subst\">&#123;<span class=\"hljs-keyword\">nameof</span>(MainPage)&#125;</span>&quot;</span>));<br>            &#125;);<br><br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> DEBUG</span><br>            builder.Logging.AddDebug();<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br>            <span class=\"hljs-keyword\">return</span> builder.Build();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>自此，整个基础框架就搭建完成了。</p>\n"},{"title":"从零开始搭建Maui框架03-添加事件聚合器","date":"2024-11-19T06:18:32.000Z","_content":"# 从零开始搭建Maui框架03-添加事件聚合器\n\n## 一、事件聚合器：实现组件间松耦合通信的利器\n\n**事件聚合器**（Event Aggregator）是一种设计模式，它提供了一种在应用程序中不同组件之间进行通信的机制，而无需这些组件之间存在直接的耦合。这种模式通过发布-订阅模式实现，允许一个组件（发布者）发布事件，而其他感兴趣的组件（订阅者）可以订阅这些事件并做出相应的响应。\n\n### 事件聚合器的核心概念\n\n* **发布者（Publisher）**：产生事件的组件。\n* **订阅者（Subscriber）**：对特定事件感兴趣的组件。\n* **事件（Event）**：发布者发布的信息，订阅者订阅的对象。\n* **事件聚合器**：一个中央枢纽，负责管理事件的发布和订阅。\n\n### 事件聚合器的优势\n\n* **松耦合**：组件之间不需要知道彼此的存在，只需要关注事件本身。\n* **可扩展性**：新的组件可以很容易地订阅已有的事件，或者发布新的事件。\n* **可测试性**：组件可以独立地进行测试，因为它们之间的交互是通过事件进行的。\n* **复用性**：事件可以被多个订阅者订阅，从而提高代码的复用性。\n\n### 事件聚合器的应用场景\n\n* **用户界面**：不同的用户界面元素可以通过事件进行通信，例如按钮点击事件、文本框内容变化事件等。\n* **模块间通信**：不同的模块可以通过事件进行交互，例如数据加载完成事件、错误发生事件等。\n* **异步操作**：事件可以用于在异步操作完成后通知其他组件。\n\n### 事件聚合器的实现\n\n事件聚合器的实现方式有很多种，但它们的基本原理都是相同的。通常，事件聚合器会提供以下接口：\n\n* **订阅事件**：订阅者通过调用事件聚合器的订阅方法来订阅特定的事件。\n* **发布事件**：发布者通过调用事件聚合器的发布方法来发布事件。\n* **取消订阅**：订阅者可以随时取消对某个事件的订阅。\n\n下面我们基于之前的代码添加事件聚合器。\n\n## 二、添加DTO\n\nDTO（Data Transfer Object，数据传输对象）。\n\n新建一个Dto来传输事件的内容信息。\n\n在`Core`类库中，新增文件夹Dtos，新增类`EventTestDto`，新增两个自动属性，代码如下\n\n```\nusing Core.Abstracts;\n\nnamespace Core.Dtos\n{\n    public class EventTestDto : IEventTest\n    {\n        #region Implementation of IEventTest\n\n        /// <summary>Initializes a new instance of the <see cref=\"T:System.Object\" /> class.</summary>\n        public EventTestDto(string title, string content)\n        {\n            Title = title;\n            Content = content;\n        }\n\n        public string Title { get; set; }\n        public string Content { get; set; }\n\n        #endregion\n    }\n}\n\n```\n\n在这个类中，我们添加了两个`string`类型的自动属性，`Title、Content`,并添加了构造函数。IEventTest是这两个字段的接口，这里使用接口是为了方便后面接入数据库做准备。\n\n代码如下\n\n```\nnamespace Core.Abstracts\n{\n    public interface IEventTest\n    {\n        string Title { get; set; }\n\n        string Content { get; set; }\n    }\n}\n\n```\n\n## 三、新增EventTest事件\n\n在`Core`类库中新增Events文件夹，并新增类文件EventTest，继承自类`PubSubEvent`代码如下\n\n```\nusing Core.Dtos;\n\nnamespace Core.Events\n{\n    public class EventTest : PubSubEvent<EventTestDto>\n    {\n    }\n}\n\n```\n\n## 四、添加事件发出者和订阅者\n\n### 修改应用程序布局\n\n为了更直观的查看事件聚合器带来的效果，我们先修改应用程序布局\n\n在`MauiPrism9Demo`中，修改`MainPage`文件，修改后的代码如下\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage x:Class=\"MauiPrism9Demo.MainPage\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:core=\"clr-namespace:Core;assembly=Core\"\n             xmlns:prism=\"http://prismlibrary.com\">\n\n    <Grid RowDefinitions=\"*,*\">\n        <ContentView Grid.Row=\"0\" prism:RegionManager.RegionName=\"{x:Static core:RegionNames.MainRegion}\" />\n        <ContentView Grid.Row=\"1\" prism:RegionManager.RegionName=\"{x:Static core:RegionNames.ContentRegion}\" />\n    </Grid>\n\n\n\n</ContentPage>\n\n```\n\n这里是将原来的只有一个区域变成两个等分的区域，其中的`RegionNames`是为了方便，以及导航的准确性，新增的导航区域标注类，这个类也是放在`Core`中，代码如下\n\n```\nnamespace Core\n{\n    public static class RegionNames\n    {\n        public const string MainRegion = nameof(MainRegion);\n        public const string ContentRegion = nameof(ContentRegion);\n    }\n}\n\n```\n\n### 修改UIModule\n\n原来我们使用ViewA作为应用程序的首页，现在我们修改UIModule，同时将ViewA和ViewB都显示出来。\n\n在`UIModule`的`OnInitialized`方法中，新增导航将ViewB导航到ContentRegion，代码如下\n\n```\n  regionManager.RegisterViewWithRegion(RegionNames.ContentRegion, nameof(ViewB));\n```\n\n完整的UiModule代码如下\n\n```\nusing Core;\nusing Core.Extensions;\nusing System.Reflection;\nusing UI.Views;\n\nnamespace UI\n{\n    public class UiModule(IRegionManager regionManager) : IModule\n    {\n        #region Implementation of IModule\n\n        /// <summary>\n        /// Used to register types with the container that will be used by your application.\n        /// </summary>\n        public void RegisterTypes(IContainerRegistry container)\n        {\n            //container.RegisterForRegionNavigation<ViewA, ViewAViewModel>();\n            //container.RegisterForRegionNavigation<ViewB, ViewBViewModel>();\n\n            container.RegisterAllViewModel(Assembly.GetAssembly(typeof(UiModule))!);\n        }\n\n        /// <summary>Notifies the module that it has been initialized.</summary>\n        public void OnInitialized(IContainerProvider containerProvider)\n        {\n            regionManager.RegisterViewWithRegion(RegionNames.MainRegion, nameof(ViewA));\n            regionManager.RegisterViewWithRegion(RegionNames.ContentRegion, nameof(ViewB));\n        }\n\n        #endregion\n    }\n}\n```\n\n此时运行程序，不出意外的话，ViewA和ViewB应该是同时出现的应用程序中的。\n\n### 发布事件\n\n现在，我们在ViewA中新增按钮，点击之后发布事件。在ViewAViewModel中新增发布按钮点击后发布事件的Command。\n\nViewA的代码如下\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentView x:Class=\"UI.Views.ViewA\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout HorizontalOptions=\"Center\" VerticalOptions=\"Center\">\n        <Label HorizontalOptions=\"Center\"\n               Text=\"ViewA\"\n               VerticalOptions=\"Center\" />\n        <Button Command=\"{Binding ToViewBCommand}\"\n                HorizontalOptions=\"Center\"\n                Text=\"ToViewBCommand\"\n                VerticalOptions=\"Center\" />\n\n        <Button Command=\"{Binding PublishEventCommand}\"\n                HorizontalOptions=\"Center\"\n                Text=\"PublishEvent\"\n                VerticalOptions=\"Center\" />\n    </VerticalStackLayout>\n</ContentView>\n\n```\n\nViewAViewModel的代码如下\n\n```\nusing System.Windows.Input;\nusing Core;\nusing Core.Dtos;\nusing Core.Events;\nusing UI.Views;\n\nnamespace UI.ViewModels\n{\n    public class ViewAViewModel(IRegionManager regionManager, IEventAggregator eventAggregator) : BindableBase\n    {\n        public ICommand ToViewBCommand => new DelegateCommand(() =>\n        {\n            regionManager.RequestNavigate(RegionNames.MainRegion, nameof(ViewB));\n        });\n\n        public ICommand PublishEventCommand => new DelegateCommand(() =>\n        {\n            eventAggregator.GetEvent<EventTest>().Publish(new EventTestDto(\"这是一个Title\",\n                $\"这是一个Content，发布时间为：{DateTime.Now:yyy-MM-dd HH:mm:ss}\"));\n        });\n    }\n}\n```\n\n这里ViewA中的PublishEvent按钮点击以后，将会发布一个EventTest事件，带了一个EventTestDto的数据。\n\n事件聚合器`IEventAggregator`通过主构造函数注入。\n\n### 订阅事件\n\n在ViewBViewModel的构造函数中，添加对EventTest事件的监听，代码如下\n\n```\nusing System.Windows.Input;\nusing Core;\nusing Core.Dtos;\nusing Core.Events;\nusing UI.Views;\n\nnamespace UI.ViewModels\n{\n    public class ViewBViewModel : BindableBase\n    {\n        private readonly IRegionManager _regionManager;\n\n        public ViewBViewModel(IRegionManager regionManager, IEventAggregator eventAggregator)\n        {\n            _regionManager = regionManager;\n\n            eventAggregator.GetEvent<EventTest>().Subscribe(OnEventTest);\n        }\n\n        private void OnEventTest(EventTestDto dto)\n        {\n            TestDto = dto;\n        }\n\n        private EventTestDto _testDto;\n\n        public EventTestDto TestDto\n        {\n            get => _testDto;\n            set => SetProperty(ref _testDto, value);\n        }\n\n\n        public ICommand GoBackCommand => new DelegateCommand(() =>\n        {\n            _regionManager.RequestNavigate(RegionNames.MainRegion, nameof(ViewA));\n        });\n    }\n}\n\n```\n\n这里我们使用了构造函数，并在其中添加了EventTest的事件监听，然后使用EventTestHandle方法来处理事件，这里是将事件Dto赋值给了一个本地属性。我们在ViewB视图中将内容显示出来，代码如下\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentView x:Class=\"UI.Views.ViewB\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n\n    <Grid>\n        <VerticalStackLayout HorizontalOptions=\"Center\" VerticalOptions=\"Center\">\n            <Label HorizontalOptions=\"Center\"\n                   Text=\"ViewB\"\n                   VerticalOptions=\"Center\" />\n            <Button Command=\"{Binding GoBackCommand}\"\n                    HorizontalOptions=\"Center\"\n                    Text=\"GoBack\"\n                    VerticalOptions=\"Center\" />\n\n            <StackLayout Orientation=\"Horizontal\">\n                <Label Text=\"Title:\" />\n                <Label Text=\"{Binding TestDto.Title}\" />\n            </StackLayout>\n            <StackLayout Orientation=\"Horizontal\">\n                <Label Text=\"Content:\" />\n                <Label Text=\"{Binding TestDto.Content}\" />\n            </StackLayout>\n\n        </VerticalStackLayout>\n    </Grid>\n</ContentView>\n\n\n```\n\n此时运行程序，点击按钮，就可以直观的看到事件聚合器的效果了，我们在ViewAViewModel发布的事件被ViewBViewModel监听到，并显示在界面ViewB界面上。\n\n### 解除订阅\n\n为了避免出现不可预知的问题，我们再不需要处理事件的时候，应该把已经订阅的事件取消，代码如下\n\n```\n _aggregator.GetEvent<EventTest>().Unsubscribe(EventTestHandle);\n```\n\n自此，完整的事件聚合器闭环就完成了。\n","source":"_posts/从零开始搭建Maui框架03-添加事件聚合器.md","raw":"---\ntitle: 从零开始搭建Maui框架03-添加事件聚合器\ndate: 2024-11-19 14:18:32\ncategories:\n\t- MAUI教程\ntags:\n\t- C#\n\t- .NET\n\t- MAUI\n\t- Prism\n---\n# 从零开始搭建Maui框架03-添加事件聚合器\n\n## 一、事件聚合器：实现组件间松耦合通信的利器\n\n**事件聚合器**（Event Aggregator）是一种设计模式，它提供了一种在应用程序中不同组件之间进行通信的机制，而无需这些组件之间存在直接的耦合。这种模式通过发布-订阅模式实现，允许一个组件（发布者）发布事件，而其他感兴趣的组件（订阅者）可以订阅这些事件并做出相应的响应。\n\n### 事件聚合器的核心概念\n\n* **发布者（Publisher）**：产生事件的组件。\n* **订阅者（Subscriber）**：对特定事件感兴趣的组件。\n* **事件（Event）**：发布者发布的信息，订阅者订阅的对象。\n* **事件聚合器**：一个中央枢纽，负责管理事件的发布和订阅。\n\n### 事件聚合器的优势\n\n* **松耦合**：组件之间不需要知道彼此的存在，只需要关注事件本身。\n* **可扩展性**：新的组件可以很容易地订阅已有的事件，或者发布新的事件。\n* **可测试性**：组件可以独立地进行测试，因为它们之间的交互是通过事件进行的。\n* **复用性**：事件可以被多个订阅者订阅，从而提高代码的复用性。\n\n### 事件聚合器的应用场景\n\n* **用户界面**：不同的用户界面元素可以通过事件进行通信，例如按钮点击事件、文本框内容变化事件等。\n* **模块间通信**：不同的模块可以通过事件进行交互，例如数据加载完成事件、错误发生事件等。\n* **异步操作**：事件可以用于在异步操作完成后通知其他组件。\n\n### 事件聚合器的实现\n\n事件聚合器的实现方式有很多种，但它们的基本原理都是相同的。通常，事件聚合器会提供以下接口：\n\n* **订阅事件**：订阅者通过调用事件聚合器的订阅方法来订阅特定的事件。\n* **发布事件**：发布者通过调用事件聚合器的发布方法来发布事件。\n* **取消订阅**：订阅者可以随时取消对某个事件的订阅。\n\n下面我们基于之前的代码添加事件聚合器。\n\n## 二、添加DTO\n\nDTO（Data Transfer Object，数据传输对象）。\n\n新建一个Dto来传输事件的内容信息。\n\n在`Core`类库中，新增文件夹Dtos，新增类`EventTestDto`，新增两个自动属性，代码如下\n\n```\nusing Core.Abstracts;\n\nnamespace Core.Dtos\n{\n    public class EventTestDto : IEventTest\n    {\n        #region Implementation of IEventTest\n\n        /// <summary>Initializes a new instance of the <see cref=\"T:System.Object\" /> class.</summary>\n        public EventTestDto(string title, string content)\n        {\n            Title = title;\n            Content = content;\n        }\n\n        public string Title { get; set; }\n        public string Content { get; set; }\n\n        #endregion\n    }\n}\n\n```\n\n在这个类中，我们添加了两个`string`类型的自动属性，`Title、Content`,并添加了构造函数。IEventTest是这两个字段的接口，这里使用接口是为了方便后面接入数据库做准备。\n\n代码如下\n\n```\nnamespace Core.Abstracts\n{\n    public interface IEventTest\n    {\n        string Title { get; set; }\n\n        string Content { get; set; }\n    }\n}\n\n```\n\n## 三、新增EventTest事件\n\n在`Core`类库中新增Events文件夹，并新增类文件EventTest，继承自类`PubSubEvent`代码如下\n\n```\nusing Core.Dtos;\n\nnamespace Core.Events\n{\n    public class EventTest : PubSubEvent<EventTestDto>\n    {\n    }\n}\n\n```\n\n## 四、添加事件发出者和订阅者\n\n### 修改应用程序布局\n\n为了更直观的查看事件聚合器带来的效果，我们先修改应用程序布局\n\n在`MauiPrism9Demo`中，修改`MainPage`文件，修改后的代码如下\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage x:Class=\"MauiPrism9Demo.MainPage\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:core=\"clr-namespace:Core;assembly=Core\"\n             xmlns:prism=\"http://prismlibrary.com\">\n\n    <Grid RowDefinitions=\"*,*\">\n        <ContentView Grid.Row=\"0\" prism:RegionManager.RegionName=\"{x:Static core:RegionNames.MainRegion}\" />\n        <ContentView Grid.Row=\"1\" prism:RegionManager.RegionName=\"{x:Static core:RegionNames.ContentRegion}\" />\n    </Grid>\n\n\n\n</ContentPage>\n\n```\n\n这里是将原来的只有一个区域变成两个等分的区域，其中的`RegionNames`是为了方便，以及导航的准确性，新增的导航区域标注类，这个类也是放在`Core`中，代码如下\n\n```\nnamespace Core\n{\n    public static class RegionNames\n    {\n        public const string MainRegion = nameof(MainRegion);\n        public const string ContentRegion = nameof(ContentRegion);\n    }\n}\n\n```\n\n### 修改UIModule\n\n原来我们使用ViewA作为应用程序的首页，现在我们修改UIModule，同时将ViewA和ViewB都显示出来。\n\n在`UIModule`的`OnInitialized`方法中，新增导航将ViewB导航到ContentRegion，代码如下\n\n```\n  regionManager.RegisterViewWithRegion(RegionNames.ContentRegion, nameof(ViewB));\n```\n\n完整的UiModule代码如下\n\n```\nusing Core;\nusing Core.Extensions;\nusing System.Reflection;\nusing UI.Views;\n\nnamespace UI\n{\n    public class UiModule(IRegionManager regionManager) : IModule\n    {\n        #region Implementation of IModule\n\n        /// <summary>\n        /// Used to register types with the container that will be used by your application.\n        /// </summary>\n        public void RegisterTypes(IContainerRegistry container)\n        {\n            //container.RegisterForRegionNavigation<ViewA, ViewAViewModel>();\n            //container.RegisterForRegionNavigation<ViewB, ViewBViewModel>();\n\n            container.RegisterAllViewModel(Assembly.GetAssembly(typeof(UiModule))!);\n        }\n\n        /// <summary>Notifies the module that it has been initialized.</summary>\n        public void OnInitialized(IContainerProvider containerProvider)\n        {\n            regionManager.RegisterViewWithRegion(RegionNames.MainRegion, nameof(ViewA));\n            regionManager.RegisterViewWithRegion(RegionNames.ContentRegion, nameof(ViewB));\n        }\n\n        #endregion\n    }\n}\n```\n\n此时运行程序，不出意外的话，ViewA和ViewB应该是同时出现的应用程序中的。\n\n### 发布事件\n\n现在，我们在ViewA中新增按钮，点击之后发布事件。在ViewAViewModel中新增发布按钮点击后发布事件的Command。\n\nViewA的代码如下\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentView x:Class=\"UI.Views.ViewA\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n    <VerticalStackLayout HorizontalOptions=\"Center\" VerticalOptions=\"Center\">\n        <Label HorizontalOptions=\"Center\"\n               Text=\"ViewA\"\n               VerticalOptions=\"Center\" />\n        <Button Command=\"{Binding ToViewBCommand}\"\n                HorizontalOptions=\"Center\"\n                Text=\"ToViewBCommand\"\n                VerticalOptions=\"Center\" />\n\n        <Button Command=\"{Binding PublishEventCommand}\"\n                HorizontalOptions=\"Center\"\n                Text=\"PublishEvent\"\n                VerticalOptions=\"Center\" />\n    </VerticalStackLayout>\n</ContentView>\n\n```\n\nViewAViewModel的代码如下\n\n```\nusing System.Windows.Input;\nusing Core;\nusing Core.Dtos;\nusing Core.Events;\nusing UI.Views;\n\nnamespace UI.ViewModels\n{\n    public class ViewAViewModel(IRegionManager regionManager, IEventAggregator eventAggregator) : BindableBase\n    {\n        public ICommand ToViewBCommand => new DelegateCommand(() =>\n        {\n            regionManager.RequestNavigate(RegionNames.MainRegion, nameof(ViewB));\n        });\n\n        public ICommand PublishEventCommand => new DelegateCommand(() =>\n        {\n            eventAggregator.GetEvent<EventTest>().Publish(new EventTestDto(\"这是一个Title\",\n                $\"这是一个Content，发布时间为：{DateTime.Now:yyy-MM-dd HH:mm:ss}\"));\n        });\n    }\n}\n```\n\n这里ViewA中的PublishEvent按钮点击以后，将会发布一个EventTest事件，带了一个EventTestDto的数据。\n\n事件聚合器`IEventAggregator`通过主构造函数注入。\n\n### 订阅事件\n\n在ViewBViewModel的构造函数中，添加对EventTest事件的监听，代码如下\n\n```\nusing System.Windows.Input;\nusing Core;\nusing Core.Dtos;\nusing Core.Events;\nusing UI.Views;\n\nnamespace UI.ViewModels\n{\n    public class ViewBViewModel : BindableBase\n    {\n        private readonly IRegionManager _regionManager;\n\n        public ViewBViewModel(IRegionManager regionManager, IEventAggregator eventAggregator)\n        {\n            _regionManager = regionManager;\n\n            eventAggregator.GetEvent<EventTest>().Subscribe(OnEventTest);\n        }\n\n        private void OnEventTest(EventTestDto dto)\n        {\n            TestDto = dto;\n        }\n\n        private EventTestDto _testDto;\n\n        public EventTestDto TestDto\n        {\n            get => _testDto;\n            set => SetProperty(ref _testDto, value);\n        }\n\n\n        public ICommand GoBackCommand => new DelegateCommand(() =>\n        {\n            _regionManager.RequestNavigate(RegionNames.MainRegion, nameof(ViewA));\n        });\n    }\n}\n\n```\n\n这里我们使用了构造函数，并在其中添加了EventTest的事件监听，然后使用EventTestHandle方法来处理事件，这里是将事件Dto赋值给了一个本地属性。我们在ViewB视图中将内容显示出来，代码如下\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentView x:Class=\"UI.Views.ViewB\"\n             xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\">\n\n    <Grid>\n        <VerticalStackLayout HorizontalOptions=\"Center\" VerticalOptions=\"Center\">\n            <Label HorizontalOptions=\"Center\"\n                   Text=\"ViewB\"\n                   VerticalOptions=\"Center\" />\n            <Button Command=\"{Binding GoBackCommand}\"\n                    HorizontalOptions=\"Center\"\n                    Text=\"GoBack\"\n                    VerticalOptions=\"Center\" />\n\n            <StackLayout Orientation=\"Horizontal\">\n                <Label Text=\"Title:\" />\n                <Label Text=\"{Binding TestDto.Title}\" />\n            </StackLayout>\n            <StackLayout Orientation=\"Horizontal\">\n                <Label Text=\"Content:\" />\n                <Label Text=\"{Binding TestDto.Content}\" />\n            </StackLayout>\n\n        </VerticalStackLayout>\n    </Grid>\n</ContentView>\n\n\n```\n\n此时运行程序，点击按钮，就可以直观的看到事件聚合器的效果了，我们在ViewAViewModel发布的事件被ViewBViewModel监听到，并显示在界面ViewB界面上。\n\n### 解除订阅\n\n为了避免出现不可预知的问题，我们再不需要处理事件的时候，应该把已经订阅的事件取消，代码如下\n\n```\n _aggregator.GetEvent<EventTest>().Unsubscribe(EventTestHandle);\n```\n\n自此，完整的事件聚合器闭环就完成了。\n","slug":"从零开始搭建Maui框架03-添加事件聚合器","published":1,"updated":"2024-11-19T08:37:26.960Z","_id":"cm3o2ensp0000ikv4d80v5kxg","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"从零开始搭建Maui框架03-添加事件聚合器\"><a href=\"#从零开始搭建Maui框架03-添加事件聚合器\" class=\"headerlink\" title=\"从零开始搭建Maui框架03-添加事件聚合器\"></a>从零开始搭建Maui框架03-添加事件聚合器</h1><h2 id=\"一、事件聚合器：实现组件间松耦合通信的利器\"><a href=\"#一、事件聚合器：实现组件间松耦合通信的利器\" class=\"headerlink\" title=\"一、事件聚合器：实现组件间松耦合通信的利器\"></a>一、事件聚合器：实现组件间松耦合通信的利器</h2><p><strong>事件聚合器</strong>（Event Aggregator）是一种设计模式，它提供了一种在应用程序中不同组件之间进行通信的机制，而无需这些组件之间存在直接的耦合。这种模式通过发布-订阅模式实现，允许一个组件（发布者）发布事件，而其他感兴趣的组件（订阅者）可以订阅这些事件并做出相应的响应。</p>\n<h3 id=\"事件聚合器的核心概念\"><a href=\"#事件聚合器的核心概念\" class=\"headerlink\" title=\"事件聚合器的核心概念\"></a>事件聚合器的核心概念</h3><ul>\n<li><strong>发布者（Publisher）</strong>：产生事件的组件。</li>\n<li><strong>订阅者（Subscriber）</strong>：对特定事件感兴趣的组件。</li>\n<li><strong>事件（Event）</strong>：发布者发布的信息，订阅者订阅的对象。</li>\n<li><strong>事件聚合器</strong>：一个中央枢纽，负责管理事件的发布和订阅。</li>\n</ul>\n<h3 id=\"事件聚合器的优势\"><a href=\"#事件聚合器的优势\" class=\"headerlink\" title=\"事件聚合器的优势\"></a>事件聚合器的优势</h3><ul>\n<li><strong>松耦合</strong>：组件之间不需要知道彼此的存在，只需要关注事件本身。</li>\n<li><strong>可扩展性</strong>：新的组件可以很容易地订阅已有的事件，或者发布新的事件。</li>\n<li><strong>可测试性</strong>：组件可以独立地进行测试，因为它们之间的交互是通过事件进行的。</li>\n<li><strong>复用性</strong>：事件可以被多个订阅者订阅，从而提高代码的复用性。</li>\n</ul>\n<h3 id=\"事件聚合器的应用场景\"><a href=\"#事件聚合器的应用场景\" class=\"headerlink\" title=\"事件聚合器的应用场景\"></a>事件聚合器的应用场景</h3><ul>\n<li><strong>用户界面</strong>：不同的用户界面元素可以通过事件进行通信，例如按钮点击事件、文本框内容变化事件等。</li>\n<li><strong>模块间通信</strong>：不同的模块可以通过事件进行交互，例如数据加载完成事件、错误发生事件等。</li>\n<li><strong>异步操作</strong>：事件可以用于在异步操作完成后通知其他组件。</li>\n</ul>\n<h3 id=\"事件聚合器的实现\"><a href=\"#事件聚合器的实现\" class=\"headerlink\" title=\"事件聚合器的实现\"></a>事件聚合器的实现</h3><p>事件聚合器的实现方式有很多种，但它们的基本原理都是相同的。通常，事件聚合器会提供以下接口：</p>\n<ul>\n<li><strong>订阅事件</strong>：订阅者通过调用事件聚合器的订阅方法来订阅特定的事件。</li>\n<li><strong>发布事件</strong>：发布者通过调用事件聚合器的发布方法来发布事件。</li>\n<li><strong>取消订阅</strong>：订阅者可以随时取消对某个事件的订阅。</li>\n</ul>\n<p>下面我们基于之前的代码添加事件聚合器。</p>\n<h2 id=\"二、添加DTO\"><a href=\"#二、添加DTO\" class=\"headerlink\" title=\"二、添加DTO\"></a>二、添加DTO</h2><p>DTO（Data Transfer Object，数据传输对象）。</p>\n<p>新建一个Dto来传输事件的内容信息。</p>\n<p>在<code>Core</code>类库中，新增文件夹Dtos，新增类<code>EventTestDto</code>，新增两个自动属性，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core.Abstracts;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core.Dtos</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EventTestDto</span> : <span class=\"hljs-title\">IEventTest</span><br>    &#123;<br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">region</span> Implementation of IEventTest</span><br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span>Initializes a new instance of the <span class=\"hljs-doctag\">&lt;see cref=&quot;T:System.Object&quot; /&gt;</span> class.<span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">EventTestDto</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> title, <span class=\"hljs-built_in\">string</span> content</span>)</span><br>        &#123;<br>            Title = title;<br>            Content = content;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> Title &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> Content &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br><br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endregion</span></span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p>在这个类中，我们添加了两个<code>string</code>类型的自动属性，<code>Title、Content</code>,并添加了构造函数。IEventTest是这两个字段的接口，这里使用接口是为了方便后面接入数据库做准备。</p>\n<p>代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core.Abstracts</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IEventTest</span><br>    &#123;<br>        <span class=\"hljs-built_in\">string</span> Title &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br><br>        <span class=\"hljs-built_in\">string</span> Content &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"三、新增EventTest事件\"><a href=\"#三、新增EventTest事件\" class=\"headerlink\" title=\"三、新增EventTest事件\"></a>三、新增EventTest事件</h2><p>在<code>Core</code>类库中新增Events文件夹，并新增类文件EventTest，继承自类<code>PubSubEvent</code>代码如下</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs perl\">using Core.Dtos;<br><br>namespace Core.Events<br>&#123;<br>    public <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EventTest</span><span class=\"hljs-attr\"> : PubSubEvent</span>&lt;<span class=\"hljs-title\">EventTestDto</span>&gt;</span><br><span class=\"hljs-class\">    </span>&#123;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"四、添加事件发出者和订阅者\"><a href=\"#四、添加事件发出者和订阅者\" class=\"headerlink\" title=\"四、添加事件发出者和订阅者\"></a>四、添加事件发出者和订阅者</h2><h3 id=\"修改应用程序布局\"><a href=\"#修改应用程序布局\" class=\"headerlink\" title=\"修改应用程序布局\"></a>修改应用程序布局</h3><p>为了更直观的查看事件聚合器带来的效果，我们先修改应用程序布局</p>\n<p>在<code>MauiPrism9Demo</code>中，修改<code>MainPage</code>文件，修改后的代码如下</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentPage</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;MauiPrism9Demo.MainPage&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:core</span>=<span class=\"hljs-string\">&quot;clr-namespace:Core;assembly=Core&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:prism</span>=<span class=\"hljs-string\">&quot;http://prismlibrary.com&quot;</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Grid</span> <span class=\"hljs-attr\">RowDefinitions</span>=<span class=\"hljs-string\">&quot;*,*&quot;</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">prism:RegionManager.RegionName</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;x:Static core:RegionNames.MainRegion&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;1&quot;</span> <span class=\"hljs-attr\">prism:RegionManager.RegionName</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;x:Static core:RegionNames.ContentRegion&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Grid</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentPage</span>&gt;</span></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p>这里是将原来的只有一个区域变成两个等分的区域，其中的<code>RegionNames</code>是为了方便，以及导航的准确性，新增的导航区域标注类，这个类也是放在<code>Core</code>中，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RegionNames</span><br>    &#123;<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">string</span> MainRegion = <span class=\"hljs-keyword\">nameof</span>(MainRegion);<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">string</span> ContentRegion = <span class=\"hljs-keyword\">nameof</span>(ContentRegion);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改UIModule\"><a href=\"#修改UIModule\" class=\"headerlink\" title=\"修改UIModule\"></a>修改UIModule</h3><p>原来我们使用ViewA作为应用程序的首页，现在我们修改UIModule，同时将ViewA和ViewB都显示出来。</p>\n<p>在<code>UIModule</code>的<code>OnInitialized</code>方法中，新增导航将ViewB导航到ContentRegion，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">regionManager.RegisterViewWithRegion(RegionNames.ContentRegion, <span class=\"hljs-keyword\">nameof</span>(ViewB));<br></code></pre></td></tr></table></figure>\n\n<p>完整的UiModule代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Extensions;<br><span class=\"hljs-keyword\">using</span> System.Reflection;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UiModule</span>(<span class=\"hljs-params\">IRegionManager regionManager</span>) : IModule</span><br>    &#123;<br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">region</span> Implementation of IModule</span><br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Used to register types with the container that will be used by your application.</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">RegisterTypes</span>(<span class=\"hljs-params\">IContainerRegistry container</span>)</span><br>        &#123;<br>            <span class=\"hljs-comment\">//container.RegisterForRegionNavigation&lt;ViewA, ViewAViewModel&gt;();</span><br>            <span class=\"hljs-comment\">//container.RegisterForRegionNavigation&lt;ViewB, ViewBViewModel&gt;();</span><br><br>            container.RegisterAllViewModel(Assembly.GetAssembly(<span class=\"hljs-keyword\">typeof</span>(UiModule))!);<br>        &#125;<br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span>Notifies the module that it has been initialized.<span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnInitialized</span>(<span class=\"hljs-params\">IContainerProvider containerProvider</span>)</span><br>        &#123;<br>            regionManager.RegisterViewWithRegion(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewA));<br>            regionManager.RegisterViewWithRegion(RegionNames.ContentRegion, <span class=\"hljs-keyword\">nameof</span>(ViewB));<br>        &#125;<br><br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endregion</span></span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>此时运行程序，不出意外的话，ViewA和ViewB应该是同时出现的应用程序中的。</p>\n<h3 id=\"发布事件\"><a href=\"#发布事件\" class=\"headerlink\" title=\"发布事件\"></a>发布事件</h3><p>现在，我们在ViewA中新增按钮，点击之后发布事件。在ViewAViewModel中新增发布按钮点击后发布事件的Command。</p>\n<p>ViewA的代码如下</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;UI.Views.ViewA&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span>&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ViewA&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">Command</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding ToViewBCommand&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ToViewBCommand&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">Command</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding PublishEventCommand&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;PublishEvent&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p>ViewAViewModel的代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Windows.Input;<br><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Dtos;<br><span class=\"hljs-keyword\">using</span> Core.Events;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.ViewModels</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewAViewModel</span>(<span class=\"hljs-params\">IRegionManager regionManager, IEventAggregator eventAggregator</span>) : BindableBase</span><br>    &#123;<br>        <span class=\"hljs-keyword\">public</span> ICommand ToViewBCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            regionManager.RequestNavigate(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewB));<br>        &#125;);<br><br>        <span class=\"hljs-keyword\">public</span> ICommand PublishEventCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            eventAggregator.GetEvent&lt;EventTest&gt;().Publish(<span class=\"hljs-keyword\">new</span> EventTestDto(<span class=\"hljs-string\">&quot;这是一个Title&quot;</span>,<br>                <span class=\"hljs-string\">$&quot;这是一个Content，发布时间为：<span class=\"hljs-subst\">&#123;DateTime.Now:yyy-MM-dd HH:mm:ss&#125;</span>&quot;</span>));<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这里ViewA中的PublishEvent按钮点击以后，将会发布一个EventTest事件，带了一个EventTestDto的数据。</p>\n<p>事件聚合器<code>IEventAggregator</code>通过主构造函数注入。</p>\n<h3 id=\"订阅事件\"><a href=\"#订阅事件\" class=\"headerlink\" title=\"订阅事件\"></a>订阅事件</h3><p>在ViewBViewModel的构造函数中，添加对EventTest事件的监听，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Windows.Input;<br><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Dtos;<br><span class=\"hljs-keyword\">using</span> Core.Events;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.ViewModels</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewBViewModel</span> : <span class=\"hljs-title\">BindableBase</span><br>    &#123;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> IRegionManager _regionManager;<br><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">ViewBViewModel</span>(<span class=\"hljs-params\">IRegionManager regionManager, IEventAggregator eventAggregator</span>)</span><br>        &#123;<br>            _regionManager = regionManager;<br><br>            eventAggregator.GetEvent&lt;EventTest&gt;().Subscribe(OnEventTest);<br>        &#125;<br><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnEventTest</span>(<span class=\"hljs-params\">EventTestDto dto</span>)</span><br>        &#123;<br>            TestDto = dto;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">private</span> EventTestDto _testDto;<br><br>        <span class=\"hljs-keyword\">public</span> EventTestDto TestDto<br>        &#123;<br>            <span class=\"hljs-keyword\">get</span> =&gt; _testDto;<br>            <span class=\"hljs-keyword\">set</span> =&gt; SetProperty(<span class=\"hljs-keyword\">ref</span> _testDto, <span class=\"hljs-keyword\">value</span>);<br>        &#125;<br><br><br>        <span class=\"hljs-keyword\">public</span> ICommand GoBackCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            _regionManager.RequestNavigate(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewA));<br>        &#125;);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p>这里我们使用了构造函数，并在其中添加了EventTest的事件监听，然后使用EventTestHandle方法来处理事件，这里是将事件Dto赋值给了一个本地属性。我们在ViewB视图中将内容显示出来，代码如下</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;UI.Views.ViewB&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Grid</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                   <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ViewB&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                   <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">Command</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding GoBackCommand&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                    <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                    <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;GoBack&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                    <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">StackLayout</span> <span class=\"hljs-attr\">Orientation</span>=<span class=\"hljs-string\">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;Title:&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding TestDto.Title&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">StackLayout</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">StackLayout</span> <span class=\"hljs-attr\">Orientation</span>=<span class=\"hljs-string\">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;Content:&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding TestDto.Content&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">StackLayout</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Grid</span>&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p>此时运行程序，点击按钮，就可以直观的看到事件聚合器的效果了，我们在ViewAViewModel发布的事件被ViewBViewModel监听到，并显示在界面ViewB界面上。</p>\n<h3 id=\"解除订阅\"><a href=\"#解除订阅\" class=\"headerlink\" title=\"解除订阅\"></a>解除订阅</h3><p>为了避免出现不可预知的问题，我们再不需要处理事件的时候，应该把已经订阅的事件取消，代码如下</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scss\">_aggregator<span class=\"hljs-selector-class\">.GetEvent</span>&lt;EventTest&gt;()<span class=\"hljs-selector-class\">.Unsubscribe</span>(EventTestHandle);<br></code></pre></td></tr></table></figure>\n\n<p>自此，完整的事件聚合器闭环就完成了。</p>\n","excerpt":"","more":"<h1 id=\"从零开始搭建Maui框架03-添加事件聚合器\"><a href=\"#从零开始搭建Maui框架03-添加事件聚合器\" class=\"headerlink\" title=\"从零开始搭建Maui框架03-添加事件聚合器\"></a>从零开始搭建Maui框架03-添加事件聚合器</h1><h2 id=\"一、事件聚合器：实现组件间松耦合通信的利器\"><a href=\"#一、事件聚合器：实现组件间松耦合通信的利器\" class=\"headerlink\" title=\"一、事件聚合器：实现组件间松耦合通信的利器\"></a>一、事件聚合器：实现组件间松耦合通信的利器</h2><p><strong>事件聚合器</strong>（Event Aggregator）是一种设计模式，它提供了一种在应用程序中不同组件之间进行通信的机制，而无需这些组件之间存在直接的耦合。这种模式通过发布-订阅模式实现，允许一个组件（发布者）发布事件，而其他感兴趣的组件（订阅者）可以订阅这些事件并做出相应的响应。</p>\n<h3 id=\"事件聚合器的核心概念\"><a href=\"#事件聚合器的核心概念\" class=\"headerlink\" title=\"事件聚合器的核心概念\"></a>事件聚合器的核心概念</h3><ul>\n<li><strong>发布者（Publisher）</strong>：产生事件的组件。</li>\n<li><strong>订阅者（Subscriber）</strong>：对特定事件感兴趣的组件。</li>\n<li><strong>事件（Event）</strong>：发布者发布的信息，订阅者订阅的对象。</li>\n<li><strong>事件聚合器</strong>：一个中央枢纽，负责管理事件的发布和订阅。</li>\n</ul>\n<h3 id=\"事件聚合器的优势\"><a href=\"#事件聚合器的优势\" class=\"headerlink\" title=\"事件聚合器的优势\"></a>事件聚合器的优势</h3><ul>\n<li><strong>松耦合</strong>：组件之间不需要知道彼此的存在，只需要关注事件本身。</li>\n<li><strong>可扩展性</strong>：新的组件可以很容易地订阅已有的事件，或者发布新的事件。</li>\n<li><strong>可测试性</strong>：组件可以独立地进行测试，因为它们之间的交互是通过事件进行的。</li>\n<li><strong>复用性</strong>：事件可以被多个订阅者订阅，从而提高代码的复用性。</li>\n</ul>\n<h3 id=\"事件聚合器的应用场景\"><a href=\"#事件聚合器的应用场景\" class=\"headerlink\" title=\"事件聚合器的应用场景\"></a>事件聚合器的应用场景</h3><ul>\n<li><strong>用户界面</strong>：不同的用户界面元素可以通过事件进行通信，例如按钮点击事件、文本框内容变化事件等。</li>\n<li><strong>模块间通信</strong>：不同的模块可以通过事件进行交互，例如数据加载完成事件、错误发生事件等。</li>\n<li><strong>异步操作</strong>：事件可以用于在异步操作完成后通知其他组件。</li>\n</ul>\n<h3 id=\"事件聚合器的实现\"><a href=\"#事件聚合器的实现\" class=\"headerlink\" title=\"事件聚合器的实现\"></a>事件聚合器的实现</h3><p>事件聚合器的实现方式有很多种，但它们的基本原理都是相同的。通常，事件聚合器会提供以下接口：</p>\n<ul>\n<li><strong>订阅事件</strong>：订阅者通过调用事件聚合器的订阅方法来订阅特定的事件。</li>\n<li><strong>发布事件</strong>：发布者通过调用事件聚合器的发布方法来发布事件。</li>\n<li><strong>取消订阅</strong>：订阅者可以随时取消对某个事件的订阅。</li>\n</ul>\n<p>下面我们基于之前的代码添加事件聚合器。</p>\n<h2 id=\"二、添加DTO\"><a href=\"#二、添加DTO\" class=\"headerlink\" title=\"二、添加DTO\"></a>二、添加DTO</h2><p>DTO（Data Transfer Object，数据传输对象）。</p>\n<p>新建一个Dto来传输事件的内容信息。</p>\n<p>在<code>Core</code>类库中，新增文件夹Dtos，新增类<code>EventTestDto</code>，新增两个自动属性，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core.Abstracts;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core.Dtos</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EventTestDto</span> : <span class=\"hljs-title\">IEventTest</span><br>    &#123;<br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">region</span> Implementation of IEventTest</span><br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span>Initializes a new instance of the <span class=\"hljs-doctag\">&lt;see cref=&quot;T:System.Object&quot; /&gt;</span> class.<span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">EventTestDto</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> title, <span class=\"hljs-built_in\">string</span> content</span>)</span><br>        &#123;<br>            Title = title;<br>            Content = content;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> Title &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> Content &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br><br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endregion</span></span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p>在这个类中，我们添加了两个<code>string</code>类型的自动属性，<code>Title、Content</code>,并添加了构造函数。IEventTest是这两个字段的接口，这里使用接口是为了方便后面接入数据库做准备。</p>\n<p>代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core.Abstracts</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IEventTest</span><br>    &#123;<br>        <span class=\"hljs-built_in\">string</span> Title &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br><br>        <span class=\"hljs-built_in\">string</span> Content &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"三、新增EventTest事件\"><a href=\"#三、新增EventTest事件\" class=\"headerlink\" title=\"三、新增EventTest事件\"></a>三、新增EventTest事件</h2><p>在<code>Core</code>类库中新增Events文件夹，并新增类文件EventTest，继承自类<code>PubSubEvent</code>代码如下</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs perl\">using Core.Dtos;<br><br>namespace Core.Events<br>&#123;<br>    public <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EventTest</span><span class=\"hljs-attr\"> : PubSubEvent</span>&lt;<span class=\"hljs-title\">EventTestDto</span>&gt;</span><br><span class=\"hljs-class\">    </span>&#123;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"四、添加事件发出者和订阅者\"><a href=\"#四、添加事件发出者和订阅者\" class=\"headerlink\" title=\"四、添加事件发出者和订阅者\"></a>四、添加事件发出者和订阅者</h2><h3 id=\"修改应用程序布局\"><a href=\"#修改应用程序布局\" class=\"headerlink\" title=\"修改应用程序布局\"></a>修改应用程序布局</h3><p>为了更直观的查看事件聚合器带来的效果，我们先修改应用程序布局</p>\n<p>在<code>MauiPrism9Demo</code>中，修改<code>MainPage</code>文件，修改后的代码如下</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentPage</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;MauiPrism9Demo.MainPage&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:core</span>=<span class=\"hljs-string\">&quot;clr-namespace:Core;assembly=Core&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:prism</span>=<span class=\"hljs-string\">&quot;http://prismlibrary.com&quot;</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Grid</span> <span class=\"hljs-attr\">RowDefinitions</span>=<span class=\"hljs-string\">&quot;*,*&quot;</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">prism:RegionManager.RegionName</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;x:Static core:RegionNames.MainRegion&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;1&quot;</span> <span class=\"hljs-attr\">prism:RegionManager.RegionName</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;x:Static core:RegionNames.ContentRegion&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Grid</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentPage</span>&gt;</span></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p>这里是将原来的只有一个区域变成两个等分的区域，其中的<code>RegionNames</code>是为了方便，以及导航的准确性，新增的导航区域标注类，这个类也是放在<code>Core</code>中，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RegionNames</span><br>    &#123;<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">string</span> MainRegion = <span class=\"hljs-keyword\">nameof</span>(MainRegion);<br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-built_in\">string</span> ContentRegion = <span class=\"hljs-keyword\">nameof</span>(ContentRegion);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改UIModule\"><a href=\"#修改UIModule\" class=\"headerlink\" title=\"修改UIModule\"></a>修改UIModule</h3><p>原来我们使用ViewA作为应用程序的首页，现在我们修改UIModule，同时将ViewA和ViewB都显示出来。</p>\n<p>在<code>UIModule</code>的<code>OnInitialized</code>方法中，新增导航将ViewB导航到ContentRegion，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">regionManager.RegisterViewWithRegion(RegionNames.ContentRegion, <span class=\"hljs-keyword\">nameof</span>(ViewB));<br></code></pre></td></tr></table></figure>\n\n<p>完整的UiModule代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Extensions;<br><span class=\"hljs-keyword\">using</span> System.Reflection;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UiModule</span>(<span class=\"hljs-params\">IRegionManager regionManager</span>) : IModule</span><br>    &#123;<br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">region</span> Implementation of IModule</span><br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Used to register types with the container that will be used by your application.</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">RegisterTypes</span>(<span class=\"hljs-params\">IContainerRegistry container</span>)</span><br>        &#123;<br>            <span class=\"hljs-comment\">//container.RegisterForRegionNavigation&lt;ViewA, ViewAViewModel&gt;();</span><br>            <span class=\"hljs-comment\">//container.RegisterForRegionNavigation&lt;ViewB, ViewBViewModel&gt;();</span><br><br>            container.RegisterAllViewModel(Assembly.GetAssembly(<span class=\"hljs-keyword\">typeof</span>(UiModule))!);<br>        &#125;<br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span>Notifies the module that it has been initialized.<span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnInitialized</span>(<span class=\"hljs-params\">IContainerProvider containerProvider</span>)</span><br>        &#123;<br>            regionManager.RegisterViewWithRegion(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewA));<br>            regionManager.RegisterViewWithRegion(RegionNames.ContentRegion, <span class=\"hljs-keyword\">nameof</span>(ViewB));<br>        &#125;<br><br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endregion</span></span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>此时运行程序，不出意外的话，ViewA和ViewB应该是同时出现的应用程序中的。</p>\n<h3 id=\"发布事件\"><a href=\"#发布事件\" class=\"headerlink\" title=\"发布事件\"></a>发布事件</h3><p>现在，我们在ViewA中新增按钮，点击之后发布事件。在ViewAViewModel中新增发布按钮点击后发布事件的Command。</p>\n<p>ViewA的代码如下</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;UI.Views.ViewA&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span>&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ViewA&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">Command</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding ToViewBCommand&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ToViewBCommand&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">Command</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding PublishEventCommand&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;PublishEvent&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p>ViewAViewModel的代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Windows.Input;<br><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Dtos;<br><span class=\"hljs-keyword\">using</span> Core.Events;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.ViewModels</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewAViewModel</span>(<span class=\"hljs-params\">IRegionManager regionManager, IEventAggregator eventAggregator</span>) : BindableBase</span><br>    &#123;<br>        <span class=\"hljs-keyword\">public</span> ICommand ToViewBCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            regionManager.RequestNavigate(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewB));<br>        &#125;);<br><br>        <span class=\"hljs-keyword\">public</span> ICommand PublishEventCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            eventAggregator.GetEvent&lt;EventTest&gt;().Publish(<span class=\"hljs-keyword\">new</span> EventTestDto(<span class=\"hljs-string\">&quot;这是一个Title&quot;</span>,<br>                <span class=\"hljs-string\">$&quot;这是一个Content，发布时间为：<span class=\"hljs-subst\">&#123;DateTime.Now:yyy-MM-dd HH:mm:ss&#125;</span>&quot;</span>));<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这里ViewA中的PublishEvent按钮点击以后，将会发布一个EventTest事件，带了一个EventTestDto的数据。</p>\n<p>事件聚合器<code>IEventAggregator</code>通过主构造函数注入。</p>\n<h3 id=\"订阅事件\"><a href=\"#订阅事件\" class=\"headerlink\" title=\"订阅事件\"></a>订阅事件</h3><p>在ViewBViewModel的构造函数中，添加对EventTest事件的监听，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Windows.Input;<br><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Dtos;<br><span class=\"hljs-keyword\">using</span> Core.Events;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.ViewModels</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewBViewModel</span> : <span class=\"hljs-title\">BindableBase</span><br>    &#123;<br>        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> IRegionManager _regionManager;<br><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">ViewBViewModel</span>(<span class=\"hljs-params\">IRegionManager regionManager, IEventAggregator eventAggregator</span>)</span><br>        &#123;<br>            _regionManager = regionManager;<br><br>            eventAggregator.GetEvent&lt;EventTest&gt;().Subscribe(OnEventTest);<br>        &#125;<br><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnEventTest</span>(<span class=\"hljs-params\">EventTestDto dto</span>)</span><br>        &#123;<br>            TestDto = dto;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">private</span> EventTestDto _testDto;<br><br>        <span class=\"hljs-keyword\">public</span> EventTestDto TestDto<br>        &#123;<br>            <span class=\"hljs-keyword\">get</span> =&gt; _testDto;<br>            <span class=\"hljs-keyword\">set</span> =&gt; SetProperty(<span class=\"hljs-keyword\">ref</span> _testDto, <span class=\"hljs-keyword\">value</span>);<br>        &#125;<br><br><br>        <span class=\"hljs-keyword\">public</span> ICommand GoBackCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            _regionManager.RequestNavigate(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewA));<br>        &#125;);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n\n<p>这里我们使用了构造函数，并在其中添加了EventTest的事件监听，然后使用EventTestHandle方法来处理事件，这里是将事件Dto赋值给了一个本地属性。我们在ViewB视图中将内容显示出来，代码如下</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;UI.Views.ViewB&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Grid</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                   <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;ViewB&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                   <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">Command</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding GoBackCommand&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                    <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                    <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;GoBack&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                    <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">StackLayout</span> <span class=\"hljs-attr\">Orientation</span>=<span class=\"hljs-string\">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;Title:&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding TestDto.Title&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">StackLayout</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">StackLayout</span> <span class=\"hljs-attr\">Orientation</span>=<span class=\"hljs-string\">&quot;Horizontal&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;Content:&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;Binding TestDto.Content&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">StackLayout</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Grid</span>&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p>此时运行程序，点击按钮，就可以直观的看到事件聚合器的效果了，我们在ViewAViewModel发布的事件被ViewBViewModel监听到，并显示在界面ViewB界面上。</p>\n<h3 id=\"解除订阅\"><a href=\"#解除订阅\" class=\"headerlink\" title=\"解除订阅\"></a>解除订阅</h3><p>为了避免出现不可预知的问题，我们再不需要处理事件的时候，应该把已经订阅的事件取消，代码如下</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scss\">_aggregator<span class=\"hljs-selector-class\">.GetEvent</span>&lt;EventTest&gt;()<span class=\"hljs-selector-class\">.Unsubscribe</span>(EventTestHandle);<br></code></pre></td></tr></table></figure>\n\n<p>自此，完整的事件聚合器闭环就完成了。</p>\n"},{"title":"从零开始搭建Maui框架02-自动注册视图和视图模型","date":"2024-11-19T06:15:32.000Z","_content":"# 从零开始搭建Maui框架02-自动注册视图和视图模型\n\n上一次我们创建了基础的Maui框架，现在我们进一步优化上次的框架。\n\n我们在创建视图(`View`)和视图模型(`ViewModel`)后，需要再在模块(`Module`)中将这两者注册到容器中，比较麻烦，而且代码量也很大，还容易遗漏注册，最主要的是不够优雅，下面我们将实现视图和视图模型自动注册。\n\n这个教程中用到的技术原理是反射(`reflection`)和特性(`Attribute`)以及扩展方法。\n\n\n## 一、新增类库项目\n\n为了后续更好的模块化，现在在解决方案中新增两个新的**Maui类库项目**，**分别命名为Core和MauiLib**\n\n现在项目中有3个类库项目(`Core、MauiLib、UI`)，1个Maui应用程序项目(`MauiPrism9Demo`)。\n\nCore：存放项目基础框架代码，这次新增的主要代码都在其中。\n\nMauiLib：存放项目中用到的第三方类库，像之前`Prism.Maui、Prism.Ioc.Maui` 等都放在这里，**其他项目只需要引用这个项目，不需要重复导入第三方类库，同时也方便管理。**\n\nMauiPrism9Demo：应用程序入口，模块加载，应用程序配置都在这里。\n\nUI：主要存放视图和视图模型。后面可以把主题也放这里。\n\n**应用程序的引用路径为：`Maui -> Core -> UI-> MauiPrism9Demo`，不要重复引用，以免造成循环引用。**\n\n## 二、新增特性`Attribute`\n\n在Core类库中新增Attributes文件夹，并在其中新增一个类，命名为`IocForRegionNavigationAttribute` ，继承`Attribute`\n\n1.在类中新增两个自动属性\n\n```\n /// <summary>\n /// ViewModel类型\n /// </summary>\n public Type ViewModelType { get; set; } = viewModelType;\n\n /// <summary>\n /// 注册名称\n /// </summary>\n public string? RegisterName { get; set; } = registerName;\n```\n\n`ViewModelType` 是用来表示要注入到视图的`ViewModel`类型\n\n`RegisterName`是注册的名字，区域导航的时候用到，如果为空则使用`View`的`name`\n\n2.添加构造函数，将两个自动属性通过构造赋值。我这里使用了C#12中的主构函数。\n\n```\n public class IocForRegionNavigationAttribute(Type viewModelType, string? registerName = null) : Attribute\n```\n\n3.完整的代码\n\n```\nnamespace Core.Attributes\n{\n    /// <summary>\n    /// 注入视图模型到区域导航\n    /// </summary>\n    /// <param name=\"viewModelType\"></param>\n    /// <param name=\"registerName\"></param>\n    [AttributeUsage(AttributeTargets.Class)]\n    public class IocForRegionNavigationAttribute(Type viewModelType, string? registerName = null) : Attribute\n    {\n        /// <summary>\n        /// ViewModel类型\n        /// </summary>\n        public Type ViewModelType { get; set; } = viewModelType;\n\n        /// <summary>\n        /// 注册名称\n        /// </summary>\n        public string? RegisterName { get; set; } = registerName;\n    }\n}\n```\n\n代码中的`AttributeUsage`特性是指示当前这个特性(`IocForRegionNavigationAttribute`)只能用在类上。\n\n## 三、使用特性\n\n[特性官方文档](https://learn.microsoft.com/zh-cn/dotnet/csharp/advanced-topics/reflection-and-attributes/)\n\n在UI类库中，找到我们的视图(`View`)，在视图的隐藏代码上添加`IocForRegionNavigation`特性，代码如下\n\n```\nusing Core.Attributes;\nusing UI.ViewModels;\n\nnamespace UI.Views;\n\n[IocForRegionNavigation(typeof(ViewAViewModel))]\npublic partial class ViewA : ContentView\n{\n    public ViewA()\n    {\n        InitializeComponent();\n    }\n}\n```\n\n这里我们将`ViewAViewModel`作为`ViewA`的`ViewModel`\n\n## 四、编写容器扩展\n\n[扩展方法的官方文档](https://learn.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)\n\n在`Core`类库中新增`Extensions`文件夹，用来存放扩展方法。\n\n新增静态类，命名`ContainerExtension`\n\n类中新增`RegisterAllViewModel`扩展方法，代码如下\n\n```\nusing Core.Attributes;\nusing System.Reflection;\n\nnamespace Core.Extensions\n{\n    public static class ContainerExtension\n    {\n        /// <summary>\n        /// 自动注册所有的View和ViewModel\n        /// </summary>\n        /// <param name=\"container\"></param>\n        public static void RegisterAllViewModel(this IContainerRegistry container, Assembly assembly)\n        {\n            var types = assembly.GetTypes().Where(c => c.BaseType == typeof(ContentView));\n\n            foreach (var type in types)\n            {\n                var attribute = type.GetCustomAttribute<IocForRegionNavigationAttribute>();\n\n                if (attribute != null)\n                {\n                    var viewModelType = attribute.ViewModelType;\n                    var registerName = attribute.RegisterName ?? type.Name;\n\n                    container.RegisterForRegionNavigation(type, viewModelType, registerName);\n                }\n            }\n        }\n    }\n}\n```\n\n`var types = assembly.GetTypes().Where(c => c.BaseType == typeof(ContentView));`是为了获取程序集中所有的`ContentView`，因为我们的特性都是放在`ContentView`上的，它承载了应用的UI。\n\n我们这里找到所有使用了`IocForRegionNavigationAttribute`特性的`ContentView`，并根据`ViewModelType`注册进容器。\n\n## 五、使用扩展方法\n\n在UI类库中，修改UIModul\n\n```\nusing Core;\nusing Core.Extensions;\nusing System.Reflection;\nusing UI.Views;\n\nnamespace UI\n{\n    public class UiModule(IRegionManager regionManager) : IModule\n    {\n        #region Implementation of IModule\n\n        /// <summary>\n        /// Used to register types with the container that will be used by your application.\n        /// </summary>\n        public void RegisterTypes(IContainerRegistry container)\n        {\n            //container.RegisterForRegionNavigation<ViewA, ViewAViewModel>();\n            //container.RegisterForRegionNavigation<ViewB, ViewBViewModel>();\n\n            container.RegisterAllViewModel(Assembly.GetAssembly(typeof(UiModule))!);\n        }\n\n        /// <summary>Notifies the module that it has been initialized.</summary>\n        public void OnInitialized(IContainerProvider containerProvider)\n        {\n            regionManager.RegisterViewWithRegion(RegionNames.MainRegion, nameof(ViewA));\n        }\n\n        #endregion\n    }\n}\n```\n\n在这里我们注释掉了原来的视图注册方法，直接调用`container.RegisterAllViewModel(Assembly.GetAssembly(typeof(UiModule))!);`进行注册。\n\n其他代码不需要改动。\n\n自此，所有新建在Ui类库中的视图，只要使用了`IocForRegionNavigationAttribute` ,程序都会自动在加载的时候将视图注入到容器中。\n","source":"_posts/从零开始搭建Maui框架02-自动注册视图和视图模型.md","raw":"---\ntitle: 从零开始搭建Maui框架02-自动注册视图和视图模型\ndate: 2024-11-19 14:15:32\ncategories:\n\t- MAUI教程\ntags:\n\t- C#\n\t- .NET\n\t- MAUI\n\t- Prism\n---\n# 从零开始搭建Maui框架02-自动注册视图和视图模型\n\n上一次我们创建了基础的Maui框架，现在我们进一步优化上次的框架。\n\n我们在创建视图(`View`)和视图模型(`ViewModel`)后，需要再在模块(`Module`)中将这两者注册到容器中，比较麻烦，而且代码量也很大，还容易遗漏注册，最主要的是不够优雅，下面我们将实现视图和视图模型自动注册。\n\n这个教程中用到的技术原理是反射(`reflection`)和特性(`Attribute`)以及扩展方法。\n\n\n## 一、新增类库项目\n\n为了后续更好的模块化，现在在解决方案中新增两个新的**Maui类库项目**，**分别命名为Core和MauiLib**\n\n现在项目中有3个类库项目(`Core、MauiLib、UI`)，1个Maui应用程序项目(`MauiPrism9Demo`)。\n\nCore：存放项目基础框架代码，这次新增的主要代码都在其中。\n\nMauiLib：存放项目中用到的第三方类库，像之前`Prism.Maui、Prism.Ioc.Maui` 等都放在这里，**其他项目只需要引用这个项目，不需要重复导入第三方类库，同时也方便管理。**\n\nMauiPrism9Demo：应用程序入口，模块加载，应用程序配置都在这里。\n\nUI：主要存放视图和视图模型。后面可以把主题也放这里。\n\n**应用程序的引用路径为：`Maui -> Core -> UI-> MauiPrism9Demo`，不要重复引用，以免造成循环引用。**\n\n## 二、新增特性`Attribute`\n\n在Core类库中新增Attributes文件夹，并在其中新增一个类，命名为`IocForRegionNavigationAttribute` ，继承`Attribute`\n\n1.在类中新增两个自动属性\n\n```\n /// <summary>\n /// ViewModel类型\n /// </summary>\n public Type ViewModelType { get; set; } = viewModelType;\n\n /// <summary>\n /// 注册名称\n /// </summary>\n public string? RegisterName { get; set; } = registerName;\n```\n\n`ViewModelType` 是用来表示要注入到视图的`ViewModel`类型\n\n`RegisterName`是注册的名字，区域导航的时候用到，如果为空则使用`View`的`name`\n\n2.添加构造函数，将两个自动属性通过构造赋值。我这里使用了C#12中的主构函数。\n\n```\n public class IocForRegionNavigationAttribute(Type viewModelType, string? registerName = null) : Attribute\n```\n\n3.完整的代码\n\n```\nnamespace Core.Attributes\n{\n    /// <summary>\n    /// 注入视图模型到区域导航\n    /// </summary>\n    /// <param name=\"viewModelType\"></param>\n    /// <param name=\"registerName\"></param>\n    [AttributeUsage(AttributeTargets.Class)]\n    public class IocForRegionNavigationAttribute(Type viewModelType, string? registerName = null) : Attribute\n    {\n        /// <summary>\n        /// ViewModel类型\n        /// </summary>\n        public Type ViewModelType { get; set; } = viewModelType;\n\n        /// <summary>\n        /// 注册名称\n        /// </summary>\n        public string? RegisterName { get; set; } = registerName;\n    }\n}\n```\n\n代码中的`AttributeUsage`特性是指示当前这个特性(`IocForRegionNavigationAttribute`)只能用在类上。\n\n## 三、使用特性\n\n[特性官方文档](https://learn.microsoft.com/zh-cn/dotnet/csharp/advanced-topics/reflection-and-attributes/)\n\n在UI类库中，找到我们的视图(`View`)，在视图的隐藏代码上添加`IocForRegionNavigation`特性，代码如下\n\n```\nusing Core.Attributes;\nusing UI.ViewModels;\n\nnamespace UI.Views;\n\n[IocForRegionNavigation(typeof(ViewAViewModel))]\npublic partial class ViewA : ContentView\n{\n    public ViewA()\n    {\n        InitializeComponent();\n    }\n}\n```\n\n这里我们将`ViewAViewModel`作为`ViewA`的`ViewModel`\n\n## 四、编写容器扩展\n\n[扩展方法的官方文档](https://learn.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/extension-methods)\n\n在`Core`类库中新增`Extensions`文件夹，用来存放扩展方法。\n\n新增静态类，命名`ContainerExtension`\n\n类中新增`RegisterAllViewModel`扩展方法，代码如下\n\n```\nusing Core.Attributes;\nusing System.Reflection;\n\nnamespace Core.Extensions\n{\n    public static class ContainerExtension\n    {\n        /// <summary>\n        /// 自动注册所有的View和ViewModel\n        /// </summary>\n        /// <param name=\"container\"></param>\n        public static void RegisterAllViewModel(this IContainerRegistry container, Assembly assembly)\n        {\n            var types = assembly.GetTypes().Where(c => c.BaseType == typeof(ContentView));\n\n            foreach (var type in types)\n            {\n                var attribute = type.GetCustomAttribute<IocForRegionNavigationAttribute>();\n\n                if (attribute != null)\n                {\n                    var viewModelType = attribute.ViewModelType;\n                    var registerName = attribute.RegisterName ?? type.Name;\n\n                    container.RegisterForRegionNavigation(type, viewModelType, registerName);\n                }\n            }\n        }\n    }\n}\n```\n\n`var types = assembly.GetTypes().Where(c => c.BaseType == typeof(ContentView));`是为了获取程序集中所有的`ContentView`，因为我们的特性都是放在`ContentView`上的，它承载了应用的UI。\n\n我们这里找到所有使用了`IocForRegionNavigationAttribute`特性的`ContentView`，并根据`ViewModelType`注册进容器。\n\n## 五、使用扩展方法\n\n在UI类库中，修改UIModul\n\n```\nusing Core;\nusing Core.Extensions;\nusing System.Reflection;\nusing UI.Views;\n\nnamespace UI\n{\n    public class UiModule(IRegionManager regionManager) : IModule\n    {\n        #region Implementation of IModule\n\n        /// <summary>\n        /// Used to register types with the container that will be used by your application.\n        /// </summary>\n        public void RegisterTypes(IContainerRegistry container)\n        {\n            //container.RegisterForRegionNavigation<ViewA, ViewAViewModel>();\n            //container.RegisterForRegionNavigation<ViewB, ViewBViewModel>();\n\n            container.RegisterAllViewModel(Assembly.GetAssembly(typeof(UiModule))!);\n        }\n\n        /// <summary>Notifies the module that it has been initialized.</summary>\n        public void OnInitialized(IContainerProvider containerProvider)\n        {\n            regionManager.RegisterViewWithRegion(RegionNames.MainRegion, nameof(ViewA));\n        }\n\n        #endregion\n    }\n}\n```\n\n在这里我们注释掉了原来的视图注册方法，直接调用`container.RegisterAllViewModel(Assembly.GetAssembly(typeof(UiModule))!);`进行注册。\n\n其他代码不需要改动。\n\n自此，所有新建在Ui类库中的视图，只要使用了`IocForRegionNavigationAttribute` ,程序都会自动在加载的时候将视图注入到容器中。\n","slug":"从零开始搭建Maui框架02-自动注册视图和视图模型","published":1,"updated":"2024-11-19T08:37:33.313Z","_id":"cm3o2ensv0006ikv43v2l0hh3","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"从零开始搭建Maui框架02-自动注册视图和视图模型\"><a href=\"#从零开始搭建Maui框架02-自动注册视图和视图模型\" class=\"headerlink\" title=\"从零开始搭建Maui框架02-自动注册视图和视图模型\"></a>从零开始搭建Maui框架02-自动注册视图和视图模型</h1><p>上一次我们创建了基础的Maui框架，现在我们进一步优化上次的框架。</p>\n<p>我们在创建视图(<code>View</code>)和视图模型(<code>ViewModel</code>)后，需要再在模块(<code>Module</code>)中将这两者注册到容器中，比较麻烦，而且代码量也很大，还容易遗漏注册，最主要的是不够优雅，下面我们将实现视图和视图模型自动注册。</p>\n<p>这个教程中用到的技术原理是反射(<code>reflection</code>)和特性(<code>Attribute</code>)以及扩展方法。</p>\n<h2 id=\"一、新增类库项目\"><a href=\"#一、新增类库项目\" class=\"headerlink\" title=\"一、新增类库项目\"></a>一、新增类库项目</h2><p>为了后续更好的模块化，现在在解决方案中新增两个新的<strong>Maui类库项目</strong>，<strong>分别命名为Core和MauiLib</strong></p>\n<p>现在项目中有3个类库项目(<code>Core、MauiLib、UI</code>)，1个Maui应用程序项目(<code>MauiPrism9Demo</code>)。</p>\n<p>Core：存放项目基础框架代码，这次新增的主要代码都在其中。</p>\n<p>MauiLib：存放项目中用到的第三方类库，像之前<code>Prism.Maui、Prism.Ioc.Maui</code> 等都放在这里，<strong>其他项目只需要引用这个项目，不需要重复导入第三方类库，同时也方便管理。</strong></p>\n<p>MauiPrism9Demo：应用程序入口，模块加载，应用程序配置都在这里。</p>\n<p>UI：主要存放视图和视图模型。后面可以把主题也放这里。</p>\n<p><strong>应用程序的引用路径为：<code>Maui -&gt; Core -&gt; UI-&gt; MauiPrism9Demo</code>，不要重复引用，以免造成循环引用。</strong></p>\n<h2 id=\"二、新增特性Attribute\"><a href=\"#二、新增特性Attribute\" class=\"headerlink\" title=\"二、新增特性Attribute\"></a>二、新增特性<code>Attribute</code></h2><p>在Core类库中新增Attributes文件夹，并在其中新增一个类，命名为<code>IocForRegionNavigationAttribute</code> ，继承<code>Attribute</code></p>\n<p>1.在类中新增两个自动属性</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> ViewModel类型</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-keyword\">public</span> Type ViewModelType &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125; = viewModelType;<br><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 注册名称</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span>? RegisterName &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125; = registerName;<br></code></pre></td></tr></table></figure>\n\n<p><code>ViewModelType</code> 是用来表示要注入到视图的<code>ViewModel</code>类型</p>\n<p><code>RegisterName</code>是注册的名字，区域导航的时候用到，如果为空则使用<code>View</code>的<code>name</code></p>\n<p>2.添加构造函数，将两个自动属性通过构造赋值。我这里使用了C#12中的主构函数。</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-symbol\">IocForRegionNavigationAttribute</span>(<span class=\"hljs-symbol\">Type</span> <span class=\"hljs-symbol\">viewModelType, <span class=\"hljs-symbol\">string</span></span>? <span class=\"hljs-symbol\">registerName</span> = <span class=\"hljs-symbol\">null</span>) : <span class=\"hljs-symbol\">Attribute</span><br></code></pre></td></tr></table></figure>\n\n<p>3.完整的代码</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core.Attributes</span><br>&#123;<br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 注入视图模型到区域导航</span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;viewModelType&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;registerName&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br>    [<span class=\"hljs-meta\">AttributeUsage(AttributeTargets.Class)</span>]<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">IocForRegionNavigationAttribute</span>(<span class=\"hljs-params\">Type viewModelType, <span class=\"hljs-built_in\">string</span>? registerName = <span class=\"hljs-literal\">null</span></span>) : Attribute</span><br>    &#123;<br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> ViewModel类型</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-keyword\">public</span> Type ViewModelType &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125; = viewModelType;<br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 注册名称</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span>? RegisterName &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125; = registerName;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>代码中的<code>AttributeUsage</code>特性是指示当前这个特性(<code>IocForRegionNavigationAttribute</code>)只能用在类上。</p>\n<h2 id=\"三、使用特性\"><a href=\"#三、使用特性\" class=\"headerlink\" title=\"三、使用特性\"></a>三、使用特性</h2><p><a href=\"https://learn.microsoft.com/zh-cn/dotnet/csharp/advanced-topics/reflection-and-attributes/\">特性官方文档</a></p>\n<p>在UI类库中，找到我们的视图(<code>View</code>)，在视图的隐藏代码上添加<code>IocForRegionNavigation</code>特性，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core.Attributes;<br><span class=\"hljs-keyword\">using</span> UI.ViewModels;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.Views</span>;<br><br>[<span class=\"hljs-meta\">IocForRegionNavigation(typeof(ViewAViewModel))</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">partial</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewA</span> : <span class=\"hljs-title\">ContentView</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">ViewA</span>()</span><br>    &#123;<br>        InitializeComponent();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这里我们将<code>ViewAViewModel</code>作为<code>ViewA</code>的<code>ViewModel</code></p>\n<h2 id=\"四、编写容器扩展\"><a href=\"#四、编写容器扩展\" class=\"headerlink\" title=\"四、编写容器扩展\"></a>四、编写容器扩展</h2><p><a href=\"https://learn.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/extension-methods\">扩展方法的官方文档</a></p>\n<p>在<code>Core</code>类库中新增<code>Extensions</code>文件夹，用来存放扩展方法。</p>\n<p>新增静态类，命名<code>ContainerExtension</code></p>\n<p>类中新增<code>RegisterAllViewModel</code>扩展方法，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core.Attributes;<br><span class=\"hljs-keyword\">using</span> System.Reflection;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core.Extensions</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ContainerExtension</span><br>    &#123;<br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 自动注册所有的View和ViewModel</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;container&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">RegisterAllViewModel</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">this</span> IContainerRegistry container, Assembly assembly</span>)</span><br>        &#123;<br>            <span class=\"hljs-keyword\">var</span> types = assembly.GetTypes().Where(c =&gt; c.BaseType == <span class=\"hljs-keyword\">typeof</span>(ContentView));<br><br>            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> type <span class=\"hljs-keyword\">in</span> types)<br>            &#123;<br>                <span class=\"hljs-keyword\">var</span> attribute = type.GetCustomAttribute&lt;IocForRegionNavigationAttribute&gt;();<br><br>                <span class=\"hljs-keyword\">if</span> (attribute != <span class=\"hljs-literal\">null</span>)<br>                &#123;<br>                    <span class=\"hljs-keyword\">var</span> viewModelType = attribute.ViewModelType;<br>                    <span class=\"hljs-keyword\">var</span> registerName = attribute.RegisterName ?? type.Name;<br><br>                    container.RegisterForRegionNavigation(type, viewModelType, registerName);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p><code>var types = assembly.GetTypes().Where(c =&gt; c.BaseType == typeof(ContentView));</code>是为了获取程序集中所有的<code>ContentView</code>，因为我们的特性都是放在<code>ContentView</code>上的，它承载了应用的UI。</p>\n<p>我们这里找到所有使用了<code>IocForRegionNavigationAttribute</code>特性的<code>ContentView</code>，并根据<code>ViewModelType</code>注册进容器。</p>\n<h2 id=\"五、使用扩展方法\"><a href=\"#五、使用扩展方法\" class=\"headerlink\" title=\"五、使用扩展方法\"></a>五、使用扩展方法</h2><p>在UI类库中，修改UIModul</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Extensions;<br><span class=\"hljs-keyword\">using</span> System.Reflection;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UiModule</span>(<span class=\"hljs-params\">IRegionManager regionManager</span>) : IModule</span><br>    &#123;<br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">region</span> Implementation of IModule</span><br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Used to register types with the container that will be used by your application.</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">RegisterTypes</span>(<span class=\"hljs-params\">IContainerRegistry container</span>)</span><br>        &#123;<br>            <span class=\"hljs-comment\">//container.RegisterForRegionNavigation&lt;ViewA, ViewAViewModel&gt;();</span><br>            <span class=\"hljs-comment\">//container.RegisterForRegionNavigation&lt;ViewB, ViewBViewModel&gt;();</span><br><br>            container.RegisterAllViewModel(Assembly.GetAssembly(<span class=\"hljs-keyword\">typeof</span>(UiModule))!);<br>        &#125;<br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span>Notifies the module that it has been initialized.<span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnInitialized</span>(<span class=\"hljs-params\">IContainerProvider containerProvider</span>)</span><br>        &#123;<br>            regionManager.RegisterViewWithRegion(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewA));<br>        &#125;<br><br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endregion</span></span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在这里我们注释掉了原来的视图注册方法，直接调用<code>container.RegisterAllViewModel(Assembly.GetAssembly(typeof(UiModule))!);</code>进行注册。</p>\n<p>其他代码不需要改动。</p>\n<p>自此，所有新建在Ui类库中的视图，只要使用了<code>IocForRegionNavigationAttribute</code> ,程序都会自动在加载的时候将视图注入到容器中。</p>\n","excerpt":"","more":"<h1 id=\"从零开始搭建Maui框架02-自动注册视图和视图模型\"><a href=\"#从零开始搭建Maui框架02-自动注册视图和视图模型\" class=\"headerlink\" title=\"从零开始搭建Maui框架02-自动注册视图和视图模型\"></a>从零开始搭建Maui框架02-自动注册视图和视图模型</h1><p>上一次我们创建了基础的Maui框架，现在我们进一步优化上次的框架。</p>\n<p>我们在创建视图(<code>View</code>)和视图模型(<code>ViewModel</code>)后，需要再在模块(<code>Module</code>)中将这两者注册到容器中，比较麻烦，而且代码量也很大，还容易遗漏注册，最主要的是不够优雅，下面我们将实现视图和视图模型自动注册。</p>\n<p>这个教程中用到的技术原理是反射(<code>reflection</code>)和特性(<code>Attribute</code>)以及扩展方法。</p>\n<h2 id=\"一、新增类库项目\"><a href=\"#一、新增类库项目\" class=\"headerlink\" title=\"一、新增类库项目\"></a>一、新增类库项目</h2><p>为了后续更好的模块化，现在在解决方案中新增两个新的<strong>Maui类库项目</strong>，<strong>分别命名为Core和MauiLib</strong></p>\n<p>现在项目中有3个类库项目(<code>Core、MauiLib、UI</code>)，1个Maui应用程序项目(<code>MauiPrism9Demo</code>)。</p>\n<p>Core：存放项目基础框架代码，这次新增的主要代码都在其中。</p>\n<p>MauiLib：存放项目中用到的第三方类库，像之前<code>Prism.Maui、Prism.Ioc.Maui</code> 等都放在这里，<strong>其他项目只需要引用这个项目，不需要重复导入第三方类库，同时也方便管理。</strong></p>\n<p>MauiPrism9Demo：应用程序入口，模块加载，应用程序配置都在这里。</p>\n<p>UI：主要存放视图和视图模型。后面可以把主题也放这里。</p>\n<p><strong>应用程序的引用路径为：<code>Maui -&gt; Core -&gt; UI-&gt; MauiPrism9Demo</code>，不要重复引用，以免造成循环引用。</strong></p>\n<h2 id=\"二、新增特性Attribute\"><a href=\"#二、新增特性Attribute\" class=\"headerlink\" title=\"二、新增特性Attribute\"></a>二、新增特性<code>Attribute</code></h2><p>在Core类库中新增Attributes文件夹，并在其中新增一个类，命名为<code>IocForRegionNavigationAttribute</code> ，继承<code>Attribute</code></p>\n<p>1.在类中新增两个自动属性</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> ViewModel类型</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-keyword\">public</span> Type ViewModelType &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125; = viewModelType;<br><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 注册名称</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span>? RegisterName &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125; = registerName;<br></code></pre></td></tr></table></figure>\n\n<p><code>ViewModelType</code> 是用来表示要注入到视图的<code>ViewModel</code>类型</p>\n<p><code>RegisterName</code>是注册的名字，区域导航的时候用到，如果为空则使用<code>View</code>的<code>name</code></p>\n<p>2.添加构造函数，将两个自动属性通过构造赋值。我这里使用了C#12中的主构函数。</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs angelscript\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-symbol\">IocForRegionNavigationAttribute</span>(<span class=\"hljs-symbol\">Type</span> <span class=\"hljs-symbol\">viewModelType, <span class=\"hljs-symbol\">string</span></span>? <span class=\"hljs-symbol\">registerName</span> = <span class=\"hljs-symbol\">null</span>) : <span class=\"hljs-symbol\">Attribute</span><br></code></pre></td></tr></table></figure>\n\n<p>3.完整的代码</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core.Attributes</span><br>&#123;<br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 注入视图模型到区域导航</span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;viewModelType&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;registerName&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br>    [<span class=\"hljs-meta\">AttributeUsage(AttributeTargets.Class)</span>]<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">IocForRegionNavigationAttribute</span>(<span class=\"hljs-params\">Type viewModelType, <span class=\"hljs-built_in\">string</span>? registerName = <span class=\"hljs-literal\">null</span></span>) : Attribute</span><br>    &#123;<br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> ViewModel类型</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-keyword\">public</span> Type ViewModelType &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125; = viewModelType;<br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 注册名称</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span>? RegisterName &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>; &#125; = registerName;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>代码中的<code>AttributeUsage</code>特性是指示当前这个特性(<code>IocForRegionNavigationAttribute</code>)只能用在类上。</p>\n<h2 id=\"三、使用特性\"><a href=\"#三、使用特性\" class=\"headerlink\" title=\"三、使用特性\"></a>三、使用特性</h2><p><a href=\"https://learn.microsoft.com/zh-cn/dotnet/csharp/advanced-topics/reflection-and-attributes/\">特性官方文档</a></p>\n<p>在UI类库中，找到我们的视图(<code>View</code>)，在视图的隐藏代码上添加<code>IocForRegionNavigation</code>特性，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core.Attributes;<br><span class=\"hljs-keyword\">using</span> UI.ViewModels;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.Views</span>;<br><br>[<span class=\"hljs-meta\">IocForRegionNavigation(typeof(ViewAViewModel))</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">partial</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewA</span> : <span class=\"hljs-title\">ContentView</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">ViewA</span>()</span><br>    &#123;<br>        InitializeComponent();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这里我们将<code>ViewAViewModel</code>作为<code>ViewA</code>的<code>ViewModel</code></p>\n<h2 id=\"四、编写容器扩展\"><a href=\"#四、编写容器扩展\" class=\"headerlink\" title=\"四、编写容器扩展\"></a>四、编写容器扩展</h2><p><a href=\"https://learn.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/extension-methods\">扩展方法的官方文档</a></p>\n<p>在<code>Core</code>类库中新增<code>Extensions</code>文件夹，用来存放扩展方法。</p>\n<p>新增静态类，命名<code>ContainerExtension</code></p>\n<p>类中新增<code>RegisterAllViewModel</code>扩展方法，代码如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core.Attributes;<br><span class=\"hljs-keyword\">using</span> System.Reflection;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Core.Extensions</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ContainerExtension</span><br>    &#123;<br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 自动注册所有的View和ViewModel</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;container&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">RegisterAllViewModel</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">this</span> IContainerRegistry container, Assembly assembly</span>)</span><br>        &#123;<br>            <span class=\"hljs-keyword\">var</span> types = assembly.GetTypes().Where(c =&gt; c.BaseType == <span class=\"hljs-keyword\">typeof</span>(ContentView));<br><br>            <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> type <span class=\"hljs-keyword\">in</span> types)<br>            &#123;<br>                <span class=\"hljs-keyword\">var</span> attribute = type.GetCustomAttribute&lt;IocForRegionNavigationAttribute&gt;();<br><br>                <span class=\"hljs-keyword\">if</span> (attribute != <span class=\"hljs-literal\">null</span>)<br>                &#123;<br>                    <span class=\"hljs-keyword\">var</span> viewModelType = attribute.ViewModelType;<br>                    <span class=\"hljs-keyword\">var</span> registerName = attribute.RegisterName ?? type.Name;<br><br>                    container.RegisterForRegionNavigation(type, viewModelType, registerName);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p><code>var types = assembly.GetTypes().Where(c =&gt; c.BaseType == typeof(ContentView));</code>是为了获取程序集中所有的<code>ContentView</code>，因为我们的特性都是放在<code>ContentView</code>上的，它承载了应用的UI。</p>\n<p>我们这里找到所有使用了<code>IocForRegionNavigationAttribute</code>特性的<code>ContentView</code>，并根据<code>ViewModelType</code>注册进容器。</p>\n<h2 id=\"五、使用扩展方法\"><a href=\"#五、使用扩展方法\" class=\"headerlink\" title=\"五、使用扩展方法\"></a>五、使用扩展方法</h2><p>在UI类库中，修改UIModul</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Extensions;<br><span class=\"hljs-keyword\">using</span> System.Reflection;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UiModule</span>(<span class=\"hljs-params\">IRegionManager regionManager</span>) : IModule</span><br>    &#123;<br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">region</span> Implementation of IModule</span><br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Used to register types with the container that will be used by your application.</span><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">RegisterTypes</span>(<span class=\"hljs-params\">IContainerRegistry container</span>)</span><br>        &#123;<br>            <span class=\"hljs-comment\">//container.RegisterForRegionNavigation&lt;ViewA, ViewAViewModel&gt;();</span><br>            <span class=\"hljs-comment\">//container.RegisterForRegionNavigation&lt;ViewB, ViewBViewModel&gt;();</span><br><br>            container.RegisterAllViewModel(Assembly.GetAssembly(<span class=\"hljs-keyword\">typeof</span>(UiModule))!);<br>        &#125;<br><br>        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span>Notifies the module that it has been initialized.<span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnInitialized</span>(<span class=\"hljs-params\">IContainerProvider containerProvider</span>)</span><br>        &#123;<br>            regionManager.RegisterViewWithRegion(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewA));<br>        &#125;<br><br>        <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endregion</span></span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在这里我们注释掉了原来的视图注册方法，直接调用<code>container.RegisterAllViewModel(Assembly.GetAssembly(typeof(UiModule))!);</code>进行注册。</p>\n<p>其他代码不需要改动。</p>\n<p>自此，所有新建在Ui类库中的视图，只要使用了<code>IocForRegionNavigationAttribute</code> ,程序都会自动在加载的时候将视图注入到容器中。</p>\n"},{"title":"从零开始搭建Maui框架04-添加日志组件","date":"2024-11-19T06:19:32.000Z","_content":"\n## 日志系统\n\n日志系统是应用程序中一个重要的组件，它负责记录应用程序在运行过程中的各种事件和信息。这些信息包括但不限于：\n\n* **错误信息：** 程序运行时发生的异常、错误等。\n* **调试信息：** 开发者为了调试程序而添加的详细输出。\n* **警告信息：** 程序运行过程中出现的一些潜在问题或异常情况。\n* **重要事件：** 程序中一些关键操作的记录，如用户登录、数据更新等。\n\n### 日志系统的作用\n\n* **故障排查：** 通过分析日志，可以快速定位并解决程序中的问题，提高系统的稳定性。\n* **性能优化：** 分析日志可以发现性能瓶颈，优化程序的运行效率。\n* **安全审计：** 记录用户操作和系统事件，有助于进行安全审计和风险评估。\n* **数据分析：** 日志数据可以用于分析用户行为、系统使用情况等，为产品改进提供数据支持。\n\n### 日志系统的组成\n\n一个完整的日志系统通常包括以下几个部分：\n\n* **日志生成：** 应用程序在关键位置生成日志信息，通常通过调用日志库的接口来实现。\n* **日志收集：** 将分散在各个服务器上的日志收集到一个中心化的存储系统中。\n* **日志存储：** 将收集到的日志数据存储在磁盘、数据库或云存储等介质上。\n* **日志分析：** 对存储的日志数据进行分析，提取有价值的信息。\n\n### 日志系统的分类\n\n* **按功能分类：**\n  * **错误日志：** 记录程序错误和异常信息。\n  * **调试日志：** 记录调试信息，方便开发人员定位问题。\n  * **访问日志：** 记录用户访问系统的信息，如访问时间、IP地址等。\n  * **系统日志：** 记录系统运行状态和事件信息。\n* **按技术分类：**\n  * **文件日志：** 将日志信息写入到文本文件中。\n  * **数据库日志：** 将日志信息存储到数据库中。\n  * **消息队列日志：** 将日志信息发送到消息队列中。\n  * **结构化日志：** 将日志信息以结构化的格式存储，方便搜索和分析。\n\n## 在Maui中添加日志组件\n\n支持MAUI的日志组件有很多，在这里，我们将使用`Serilog` 可以[点击这里](https://serilog.net/)查看官网。\n\n### 添加Nuget包\n\n我们需要添加`Serilog`、`Serilog.Sinks.Async` 、`Serilog.Sinks.File`、`Serilog.Extensions.Hosting`\n\n### 配置日志组件\n\n参考[官网文档](https://https://serilog.net/)，我们可以发现，只要配置好组件以后，就可以直接使用了。\n\n我们在程序的入口处配置组件，代码如下\n\n```\n           prism.ConfigureLogging(configureLogging =>\n                {\n                    var logConfig = new LoggerConfiguration();\n\n                    logConfig.WriteTo.Async((skinConfig) =>\n                    {\n                        var basePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);\n\n#if ANDROID\n                        var androidPaths = Android.App.Application.Context.GetExternalFilesDirs(null);\n                        basePath = androidPaths[0].AbsolutePath;\n#endif\n\n                        var baseLogPath = Path.Combine(basePath, \"logs\");\n\n                        skinConfig.File(path: $\"{baseLogPath}/.log\",\n                            restrictedToMinimumLevel: LogEventLevel.Verbose,\n                            rollingInterval: RollingInterval.Day);\n                    });\n\n                    Log.Logger = logConfig.CreateLogger();\n\n                    configureLogging.Services.AddSerilog(Log.Logger);\n                });\n```\n\n其中，basePath是日志文件存放的路径。当在Windows下时，直接获取`LocalApplicationData`路径。\n\n**在Android中，我们将日志文件放置在外部存储中。**\n\n> 在android中，我们需要添加外部文件读取权限`android.permission.READ_EXTERNAL_STORAGE`和外部文件写入权限`android.permission.WRITE_EXTERNAL_STORAGE`.\n\n完整的注册文件如下\n\n```\nusing Core;\nusing Microsoft.Extensions.Logging;\nusing Serilog;\nusing Serilog.Events;\nusing System.Diagnostics;\nusing UI;\n\n\nnamespace MauiPrism9Demo\n{\n    public static class MauiProgram\n    {\n        public static MauiApp CreateMauiApp()\n        {\n            var builder = MauiApp.CreateBuilder();\n            builder.UseMauiApp<App>();\n\n\n            builder.ConfigureFonts(fonts =>\n            {\n                fonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n                fonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n            });\n\n\n#if DEBUG\n            //启用日志调试\n            Serilog.Debugging.SelfLog.Enable(Console.Error);\n#endif\n\n\n            builder.UsePrism(prism =>\n            {\n                prism.RegisterTypes(container => { container.RegisterForNavigation<MainPage>(); });\n\n\n                prism.ConfigureLogging(configureLogging =>\n                {\n                    var logConfig = new LoggerConfiguration();\n\n                    logConfig.WriteTo.Async((skinConfig) =>\n                    {\n                        var basePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);\n\n#if ANDROID\n                        var androidPaths = Android.App.Application.Context.GetExternalFilesDirs(null);\n                        basePath = androidPaths[0].AbsolutePath;\n#endif\n\n                        var baseLogPath = Path.Combine(basePath, \"logs\");\n\n                        skinConfig.File(path: $\"{baseLogPath}/.log\",\n                            restrictedToMinimumLevel: LogEventLevel.Verbose,\n                            rollingInterval: RollingInterval.Day);\n                    });\n\n                    Log.Logger = logConfig.CreateLogger();\n\n                    configureLogging.Services.AddSerilog(Log.Logger);\n                });\n\n\n                prism.ConfigureModuleCatalog(configureCatalog =>\n                {\n                    configureCatalog.AddModule<CoreModule>(InitializationMode.OnDemand);\n                    configureCatalog.AddModule<UiModule>();\n                });\n\n\n                //导航到根目录\n                prism.CreateWindow($\"/{nameof(MainPage)}\", ex =>\n                {\n                    Debug.Write(ex.StackTrace);\n                    throw ex;\n                });\n            });\n\n\n#if DEBUG\n            builder.Logging.AddDebug();\n#endif\n\n            return builder.Build();\n        }\n    }\n}\n```\n\n## 使用日志组件\n\n在任意需要使用日志的地方，直接调用`Log.Logger.xxx`就能够生成日志了。如在MainPage初始化的完成的时候，直接调用`Log.Logger.Information(\"MainPage初始化\");`会在日志中写入`MainPage`初始化完成。\n\n也可以通过依赖注入的方式，直接注入`ILogger`接口，然后直接调用`logger.xxx`即可。如在ViweAViewModel中调用\n\n```\nusing System.Windows.Input;\nusing Core;\nusing Core.Dtos;\nusing Core.Events;\nusing Serilog;\nusing UI.Views;\n\nnamespace UI.ViewModels\n{\n    public class ViewAViewModel(IRegionManager regionManager, IEventAggregator eventAggregator, ILogger logger)\n        : BindableBase\n    {\n        public ICommand ToViewBCommand => new DelegateCommand(() =>\n        {\n            regionManager.RequestNavigate(RegionNames.MainRegion, nameof(ViewB));\n        });\n\n        public ICommand PublishEventCommand => new DelegateCommand(() =>\n        {\n            eventAggregator.GetEvent<EventTest>().Publish(new EventTestDto(\"这是一个Title\",\n                $\"这是一个Content，发布时间为：{DateTime.Now:yyy-MM-dd HH:mm:ss}\"));\n\n            logger.Information(\"发布消息\");\n        });\n    }\n}\n```\n\n## 总结\n\n日志组件的使用无非就是配置，然后直接调用，非常简单。\n","source":"_posts/从零开始搭建Maui框架04-添加日志组件.md","raw":"---\ntitle: 从零开始搭建Maui框架04-添加日志组件\ndate: 2024-11-19 14:19:32\ncategories:\n\t- MAUI教程\ntags:\n\t- C#\n\t- .NET\n\t- MAUI\n\t- Prism\n---\n\n## 日志系统\n\n日志系统是应用程序中一个重要的组件，它负责记录应用程序在运行过程中的各种事件和信息。这些信息包括但不限于：\n\n* **错误信息：** 程序运行时发生的异常、错误等。\n* **调试信息：** 开发者为了调试程序而添加的详细输出。\n* **警告信息：** 程序运行过程中出现的一些潜在问题或异常情况。\n* **重要事件：** 程序中一些关键操作的记录，如用户登录、数据更新等。\n\n### 日志系统的作用\n\n* **故障排查：** 通过分析日志，可以快速定位并解决程序中的问题，提高系统的稳定性。\n* **性能优化：** 分析日志可以发现性能瓶颈，优化程序的运行效率。\n* **安全审计：** 记录用户操作和系统事件，有助于进行安全审计和风险评估。\n* **数据分析：** 日志数据可以用于分析用户行为、系统使用情况等，为产品改进提供数据支持。\n\n### 日志系统的组成\n\n一个完整的日志系统通常包括以下几个部分：\n\n* **日志生成：** 应用程序在关键位置生成日志信息，通常通过调用日志库的接口来实现。\n* **日志收集：** 将分散在各个服务器上的日志收集到一个中心化的存储系统中。\n* **日志存储：** 将收集到的日志数据存储在磁盘、数据库或云存储等介质上。\n* **日志分析：** 对存储的日志数据进行分析，提取有价值的信息。\n\n### 日志系统的分类\n\n* **按功能分类：**\n  * **错误日志：** 记录程序错误和异常信息。\n  * **调试日志：** 记录调试信息，方便开发人员定位问题。\n  * **访问日志：** 记录用户访问系统的信息，如访问时间、IP地址等。\n  * **系统日志：** 记录系统运行状态和事件信息。\n* **按技术分类：**\n  * **文件日志：** 将日志信息写入到文本文件中。\n  * **数据库日志：** 将日志信息存储到数据库中。\n  * **消息队列日志：** 将日志信息发送到消息队列中。\n  * **结构化日志：** 将日志信息以结构化的格式存储，方便搜索和分析。\n\n## 在Maui中添加日志组件\n\n支持MAUI的日志组件有很多，在这里，我们将使用`Serilog` 可以[点击这里](https://serilog.net/)查看官网。\n\n### 添加Nuget包\n\n我们需要添加`Serilog`、`Serilog.Sinks.Async` 、`Serilog.Sinks.File`、`Serilog.Extensions.Hosting`\n\n### 配置日志组件\n\n参考[官网文档](https://https://serilog.net/)，我们可以发现，只要配置好组件以后，就可以直接使用了。\n\n我们在程序的入口处配置组件，代码如下\n\n```\n           prism.ConfigureLogging(configureLogging =>\n                {\n                    var logConfig = new LoggerConfiguration();\n\n                    logConfig.WriteTo.Async((skinConfig) =>\n                    {\n                        var basePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);\n\n#if ANDROID\n                        var androidPaths = Android.App.Application.Context.GetExternalFilesDirs(null);\n                        basePath = androidPaths[0].AbsolutePath;\n#endif\n\n                        var baseLogPath = Path.Combine(basePath, \"logs\");\n\n                        skinConfig.File(path: $\"{baseLogPath}/.log\",\n                            restrictedToMinimumLevel: LogEventLevel.Verbose,\n                            rollingInterval: RollingInterval.Day);\n                    });\n\n                    Log.Logger = logConfig.CreateLogger();\n\n                    configureLogging.Services.AddSerilog(Log.Logger);\n                });\n```\n\n其中，basePath是日志文件存放的路径。当在Windows下时，直接获取`LocalApplicationData`路径。\n\n**在Android中，我们将日志文件放置在外部存储中。**\n\n> 在android中，我们需要添加外部文件读取权限`android.permission.READ_EXTERNAL_STORAGE`和外部文件写入权限`android.permission.WRITE_EXTERNAL_STORAGE`.\n\n完整的注册文件如下\n\n```\nusing Core;\nusing Microsoft.Extensions.Logging;\nusing Serilog;\nusing Serilog.Events;\nusing System.Diagnostics;\nusing UI;\n\n\nnamespace MauiPrism9Demo\n{\n    public static class MauiProgram\n    {\n        public static MauiApp CreateMauiApp()\n        {\n            var builder = MauiApp.CreateBuilder();\n            builder.UseMauiApp<App>();\n\n\n            builder.ConfigureFonts(fonts =>\n            {\n                fonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n                fonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n            });\n\n\n#if DEBUG\n            //启用日志调试\n            Serilog.Debugging.SelfLog.Enable(Console.Error);\n#endif\n\n\n            builder.UsePrism(prism =>\n            {\n                prism.RegisterTypes(container => { container.RegisterForNavigation<MainPage>(); });\n\n\n                prism.ConfigureLogging(configureLogging =>\n                {\n                    var logConfig = new LoggerConfiguration();\n\n                    logConfig.WriteTo.Async((skinConfig) =>\n                    {\n                        var basePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);\n\n#if ANDROID\n                        var androidPaths = Android.App.Application.Context.GetExternalFilesDirs(null);\n                        basePath = androidPaths[0].AbsolutePath;\n#endif\n\n                        var baseLogPath = Path.Combine(basePath, \"logs\");\n\n                        skinConfig.File(path: $\"{baseLogPath}/.log\",\n                            restrictedToMinimumLevel: LogEventLevel.Verbose,\n                            rollingInterval: RollingInterval.Day);\n                    });\n\n                    Log.Logger = logConfig.CreateLogger();\n\n                    configureLogging.Services.AddSerilog(Log.Logger);\n                });\n\n\n                prism.ConfigureModuleCatalog(configureCatalog =>\n                {\n                    configureCatalog.AddModule<CoreModule>(InitializationMode.OnDemand);\n                    configureCatalog.AddModule<UiModule>();\n                });\n\n\n                //导航到根目录\n                prism.CreateWindow($\"/{nameof(MainPage)}\", ex =>\n                {\n                    Debug.Write(ex.StackTrace);\n                    throw ex;\n                });\n            });\n\n\n#if DEBUG\n            builder.Logging.AddDebug();\n#endif\n\n            return builder.Build();\n        }\n    }\n}\n```\n\n## 使用日志组件\n\n在任意需要使用日志的地方，直接调用`Log.Logger.xxx`就能够生成日志了。如在MainPage初始化的完成的时候，直接调用`Log.Logger.Information(\"MainPage初始化\");`会在日志中写入`MainPage`初始化完成。\n\n也可以通过依赖注入的方式，直接注入`ILogger`接口，然后直接调用`logger.xxx`即可。如在ViweAViewModel中调用\n\n```\nusing System.Windows.Input;\nusing Core;\nusing Core.Dtos;\nusing Core.Events;\nusing Serilog;\nusing UI.Views;\n\nnamespace UI.ViewModels\n{\n    public class ViewAViewModel(IRegionManager regionManager, IEventAggregator eventAggregator, ILogger logger)\n        : BindableBase\n    {\n        public ICommand ToViewBCommand => new DelegateCommand(() =>\n        {\n            regionManager.RequestNavigate(RegionNames.MainRegion, nameof(ViewB));\n        });\n\n        public ICommand PublishEventCommand => new DelegateCommand(() =>\n        {\n            eventAggregator.GetEvent<EventTest>().Publish(new EventTestDto(\"这是一个Title\",\n                $\"这是一个Content，发布时间为：{DateTime.Now:yyy-MM-dd HH:mm:ss}\"));\n\n            logger.Information(\"发布消息\");\n        });\n    }\n}\n```\n\n## 总结\n\n日志组件的使用无非就是配置，然后直接调用，非常简单。\n","slug":"从零开始搭建Maui框架04-添加日志组件","published":1,"updated":"2024-11-19T08:37:20.252Z","_id":"cm3o2ensw0007ikv4hyv867qs","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"日志系统\"><a href=\"#日志系统\" class=\"headerlink\" title=\"日志系统\"></a>日志系统</h2><p>日志系统是应用程序中一个重要的组件，它负责记录应用程序在运行过程中的各种事件和信息。这些信息包括但不限于：</p>\n<ul>\n<li><strong>错误信息：</strong> 程序运行时发生的异常、错误等。</li>\n<li><strong>调试信息：</strong> 开发者为了调试程序而添加的详细输出。</li>\n<li><strong>警告信息：</strong> 程序运行过程中出现的一些潜在问题或异常情况。</li>\n<li><strong>重要事件：</strong> 程序中一些关键操作的记录，如用户登录、数据更新等。</li>\n</ul>\n<h3 id=\"日志系统的作用\"><a href=\"#日志系统的作用\" class=\"headerlink\" title=\"日志系统的作用\"></a>日志系统的作用</h3><ul>\n<li><strong>故障排查：</strong> 通过分析日志，可以快速定位并解决程序中的问题，提高系统的稳定性。</li>\n<li><strong>性能优化：</strong> 分析日志可以发现性能瓶颈，优化程序的运行效率。</li>\n<li><strong>安全审计：</strong> 记录用户操作和系统事件，有助于进行安全审计和风险评估。</li>\n<li><strong>数据分析：</strong> 日志数据可以用于分析用户行为、系统使用情况等，为产品改进提供数据支持。</li>\n</ul>\n<h3 id=\"日志系统的组成\"><a href=\"#日志系统的组成\" class=\"headerlink\" title=\"日志系统的组成\"></a>日志系统的组成</h3><p>一个完整的日志系统通常包括以下几个部分：</p>\n<ul>\n<li><strong>日志生成：</strong> 应用程序在关键位置生成日志信息，通常通过调用日志库的接口来实现。</li>\n<li><strong>日志收集：</strong> 将分散在各个服务器上的日志收集到一个中心化的存储系统中。</li>\n<li><strong>日志存储：</strong> 将收集到的日志数据存储在磁盘、数据库或云存储等介质上。</li>\n<li><strong>日志分析：</strong> 对存储的日志数据进行分析，提取有价值的信息。</li>\n</ul>\n<h3 id=\"日志系统的分类\"><a href=\"#日志系统的分类\" class=\"headerlink\" title=\"日志系统的分类\"></a>日志系统的分类</h3><ul>\n<li><strong>按功能分类：</strong><ul>\n<li><strong>错误日志：</strong> 记录程序错误和异常信息。</li>\n<li><strong>调试日志：</strong> 记录调试信息，方便开发人员定位问题。</li>\n<li><strong>访问日志：</strong> 记录用户访问系统的信息，如访问时间、IP地址等。</li>\n<li><strong>系统日志：</strong> 记录系统运行状态和事件信息。</li>\n</ul>\n</li>\n<li><strong>按技术分类：</strong><ul>\n<li><strong>文件日志：</strong> 将日志信息写入到文本文件中。</li>\n<li><strong>数据库日志：</strong> 将日志信息存储到数据库中。</li>\n<li><strong>消息队列日志：</strong> 将日志信息发送到消息队列中。</li>\n<li><strong>结构化日志：</strong> 将日志信息以结构化的格式存储，方便搜索和分析。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"在Maui中添加日志组件\"><a href=\"#在Maui中添加日志组件\" class=\"headerlink\" title=\"在Maui中添加日志组件\"></a>在Maui中添加日志组件</h2><p>支持MAUI的日志组件有很多，在这里，我们将使用<code>Serilog</code> 可以<a href=\"https://serilog.net/\">点击这里</a>查看官网。</p>\n<h3 id=\"添加Nuget包\"><a href=\"#添加Nuget包\" class=\"headerlink\" title=\"添加Nuget包\"></a>添加Nuget包</h3><p>我们需要添加<code>Serilog</code>、<code>Serilog.Sinks.Async</code> 、<code>Serilog.Sinks.File</code>、<code>Serilog.Extensions.Hosting</code></p>\n<h3 id=\"配置日志组件\"><a href=\"#配置日志组件\" class=\"headerlink\" title=\"配置日志组件\"></a>配置日志组件</h3><p>参考<a href=\"https://https//serilog.net/\">官网文档</a>，我们可以发现，只要配置好组件以后，就可以直接使用了。</p>\n<p>我们在程序的入口处配置组件，代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\">           prism.<span class=\"hljs-title function_ invoke__\">ConfigureLogging</span>(configureLogging =&gt;<br>                &#123;<br>                    <span class=\"hljs-keyword\">var</span> logConfig = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LoggerConfiguration</span>();<br><br>                    logConfig.WriteTo.<span class=\"hljs-title function_ invoke__\">Async</span>((skinConfig) =&gt;<br>                    &#123;<br>                        <span class=\"hljs-keyword\">var</span> basePath = Environment.<span class=\"hljs-title function_ invoke__\">GetFolderPath</span>(Environment.SpecialFolder.LocalApplicationData);<br><br><span class=\"hljs-comment\">#if ANDROID</span><br>                        <span class=\"hljs-keyword\">var</span> androidPaths = Android.App.Application.Context.<span class=\"hljs-title function_ invoke__\">GetExternalFilesDirs</span>(<span class=\"hljs-literal\">null</span>);<br>                        basePath = androidPaths[<span class=\"hljs-number\">0</span>].AbsolutePath;<br><span class=\"hljs-comment\">#endif</span><br><br>                        <span class=\"hljs-keyword\">var</span> baseLogPath = Path.<span class=\"hljs-title function_ invoke__\">Combine</span>(basePath, <span class=\"hljs-string\">&quot;logs&quot;</span>);<br><br>                        skinConfig.<span class=\"hljs-title function_ invoke__\">File</span>(<span class=\"hljs-attr\">path</span>: $<span class=\"hljs-string\">&quot;&#123;baseLogPath&#125;/.log&quot;</span>,<br>                            <span class=\"hljs-attr\">restrictedToMinimumLevel</span>: LogEventLevel.Verbose,<br>                            <span class=\"hljs-attr\">rollingInterval</span>: RollingInterval.Day);<br>                    &#125;);<br><br>                    Log.Logger = logConfig.<span class=\"hljs-title function_ invoke__\">CreateLogger</span>();<br><br>                    configureLogging.Services.<span class=\"hljs-title function_ invoke__\">AddSerilog</span>(Log.Logger);<br>                &#125;);<br></code></pre></td></tr></table></figure>\n\n<p>其中，basePath是日志文件存放的路径。当在Windows下时，直接获取<code>LocalApplicationData</code>路径。</p>\n<p><strong>在Android中，我们将日志文件放置在外部存储中。</strong></p>\n<blockquote>\n<p>在android中，我们需要添加外部文件读取权限<code>android.permission.READ_EXTERNAL_STORAGE</code>和外部文件写入权限<code>android.permission.WRITE_EXTERNAL_STORAGE</code>.</p>\n</blockquote>\n<p>完整的注册文件如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Microsoft.Extensions.Logging;<br><span class=\"hljs-keyword\">using</span> Serilog;<br><span class=\"hljs-keyword\">using</span> Serilog.Events;<br><span class=\"hljs-keyword\">using</span> System.Diagnostics;<br><span class=\"hljs-keyword\">using</span> UI;<br><br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">MauiPrism9Demo</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MauiProgram</span><br>    &#123;<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> MauiApp <span class=\"hljs-title\">CreateMauiApp</span>()</span><br>        &#123;<br>            <span class=\"hljs-keyword\">var</span> builder = MauiApp.CreateBuilder();<br>            builder.UseMauiApp&lt;App&gt;();<br><br><br>            builder.ConfigureFonts(fonts =&gt;<br>            &#123;<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Regular.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansRegular&quot;</span>);<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Semibold.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansSemibold&quot;</span>);<br>            &#125;);<br><br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> DEBUG</span><br>            <span class=\"hljs-comment\">//启用日志调试</span><br>            Serilog.Debugging.SelfLog.Enable(Console.Error);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br><br>            builder.UsePrism(prism =&gt;<br>            &#123;<br>                prism.RegisterTypes(container =&gt; &#123; container.RegisterForNavigation&lt;MainPage&gt;(); &#125;);<br><br><br>                prism.ConfigureLogging(configureLogging =&gt;<br>                &#123;<br>                    <span class=\"hljs-keyword\">var</span> logConfig = <span class=\"hljs-keyword\">new</span> LoggerConfiguration();<br><br>                    logConfig.WriteTo.Async((skinConfig) =&gt;<br>                    &#123;<br>                        <span class=\"hljs-keyword\">var</span> basePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);<br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> ANDROID</span><br>                        <span class=\"hljs-keyword\">var</span> androidPaths = Android.App.Application.Context.GetExternalFilesDirs(<span class=\"hljs-literal\">null</span>);<br>                        basePath = androidPaths[<span class=\"hljs-number\">0</span>].AbsolutePath;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br>                        <span class=\"hljs-keyword\">var</span> baseLogPath = Path.Combine(basePath, <span class=\"hljs-string\">&quot;logs&quot;</span>);<br><br>                        skinConfig.File(path: <span class=\"hljs-string\">$&quot;<span class=\"hljs-subst\">&#123;baseLogPath&#125;</span>/.log&quot;</span>,<br>                            restrictedToMinimumLevel: LogEventLevel.Verbose,<br>                            rollingInterval: RollingInterval.Day);<br>                    &#125;);<br><br>                    Log.Logger = logConfig.CreateLogger();<br><br>                    configureLogging.Services.AddSerilog(Log.Logger);<br>                &#125;);<br><br><br>                prism.ConfigureModuleCatalog(configureCatalog =&gt;<br>                &#123;<br>                    configureCatalog.AddModule&lt;CoreModule&gt;(InitializationMode.OnDemand);<br>                    configureCatalog.AddModule&lt;UiModule&gt;();<br>                &#125;);<br><br><br>                <span class=\"hljs-comment\">//导航到根目录</span><br>                prism.CreateWindow(<span class=\"hljs-string\">$&quot;/<span class=\"hljs-subst\">&#123;<span class=\"hljs-keyword\">nameof</span>(MainPage)&#125;</span>&quot;</span>, ex =&gt;<br>                &#123;<br>                    Debug.Write(ex.StackTrace);<br>                    <span class=\"hljs-keyword\">throw</span> ex;<br>                &#125;);<br>            &#125;);<br><br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> DEBUG</span><br>            builder.Logging.AddDebug();<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br>            <span class=\"hljs-keyword\">return</span> builder.Build();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用日志组件\"><a href=\"#使用日志组件\" class=\"headerlink\" title=\"使用日志组件\"></a>使用日志组件</h2><p>在任意需要使用日志的地方，直接调用<code>Log.Logger.xxx</code>就能够生成日志了。如在MainPage初始化的完成的时候，直接调用<code>Log.Logger.Information(&quot;MainPage初始化&quot;);</code>会在日志中写入<code>MainPage</code>初始化完成。</p>\n<p>也可以通过依赖注入的方式，直接注入<code>ILogger</code>接口，然后直接调用<code>logger.xxx</code>即可。如在ViweAViewModel中调用</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Windows.Input;<br><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Dtos;<br><span class=\"hljs-keyword\">using</span> Core.Events;<br><span class=\"hljs-keyword\">using</span> Serilog;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.ViewModels</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewAViewModel</span>(<span class=\"hljs-params\">IRegionManager regionManager, IEventAggregator eventAggregator, ILogger logger</span>)</span><br><span class=\"hljs-function\">        : BindableBase</span><br>    &#123;<br>        <span class=\"hljs-keyword\">public</span> ICommand ToViewBCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            regionManager.RequestNavigate(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewB));<br>        &#125;);<br><br>        <span class=\"hljs-keyword\">public</span> ICommand PublishEventCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            eventAggregator.GetEvent&lt;EventTest&gt;().Publish(<span class=\"hljs-keyword\">new</span> EventTestDto(<span class=\"hljs-string\">&quot;这是一个Title&quot;</span>,<br>                <span class=\"hljs-string\">$&quot;这是一个Content，发布时间为：<span class=\"hljs-subst\">&#123;DateTime.Now:yyy-MM-dd HH:mm:ss&#125;</span>&quot;</span>));<br><br>            logger.Information(<span class=\"hljs-string\">&quot;发布消息&quot;</span>);<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>日志组件的使用无非就是配置，然后直接调用，非常简单。</p>\n","excerpt":"","more":"<h2 id=\"日志系统\"><a href=\"#日志系统\" class=\"headerlink\" title=\"日志系统\"></a>日志系统</h2><p>日志系统是应用程序中一个重要的组件，它负责记录应用程序在运行过程中的各种事件和信息。这些信息包括但不限于：</p>\n<ul>\n<li><strong>错误信息：</strong> 程序运行时发生的异常、错误等。</li>\n<li><strong>调试信息：</strong> 开发者为了调试程序而添加的详细输出。</li>\n<li><strong>警告信息：</strong> 程序运行过程中出现的一些潜在问题或异常情况。</li>\n<li><strong>重要事件：</strong> 程序中一些关键操作的记录，如用户登录、数据更新等。</li>\n</ul>\n<h3 id=\"日志系统的作用\"><a href=\"#日志系统的作用\" class=\"headerlink\" title=\"日志系统的作用\"></a>日志系统的作用</h3><ul>\n<li><strong>故障排查：</strong> 通过分析日志，可以快速定位并解决程序中的问题，提高系统的稳定性。</li>\n<li><strong>性能优化：</strong> 分析日志可以发现性能瓶颈，优化程序的运行效率。</li>\n<li><strong>安全审计：</strong> 记录用户操作和系统事件，有助于进行安全审计和风险评估。</li>\n<li><strong>数据分析：</strong> 日志数据可以用于分析用户行为、系统使用情况等，为产品改进提供数据支持。</li>\n</ul>\n<h3 id=\"日志系统的组成\"><a href=\"#日志系统的组成\" class=\"headerlink\" title=\"日志系统的组成\"></a>日志系统的组成</h3><p>一个完整的日志系统通常包括以下几个部分：</p>\n<ul>\n<li><strong>日志生成：</strong> 应用程序在关键位置生成日志信息，通常通过调用日志库的接口来实现。</li>\n<li><strong>日志收集：</strong> 将分散在各个服务器上的日志收集到一个中心化的存储系统中。</li>\n<li><strong>日志存储：</strong> 将收集到的日志数据存储在磁盘、数据库或云存储等介质上。</li>\n<li><strong>日志分析：</strong> 对存储的日志数据进行分析，提取有价值的信息。</li>\n</ul>\n<h3 id=\"日志系统的分类\"><a href=\"#日志系统的分类\" class=\"headerlink\" title=\"日志系统的分类\"></a>日志系统的分类</h3><ul>\n<li><strong>按功能分类：</strong><ul>\n<li><strong>错误日志：</strong> 记录程序错误和异常信息。</li>\n<li><strong>调试日志：</strong> 记录调试信息，方便开发人员定位问题。</li>\n<li><strong>访问日志：</strong> 记录用户访问系统的信息，如访问时间、IP地址等。</li>\n<li><strong>系统日志：</strong> 记录系统运行状态和事件信息。</li>\n</ul>\n</li>\n<li><strong>按技术分类：</strong><ul>\n<li><strong>文件日志：</strong> 将日志信息写入到文本文件中。</li>\n<li><strong>数据库日志：</strong> 将日志信息存储到数据库中。</li>\n<li><strong>消息队列日志：</strong> 将日志信息发送到消息队列中。</li>\n<li><strong>结构化日志：</strong> 将日志信息以结构化的格式存储，方便搜索和分析。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"在Maui中添加日志组件\"><a href=\"#在Maui中添加日志组件\" class=\"headerlink\" title=\"在Maui中添加日志组件\"></a>在Maui中添加日志组件</h2><p>支持MAUI的日志组件有很多，在这里，我们将使用<code>Serilog</code> 可以<a href=\"https://serilog.net/\">点击这里</a>查看官网。</p>\n<h3 id=\"添加Nuget包\"><a href=\"#添加Nuget包\" class=\"headerlink\" title=\"添加Nuget包\"></a>添加Nuget包</h3><p>我们需要添加<code>Serilog</code>、<code>Serilog.Sinks.Async</code> 、<code>Serilog.Sinks.File</code>、<code>Serilog.Extensions.Hosting</code></p>\n<h3 id=\"配置日志组件\"><a href=\"#配置日志组件\" class=\"headerlink\" title=\"配置日志组件\"></a>配置日志组件</h3><p>参考<a href=\"https://https//serilog.net/\">官网文档</a>，我们可以发现，只要配置好组件以后，就可以直接使用了。</p>\n<p>我们在程序的入口处配置组件，代码如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\">           prism.<span class=\"hljs-title function_ invoke__\">ConfigureLogging</span>(configureLogging =&gt;<br>                &#123;<br>                    <span class=\"hljs-keyword\">var</span> logConfig = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">LoggerConfiguration</span>();<br><br>                    logConfig.WriteTo.<span class=\"hljs-title function_ invoke__\">Async</span>((skinConfig) =&gt;<br>                    &#123;<br>                        <span class=\"hljs-keyword\">var</span> basePath = Environment.<span class=\"hljs-title function_ invoke__\">GetFolderPath</span>(Environment.SpecialFolder.LocalApplicationData);<br><br><span class=\"hljs-comment\">#if ANDROID</span><br>                        <span class=\"hljs-keyword\">var</span> androidPaths = Android.App.Application.Context.<span class=\"hljs-title function_ invoke__\">GetExternalFilesDirs</span>(<span class=\"hljs-literal\">null</span>);<br>                        basePath = androidPaths[<span class=\"hljs-number\">0</span>].AbsolutePath;<br><span class=\"hljs-comment\">#endif</span><br><br>                        <span class=\"hljs-keyword\">var</span> baseLogPath = Path.<span class=\"hljs-title function_ invoke__\">Combine</span>(basePath, <span class=\"hljs-string\">&quot;logs&quot;</span>);<br><br>                        skinConfig.<span class=\"hljs-title function_ invoke__\">File</span>(<span class=\"hljs-attr\">path</span>: $<span class=\"hljs-string\">&quot;&#123;baseLogPath&#125;/.log&quot;</span>,<br>                            <span class=\"hljs-attr\">restrictedToMinimumLevel</span>: LogEventLevel.Verbose,<br>                            <span class=\"hljs-attr\">rollingInterval</span>: RollingInterval.Day);<br>                    &#125;);<br><br>                    Log.Logger = logConfig.<span class=\"hljs-title function_ invoke__\">CreateLogger</span>();<br><br>                    configureLogging.Services.<span class=\"hljs-title function_ invoke__\">AddSerilog</span>(Log.Logger);<br>                &#125;);<br></code></pre></td></tr></table></figure>\n\n<p>其中，basePath是日志文件存放的路径。当在Windows下时，直接获取<code>LocalApplicationData</code>路径。</p>\n<p><strong>在Android中，我们将日志文件放置在外部存储中。</strong></p>\n<blockquote>\n<p>在android中，我们需要添加外部文件读取权限<code>android.permission.READ_EXTERNAL_STORAGE</code>和外部文件写入权限<code>android.permission.WRITE_EXTERNAL_STORAGE</code>.</p>\n</blockquote>\n<p>完整的注册文件如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Microsoft.Extensions.Logging;<br><span class=\"hljs-keyword\">using</span> Serilog;<br><span class=\"hljs-keyword\">using</span> Serilog.Events;<br><span class=\"hljs-keyword\">using</span> System.Diagnostics;<br><span class=\"hljs-keyword\">using</span> UI;<br><br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">MauiPrism9Demo</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MauiProgram</span><br>    &#123;<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> MauiApp <span class=\"hljs-title\">CreateMauiApp</span>()</span><br>        &#123;<br>            <span class=\"hljs-keyword\">var</span> builder = MauiApp.CreateBuilder();<br>            builder.UseMauiApp&lt;App&gt;();<br><br><br>            builder.ConfigureFonts(fonts =&gt;<br>            &#123;<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Regular.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansRegular&quot;</span>);<br>                fonts.AddFont(<span class=\"hljs-string\">&quot;OpenSans-Semibold.ttf&quot;</span>, <span class=\"hljs-string\">&quot;OpenSansSemibold&quot;</span>);<br>            &#125;);<br><br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> DEBUG</span><br>            <span class=\"hljs-comment\">//启用日志调试</span><br>            Serilog.Debugging.SelfLog.Enable(Console.Error);<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br><br>            builder.UsePrism(prism =&gt;<br>            &#123;<br>                prism.RegisterTypes(container =&gt; &#123; container.RegisterForNavigation&lt;MainPage&gt;(); &#125;);<br><br><br>                prism.ConfigureLogging(configureLogging =&gt;<br>                &#123;<br>                    <span class=\"hljs-keyword\">var</span> logConfig = <span class=\"hljs-keyword\">new</span> LoggerConfiguration();<br><br>                    logConfig.WriteTo.Async((skinConfig) =&gt;<br>                    &#123;<br>                        <span class=\"hljs-keyword\">var</span> basePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);<br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> ANDROID</span><br>                        <span class=\"hljs-keyword\">var</span> androidPaths = Android.App.Application.Context.GetExternalFilesDirs(<span class=\"hljs-literal\">null</span>);<br>                        basePath = androidPaths[<span class=\"hljs-number\">0</span>].AbsolutePath;<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br>                        <span class=\"hljs-keyword\">var</span> baseLogPath = Path.Combine(basePath, <span class=\"hljs-string\">&quot;logs&quot;</span>);<br><br>                        skinConfig.File(path: <span class=\"hljs-string\">$&quot;<span class=\"hljs-subst\">&#123;baseLogPath&#125;</span>/.log&quot;</span>,<br>                            restrictedToMinimumLevel: LogEventLevel.Verbose,<br>                            rollingInterval: RollingInterval.Day);<br>                    &#125;);<br><br>                    Log.Logger = logConfig.CreateLogger();<br><br>                    configureLogging.Services.AddSerilog(Log.Logger);<br>                &#125;);<br><br><br>                prism.ConfigureModuleCatalog(configureCatalog =&gt;<br>                &#123;<br>                    configureCatalog.AddModule&lt;CoreModule&gt;(InitializationMode.OnDemand);<br>                    configureCatalog.AddModule&lt;UiModule&gt;();<br>                &#125;);<br><br><br>                <span class=\"hljs-comment\">//导航到根目录</span><br>                prism.CreateWindow(<span class=\"hljs-string\">$&quot;/<span class=\"hljs-subst\">&#123;<span class=\"hljs-keyword\">nameof</span>(MainPage)&#125;</span>&quot;</span>, ex =&gt;<br>                &#123;<br>                    Debug.Write(ex.StackTrace);<br>                    <span class=\"hljs-keyword\">throw</span> ex;<br>                &#125;);<br>            &#125;);<br><br><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">if</span> DEBUG</span><br>            builder.Logging.AddDebug();<br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">endif</span></span><br><br>            <span class=\"hljs-keyword\">return</span> builder.Build();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用日志组件\"><a href=\"#使用日志组件\" class=\"headerlink\" title=\"使用日志组件\"></a>使用日志组件</h2><p>在任意需要使用日志的地方，直接调用<code>Log.Logger.xxx</code>就能够生成日志了。如在MainPage初始化的完成的时候，直接调用<code>Log.Logger.Information(&quot;MainPage初始化&quot;);</code>会在日志中写入<code>MainPage</code>初始化完成。</p>\n<p>也可以通过依赖注入的方式，直接注入<code>ILogger</code>接口，然后直接调用<code>logger.xxx</code>即可。如在ViweAViewModel中调用</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Windows.Input;<br><span class=\"hljs-keyword\">using</span> Core;<br><span class=\"hljs-keyword\">using</span> Core.Dtos;<br><span class=\"hljs-keyword\">using</span> Core.Events;<br><span class=\"hljs-keyword\">using</span> Serilog;<br><span class=\"hljs-keyword\">using</span> UI.Views;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.ViewModels</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ViewAViewModel</span>(<span class=\"hljs-params\">IRegionManager regionManager, IEventAggregator eventAggregator, ILogger logger</span>)</span><br><span class=\"hljs-function\">        : BindableBase</span><br>    &#123;<br>        <span class=\"hljs-keyword\">public</span> ICommand ToViewBCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            regionManager.RequestNavigate(RegionNames.MainRegion, <span class=\"hljs-keyword\">nameof</span>(ViewB));<br>        &#125;);<br><br>        <span class=\"hljs-keyword\">public</span> ICommand PublishEventCommand =&gt; <span class=\"hljs-keyword\">new</span> DelegateCommand(() =&gt;<br>        &#123;<br>            eventAggregator.GetEvent&lt;EventTest&gt;().Publish(<span class=\"hljs-keyword\">new</span> EventTestDto(<span class=\"hljs-string\">&quot;这是一个Title&quot;</span>,<br>                <span class=\"hljs-string\">$&quot;这是一个Content，发布时间为：<span class=\"hljs-subst\">&#123;DateTime.Now:yyy-MM-dd HH:mm:ss&#125;</span>&quot;</span>));<br><br>            logger.Information(<span class=\"hljs-string\">&quot;发布消息&quot;</span>);<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>日志组件的使用无非就是配置，然后直接调用，非常简单。</p>\n"},{"title":"从零开始搭建Maui框架06-使用第三方UI","date":"2024-11-19T06:22:32.000Z","_content":".NET MAUI (Multi-platform App UI) 虽然提供了丰富的原生控件，但有时为了实现更复杂、更个性化的用户界面，或者加速开发过程，引入第三方 UI 控件库是一个不错的选择。\n\n### 常用的收费 MAUI 第三方 UI 控件库\n\n* **Syncfusion Essential Studio for MAUI:**\n\n  * 提供了丰富的控件，包括数据网格、图表、日历、仪表盘等。\n  * 支持多种平台，并提供了示例和文档。\n  * 社区版免费\n  * [Syncfusion官网](https://www.syncfusion.com/maui-controls)\n* **Telerik UI for MAUI:**\n\n  * 提供了类似的功能，并强调性能和易用性。\n  * [Telerik官网](https://www.telerik.com/maui-ui)\n* DevExpress：\n\n  * 提供了丰富的组件，更偏向重型应用。.\n  * MAUI Control 免费\n  * [DevExPress官网](https://www.devexpress.com/maui/)\n\n### 开源的MAUI第三方UI控件库\n\n* [UraniumUI](https://github.com/enisn/UraniumUI)\n\n  * github开源\n  * 一直在更新\n* [MDC-MAUI](https://github.com/mdc-maui/mdc-maui)\n\n  * Material风格的控件\n  * github开源\n  * 已经停止维护\n* [Xceed-Toolkit-for-.NET-MAUI](https://github.com/xceedsoftware/Xceed-Toolkit-for-.NET-MAUI)\n\n  * 老牌控件库提供商\n  * MAUI模块开源免费\n  * github开源\n\n### 引入UraniumUI库\n\n虽然第三方库很多，但是这里我们使用更新比较频繁的UraniumUI。\n\n[官网文档](https://enisn-projects.io/docs/en/uranium/latest/Getting-Started)\n\n* 引入Nuget包，现在项目只需要引入`UraniumUI.Material、UraniumUI.Icons.MaterialIcons` 即可\n* 在`MauiProgram`的`CreateMauiApp`方法中添加使用UI库的代码 `builder.UseUraniumUI().UseUraniumUIMaterial();`\n* 在`MauiProgram`的`CreateMauiApp`方法中添加`MaterialIconFonts`的使用在Fonts的配置中。`fonts.AddMaterialIconFonts();`\n* 在`App.xaml`中引入命名空间 ` xmlns:material=\"http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material\"`\n* 给自带的Colors和Styles资源命名，并重写资源库\n\n  ```\n   <ResourceDictionary x:Name=\"AppColors\" Source=\"Resources/Styles/Colors.xaml\" />\n   <ResourceDictionary x:Name=\"AppStyles\" Source=\"Resources/Styles/Styles.xaml\" />\n  <material:StyleResource BasedOn=\"{x:Reference AppStyles}\" ColorsOverride=\"{x:Reference AppColors}\" />\n\n  ```\n\n### 使用UI库 模仿QQ登录界面\n\nQQ9的手机版登录界面如下图所示\n\n* 新建一个名为LoginPage的`ContentView`\n* 新建一个名为LoginPageViewModel的类，继承自`BindableBase`\n* 在LoginPage的隐藏代码`LoginPage.xaml.cs`中，添加Ioc注入\n\n  ```\n  using Core.Attributes;\n  using UI.ViewModels;\n\n  namespace UI.Views;\n\n  [IocForRegionNavigation(typeof(LoginPageViewModel))]\n  public partial class LoginPage : ContentView\n  {\n      public LoginPage()\n      {\n          InitializeComponent();\n      }\n  }\n  ```\n* 在LoginPage中引入命名空间` xmlns:material=\"clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material\"`\n\n  > 注意，这里千万不要引错了，这里的命名空间是带Controls的。`http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material`是错误的命名空间，VS编译通不过。\n  >\n* 修改LoginPage的代码\n\n  ```\n  <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  <ContentView x:Class=\"UI.Views.LoginPage\"\n               xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n               xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n               xmlns:m=\"clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons\"\n               xmlns:material=\"clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material\">\n\n      <Grid RowDefinitions=\"1*,3*,1*\">\n          <Grid.Background>\n              <LinearGradientBrush StartPoint=\"0,0\" EndPoint=\"0.5,0.5\">\n                  <GradientStop Offset=\"0.1\" Color=\"#D8D9FA\" />\n                  <GradientStop Offset=\"1.0\" Color=\"White\" />\n              </LinearGradientBrush>\n          </Grid.Background>\n\n          <!--  MAUI原生不支持渐变色文本，要么使用SkiaSharp手动绘制，要么使用矢量图片代替  -->\n          <!--<Label FontSize=\"40\"\n                 HorizontalOptions=\"Center\"\n                 Text=\"QQ9\"\n                 TextColor=\"AntiqueWhite\"\n                 VerticalOptions=\"Center\" />-->\n          <Image Grid.Row=\"0\"\n                 HeightRequest=\"36\"\n                 Source=\"QQ.png\" />\n\n\n          <VerticalStackLayout Grid.Row=\"1\"\n                               Margin=\"32,0\"\n                               Spacing=\"30\"\n                               VerticalOptions=\"Center\">\n              <material:TextField Title=\"输入QQ号\"\n                                  AllowClear=\"True\"\n                                  HorizontalTextAlignment=\"Center\" />\n\n              <material:TextField Title=\"输入QQ密码\"\n                                  HorizontalTextAlignment=\"Center\"\n                                  IsPassword=\"True\" />\n\n\n              <material:ButtonView HeightRequest=\"52\">\n                  <Label HorizontalOptions=\"Center\"\n                         Text=\"登录\"\n                         TextColor=\"White\"\n                         VerticalOptions=\"Center\" />\n              </material:ButtonView>\n\n              <material:CheckBox HorizontalOptions=\"Center\" Text=\"我已阅读并同意服务协议和QQ隐私保护指引\" />\n\n          </VerticalStackLayout>\n\n          <VerticalStackLayout Grid.Row=\"2\"\n                               HorizontalOptions=\"Center\"\n                               VerticalOptions=\"Center\">\n\n              <material:ButtonView BackgroundColor=\"White\"\n                                   HeightRequest=\"40\"\n                                   Stroke=\"Gray\"\n                                   StrokeThickness=\"1\"\n                                   WidthRequest=\"40\">\n                  <Image>\n                      <Image.Source>\n                          <FontImageSource FontFamily=\"MaterialRegular\"\n                                           Glyph=\"{x:Static m:MaterialRegular.Phone}\"\n                                           Color=\"Gray\" />\n                      </Image.Source>\n                  </Image>\n              </material:ButtonView>\n              <Label Margin=\"0,10,0,0\" Text=\"手机号登录\" />\n          </VerticalStackLayout>\n\n\n\n\n\n      </Grid>\n  </ContentView>\n\n\n  ```\n\n  自此，一个低仿的QQ登录就完成了，其中使用了UraniumUI的文本输入框、按钮以及图标文字。\n\n### 总结\n\n引入第三方的UI控件相对来说是比较简单的，现在的第三方控件都有相对完整的文档，对着官网文档即可实现大多数功能，有问题可以直接在github上题issues。\n\nUraniumUI的使用就是：\n\n1. 导入正确的库\n2. 在程序启动之前配置\n3. 导入正确的资源和命名空间\n4. 正常使用\n","source":"_posts/从零开始搭建Maui框架06-使用第三方UI.md","raw":"---\ntitle: 从零开始搭建Maui框架06-使用第三方UI\ndate: 2024-11-19 14:22:32\ncategories:\n\t- MAUI教程\ntags:\n\t- C#\n\t- .NET\n\t- MAUI\n\t- Prism\n---\n.NET MAUI (Multi-platform App UI) 虽然提供了丰富的原生控件，但有时为了实现更复杂、更个性化的用户界面，或者加速开发过程，引入第三方 UI 控件库是一个不错的选择。\n\n### 常用的收费 MAUI 第三方 UI 控件库\n\n* **Syncfusion Essential Studio for MAUI:**\n\n  * 提供了丰富的控件，包括数据网格、图表、日历、仪表盘等。\n  * 支持多种平台，并提供了示例和文档。\n  * 社区版免费\n  * [Syncfusion官网](https://www.syncfusion.com/maui-controls)\n* **Telerik UI for MAUI:**\n\n  * 提供了类似的功能，并强调性能和易用性。\n  * [Telerik官网](https://www.telerik.com/maui-ui)\n* DevExpress：\n\n  * 提供了丰富的组件，更偏向重型应用。.\n  * MAUI Control 免费\n  * [DevExPress官网](https://www.devexpress.com/maui/)\n\n### 开源的MAUI第三方UI控件库\n\n* [UraniumUI](https://github.com/enisn/UraniumUI)\n\n  * github开源\n  * 一直在更新\n* [MDC-MAUI](https://github.com/mdc-maui/mdc-maui)\n\n  * Material风格的控件\n  * github开源\n  * 已经停止维护\n* [Xceed-Toolkit-for-.NET-MAUI](https://github.com/xceedsoftware/Xceed-Toolkit-for-.NET-MAUI)\n\n  * 老牌控件库提供商\n  * MAUI模块开源免费\n  * github开源\n\n### 引入UraniumUI库\n\n虽然第三方库很多，但是这里我们使用更新比较频繁的UraniumUI。\n\n[官网文档](https://enisn-projects.io/docs/en/uranium/latest/Getting-Started)\n\n* 引入Nuget包，现在项目只需要引入`UraniumUI.Material、UraniumUI.Icons.MaterialIcons` 即可\n* 在`MauiProgram`的`CreateMauiApp`方法中添加使用UI库的代码 `builder.UseUraniumUI().UseUraniumUIMaterial();`\n* 在`MauiProgram`的`CreateMauiApp`方法中添加`MaterialIconFonts`的使用在Fonts的配置中。`fonts.AddMaterialIconFonts();`\n* 在`App.xaml`中引入命名空间 ` xmlns:material=\"http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material\"`\n* 给自带的Colors和Styles资源命名，并重写资源库\n\n  ```\n   <ResourceDictionary x:Name=\"AppColors\" Source=\"Resources/Styles/Colors.xaml\" />\n   <ResourceDictionary x:Name=\"AppStyles\" Source=\"Resources/Styles/Styles.xaml\" />\n  <material:StyleResource BasedOn=\"{x:Reference AppStyles}\" ColorsOverride=\"{x:Reference AppColors}\" />\n\n  ```\n\n### 使用UI库 模仿QQ登录界面\n\nQQ9的手机版登录界面如下图所示\n\n* 新建一个名为LoginPage的`ContentView`\n* 新建一个名为LoginPageViewModel的类，继承自`BindableBase`\n* 在LoginPage的隐藏代码`LoginPage.xaml.cs`中，添加Ioc注入\n\n  ```\n  using Core.Attributes;\n  using UI.ViewModels;\n\n  namespace UI.Views;\n\n  [IocForRegionNavigation(typeof(LoginPageViewModel))]\n  public partial class LoginPage : ContentView\n  {\n      public LoginPage()\n      {\n          InitializeComponent();\n      }\n  }\n  ```\n* 在LoginPage中引入命名空间` xmlns:material=\"clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material\"`\n\n  > 注意，这里千万不要引错了，这里的命名空间是带Controls的。`http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material`是错误的命名空间，VS编译通不过。\n  >\n* 修改LoginPage的代码\n\n  ```\n  <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n  <ContentView x:Class=\"UI.Views.LoginPage\"\n               xmlns=\"http://schemas.microsoft.com/dotnet/2021/maui\"\n               xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n               xmlns:m=\"clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons\"\n               xmlns:material=\"clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material\">\n\n      <Grid RowDefinitions=\"1*,3*,1*\">\n          <Grid.Background>\n              <LinearGradientBrush StartPoint=\"0,0\" EndPoint=\"0.5,0.5\">\n                  <GradientStop Offset=\"0.1\" Color=\"#D8D9FA\" />\n                  <GradientStop Offset=\"1.0\" Color=\"White\" />\n              </LinearGradientBrush>\n          </Grid.Background>\n\n          <!--  MAUI原生不支持渐变色文本，要么使用SkiaSharp手动绘制，要么使用矢量图片代替  -->\n          <!--<Label FontSize=\"40\"\n                 HorizontalOptions=\"Center\"\n                 Text=\"QQ9\"\n                 TextColor=\"AntiqueWhite\"\n                 VerticalOptions=\"Center\" />-->\n          <Image Grid.Row=\"0\"\n                 HeightRequest=\"36\"\n                 Source=\"QQ.png\" />\n\n\n          <VerticalStackLayout Grid.Row=\"1\"\n                               Margin=\"32,0\"\n                               Spacing=\"30\"\n                               VerticalOptions=\"Center\">\n              <material:TextField Title=\"输入QQ号\"\n                                  AllowClear=\"True\"\n                                  HorizontalTextAlignment=\"Center\" />\n\n              <material:TextField Title=\"输入QQ密码\"\n                                  HorizontalTextAlignment=\"Center\"\n                                  IsPassword=\"True\" />\n\n\n              <material:ButtonView HeightRequest=\"52\">\n                  <Label HorizontalOptions=\"Center\"\n                         Text=\"登录\"\n                         TextColor=\"White\"\n                         VerticalOptions=\"Center\" />\n              </material:ButtonView>\n\n              <material:CheckBox HorizontalOptions=\"Center\" Text=\"我已阅读并同意服务协议和QQ隐私保护指引\" />\n\n          </VerticalStackLayout>\n\n          <VerticalStackLayout Grid.Row=\"2\"\n                               HorizontalOptions=\"Center\"\n                               VerticalOptions=\"Center\">\n\n              <material:ButtonView BackgroundColor=\"White\"\n                                   HeightRequest=\"40\"\n                                   Stroke=\"Gray\"\n                                   StrokeThickness=\"1\"\n                                   WidthRequest=\"40\">\n                  <Image>\n                      <Image.Source>\n                          <FontImageSource FontFamily=\"MaterialRegular\"\n                                           Glyph=\"{x:Static m:MaterialRegular.Phone}\"\n                                           Color=\"Gray\" />\n                      </Image.Source>\n                  </Image>\n              </material:ButtonView>\n              <Label Margin=\"0,10,0,0\" Text=\"手机号登录\" />\n          </VerticalStackLayout>\n\n\n\n\n\n      </Grid>\n  </ContentView>\n\n\n  ```\n\n  自此，一个低仿的QQ登录就完成了，其中使用了UraniumUI的文本输入框、按钮以及图标文字。\n\n### 总结\n\n引入第三方的UI控件相对来说是比较简单的，现在的第三方控件都有相对完整的文档，对着官网文档即可实现大多数功能，有问题可以直接在github上题issues。\n\nUraniumUI的使用就是：\n\n1. 导入正确的库\n2. 在程序启动之前配置\n3. 导入正确的资源和命名空间\n4. 正常使用\n","slug":"从零开始搭建Maui框架06-使用第三方UI","published":1,"updated":"2024-11-19T08:37:07.517Z","_id":"cm3o2hc3j00006sv47ngx1xgh","comments":1,"layout":"post","photos":[],"content":"<p>.NET MAUI (Multi-platform App UI) 虽然提供了丰富的原生控件，但有时为了实现更复杂、更个性化的用户界面，或者加速开发过程，引入第三方 UI 控件库是一个不错的选择。</p>\n<h3 id=\"常用的收费-MAUI-第三方-UI-控件库\"><a href=\"#常用的收费-MAUI-第三方-UI-控件库\" class=\"headerlink\" title=\"常用的收费 MAUI 第三方 UI 控件库\"></a>常用的收费 MAUI 第三方 UI 控件库</h3><ul>\n<li><p><strong>Syncfusion Essential Studio for MAUI:</strong></p>\n<ul>\n<li>提供了丰富的控件，包括数据网格、图表、日历、仪表盘等。</li>\n<li>支持多种平台，并提供了示例和文档。</li>\n<li>社区版免费</li>\n<li><a href=\"https://www.syncfusion.com/maui-controls\">Syncfusion官网</a></li>\n</ul>\n</li>\n<li><p><strong>Telerik UI for MAUI:</strong></p>\n<ul>\n<li>提供了类似的功能，并强调性能和易用性。</li>\n<li><a href=\"https://www.telerik.com/maui-ui\">Telerik官网</a></li>\n</ul>\n</li>\n<li><p>DevExpress：</p>\n<ul>\n<li>提供了丰富的组件，更偏向重型应用。.</li>\n<li>MAUI Control 免费</li>\n<li><a href=\"https://www.devexpress.com/maui/\">DevExPress官网</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"开源的MAUI第三方UI控件库\"><a href=\"#开源的MAUI第三方UI控件库\" class=\"headerlink\" title=\"开源的MAUI第三方UI控件库\"></a>开源的MAUI第三方UI控件库</h3><ul>\n<li><p><a href=\"https://github.com/enisn/UraniumUI\">UraniumUI</a></p>\n<ul>\n<li>github开源</li>\n<li>一直在更新</li>\n</ul>\n</li>\n<li><p><a href=\"https://github.com/mdc-maui/mdc-maui\">MDC-MAUI</a></p>\n<ul>\n<li>Material风格的控件</li>\n<li>github开源</li>\n<li>已经停止维护</li>\n</ul>\n</li>\n<li><p><a href=\"https://github.com/xceedsoftware/Xceed-Toolkit-for-.NET-MAUI\">Xceed-Toolkit-for-.NET-MAUI</a></p>\n<ul>\n<li>老牌控件库提供商</li>\n<li>MAUI模块开源免费</li>\n<li>github开源</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"引入UraniumUI库\"><a href=\"#引入UraniumUI库\" class=\"headerlink\" title=\"引入UraniumUI库\"></a>引入UraniumUI库</h3><p>虽然第三方库很多，但是这里我们使用更新比较频繁的UraniumUI。</p>\n<p><a href=\"https://enisn-projects.io/docs/en/uranium/latest/Getting-Started\">官网文档</a></p>\n<ul>\n<li><p>引入Nuget包，现在项目只需要引入<code>UraniumUI.Material、UraniumUI.Icons.MaterialIcons</code> 即可</p>\n</li>\n<li><p>在<code>MauiProgram</code>的<code>CreateMauiApp</code>方法中添加使用UI库的代码 <code>builder.UseUraniumUI().UseUraniumUIMaterial();</code></p>\n</li>\n<li><p>在<code>MauiProgram</code>的<code>CreateMauiApp</code>方法中添加<code>MaterialIconFonts</code>的使用在Fonts的配置中。<code>fonts.AddMaterialIconFonts();</code></p>\n</li>\n<li><p>在<code>App.xaml</code>中引入命名空间 <code> xmlns:material=&quot;http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material&quot;</code></p>\n</li>\n<li><p>给自带的Colors和Styles资源命名，并重写资源库</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"> &lt;ResourceDictionary x:<span class=\"hljs-attribute\">Name</span>=<span class=\"hljs-string\">&quot;AppColors&quot;</span> <span class=\"hljs-attribute\">Source</span>=<span class=\"hljs-string\">&quot;Resources/Styles/Colors.xaml&quot;</span> /&gt;<br> &lt;ResourceDictionary x:<span class=\"hljs-attribute\">Name</span>=<span class=\"hljs-string\">&quot;AppStyles&quot;</span> <span class=\"hljs-attribute\">Source</span>=<span class=\"hljs-string\">&quot;Resources/Styles/Styles.xaml&quot;</span> /&gt;<br>&lt;material:StyleResource <span class=\"hljs-attribute\">BasedOn</span>=<span class=\"hljs-string\">&quot;&#123;x:Reference AppStyles&#125;&quot;</span> <span class=\"hljs-attribute\">ColorsOverride</span>=<span class=\"hljs-string\">&quot;&#123;x:Reference AppColors&#125;&quot;</span> /&gt;<br><br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"使用UI库-模仿QQ登录界面\"><a href=\"#使用UI库-模仿QQ登录界面\" class=\"headerlink\" title=\"使用UI库 模仿QQ登录界面\"></a>使用UI库 模仿QQ登录界面</h3><p>QQ9的手机版登录界面如下图所示</p>\n<ul>\n<li><p>新建一个名为LoginPage的<code>ContentView</code></p>\n</li>\n<li><p>新建一个名为LoginPageViewModel的类，继承自<code>BindableBase</code></p>\n</li>\n<li><p>在LoginPage的隐藏代码<code>LoginPage.xaml.cs</code>中，添加Ioc注入</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core.Attributes;<br><span class=\"hljs-keyword\">using</span> UI.ViewModels;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.Views</span>;<br><br>[<span class=\"hljs-meta\">IocForRegionNavigation(typeof(LoginPageViewModel))</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">partial</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">LoginPage</span> : <span class=\"hljs-title\">ContentView</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">LoginPage</span>()</span><br>    &#123;<br>        InitializeComponent();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p>在LoginPage中引入命名空间<code> xmlns:material=&quot;clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material&quot;</code></p>\n<blockquote>\n<p>注意，这里千万不要引错了，这里的命名空间是带Controls的。<code>http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material</code>是错误的命名空间，VS编译通不过。</p>\n</blockquote>\n</li>\n<li><p>修改LoginPage的代码</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;UI.Views.LoginPage&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:m</span>=<span class=\"hljs-string\">&quot;clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:material</span>=<span class=\"hljs-string\">&quot;clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material&quot;</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Grid</span> <span class=\"hljs-attr\">RowDefinitions</span>=<span class=\"hljs-string\">&quot;1*,3*,1*&quot;</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Grid.Background</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LinearGradientBrush</span> <span class=\"hljs-attr\">StartPoint</span>=<span class=\"hljs-string\">&quot;0,0&quot;</span> <span class=\"hljs-attr\">EndPoint</span>=<span class=\"hljs-string\">&quot;0.5,0.5&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">GradientStop</span> <span class=\"hljs-attr\">Offset</span>=<span class=\"hljs-string\">&quot;0.1&quot;</span> <span class=\"hljs-attr\">Color</span>=<span class=\"hljs-string\">&quot;#D8D9FA&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">GradientStop</span> <span class=\"hljs-attr\">Offset</span>=<span class=\"hljs-string\">&quot;1.0&quot;</span> <span class=\"hljs-attr\">Color</span>=<span class=\"hljs-string\">&quot;White&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LinearGradientBrush</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Grid.Background</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-comment\">&lt;!--  MAUI原生不支持渐变色文本，要么使用SkiaSharp手动绘制，要么使用矢量图片代替  --&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-comment\">&lt;!--&lt;Label FontSize=&quot;40&quot;</span></span><br><span class=\"hljs-comment\"><span class=\"language-xml\">               HorizontalOptions=&quot;Center&quot;</span></span><br><span class=\"hljs-comment\"><span class=\"language-xml\">               Text=&quot;QQ9&quot;</span></span><br><span class=\"hljs-comment\"><span class=\"language-xml\">               TextColor=&quot;AntiqueWhite&quot;</span></span><br><span class=\"hljs-comment\"><span class=\"language-xml\">               VerticalOptions=&quot;Center&quot; /&gt;--&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Image</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">HeightRequest</span>=<span class=\"hljs-string\">&quot;36&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">Source</span>=<span class=\"hljs-string\">&quot;QQ.png&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;1&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">Margin</span>=<span class=\"hljs-string\">&quot;32,0&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">Spacing</span>=<span class=\"hljs-string\">&quot;30&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:TextField</span> <span class=\"hljs-attr\">Title</span>=<span class=\"hljs-string\">&quot;输入QQ号&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                <span class=\"hljs-attr\">AllowClear</span>=<span class=\"hljs-string\">&quot;True&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                <span class=\"hljs-attr\">HorizontalTextAlignment</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:TextField</span> <span class=\"hljs-attr\">Title</span>=<span class=\"hljs-string\">&quot;输入QQ密码&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                <span class=\"hljs-attr\">HorizontalTextAlignment</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                <span class=\"hljs-attr\">IsPassword</span>=<span class=\"hljs-string\">&quot;True&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:ButtonView</span> <span class=\"hljs-attr\">HeightRequest</span>=<span class=\"hljs-string\">&quot;52&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                       <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;登录&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                       <span class=\"hljs-attr\">TextColor</span>=<span class=\"hljs-string\">&quot;White&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                       <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">material:ButtonView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:CheckBox</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;我已阅读并同意服务协议和QQ隐私保护指引&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;2&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:ButtonView</span> <span class=\"hljs-attr\">BackgroundColor</span>=<span class=\"hljs-string\">&quot;White&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                 <span class=\"hljs-attr\">HeightRequest</span>=<span class=\"hljs-string\">&quot;40&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                 <span class=\"hljs-attr\">Stroke</span>=<span class=\"hljs-string\">&quot;Gray&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                 <span class=\"hljs-attr\">StrokeThickness</span>=<span class=\"hljs-string\">&quot;1&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                 <span class=\"hljs-attr\">WidthRequest</span>=<span class=\"hljs-string\">&quot;40&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Image</span>&gt;</span></span><br><span class=\"language-xml\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Image.Source</span>&gt;</span></span><br><span class=\"language-xml\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FontImageSource</span> <span class=\"hljs-attr\">FontFamily</span>=<span class=\"hljs-string\">&quot;MaterialRegular&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                         <span class=\"hljs-attr\">Glyph</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;x:Static m:MaterialRegular.Phone&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                         <span class=\"hljs-attr\">Color</span>=<span class=\"hljs-string\">&quot;Gray&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Image.Source</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Image</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">material:ButtonView</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Margin</span>=<span class=\"hljs-string\">&quot;0,10,0,0&quot;</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;手机号登录&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Grid</span>&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p>自此，一个低仿的QQ登录就完成了，其中使用了UraniumUI的文本输入框、按钮以及图标文字。</p>\n</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>引入第三方的UI控件相对来说是比较简单的，现在的第三方控件都有相对完整的文档，对着官网文档即可实现大多数功能，有问题可以直接在github上题issues。</p>\n<p>UraniumUI的使用就是：</p>\n<ol>\n<li>导入正确的库</li>\n<li>在程序启动之前配置</li>\n<li>导入正确的资源和命名空间</li>\n<li>正常使用</li>\n</ol>\n","excerpt":"","more":"<p>.NET MAUI (Multi-platform App UI) 虽然提供了丰富的原生控件，但有时为了实现更复杂、更个性化的用户界面，或者加速开发过程，引入第三方 UI 控件库是一个不错的选择。</p>\n<h3 id=\"常用的收费-MAUI-第三方-UI-控件库\"><a href=\"#常用的收费-MAUI-第三方-UI-控件库\" class=\"headerlink\" title=\"常用的收费 MAUI 第三方 UI 控件库\"></a>常用的收费 MAUI 第三方 UI 控件库</h3><ul>\n<li><p><strong>Syncfusion Essential Studio for MAUI:</strong></p>\n<ul>\n<li>提供了丰富的控件，包括数据网格、图表、日历、仪表盘等。</li>\n<li>支持多种平台，并提供了示例和文档。</li>\n<li>社区版免费</li>\n<li><a href=\"https://www.syncfusion.com/maui-controls\">Syncfusion官网</a></li>\n</ul>\n</li>\n<li><p><strong>Telerik UI for MAUI:</strong></p>\n<ul>\n<li>提供了类似的功能，并强调性能和易用性。</li>\n<li><a href=\"https://www.telerik.com/maui-ui\">Telerik官网</a></li>\n</ul>\n</li>\n<li><p>DevExpress：</p>\n<ul>\n<li>提供了丰富的组件，更偏向重型应用。.</li>\n<li>MAUI Control 免费</li>\n<li><a href=\"https://www.devexpress.com/maui/\">DevExPress官网</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"开源的MAUI第三方UI控件库\"><a href=\"#开源的MAUI第三方UI控件库\" class=\"headerlink\" title=\"开源的MAUI第三方UI控件库\"></a>开源的MAUI第三方UI控件库</h3><ul>\n<li><p><a href=\"https://github.com/enisn/UraniumUI\">UraniumUI</a></p>\n<ul>\n<li>github开源</li>\n<li>一直在更新</li>\n</ul>\n</li>\n<li><p><a href=\"https://github.com/mdc-maui/mdc-maui\">MDC-MAUI</a></p>\n<ul>\n<li>Material风格的控件</li>\n<li>github开源</li>\n<li>已经停止维护</li>\n</ul>\n</li>\n<li><p><a href=\"https://github.com/xceedsoftware/Xceed-Toolkit-for-.NET-MAUI\">Xceed-Toolkit-for-.NET-MAUI</a></p>\n<ul>\n<li>老牌控件库提供商</li>\n<li>MAUI模块开源免费</li>\n<li>github开源</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"引入UraniumUI库\"><a href=\"#引入UraniumUI库\" class=\"headerlink\" title=\"引入UraniumUI库\"></a>引入UraniumUI库</h3><p>虽然第三方库很多，但是这里我们使用更新比较频繁的UraniumUI。</p>\n<p><a href=\"https://enisn-projects.io/docs/en/uranium/latest/Getting-Started\">官网文档</a></p>\n<ul>\n<li><p>引入Nuget包，现在项目只需要引入<code>UraniumUI.Material、UraniumUI.Icons.MaterialIcons</code> 即可</p>\n</li>\n<li><p>在<code>MauiProgram</code>的<code>CreateMauiApp</code>方法中添加使用UI库的代码 <code>builder.UseUraniumUI().UseUraniumUIMaterial();</code></p>\n</li>\n<li><p>在<code>MauiProgram</code>的<code>CreateMauiApp</code>方法中添加<code>MaterialIconFonts</code>的使用在Fonts的配置中。<code>fonts.AddMaterialIconFonts();</code></p>\n</li>\n<li><p>在<code>App.xaml</code>中引入命名空间 <code> xmlns:material=&quot;http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material&quot;</code></p>\n</li>\n<li><p>给自带的Colors和Styles资源命名，并重写资源库</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"> &lt;ResourceDictionary x:<span class=\"hljs-attribute\">Name</span>=<span class=\"hljs-string\">&quot;AppColors&quot;</span> <span class=\"hljs-attribute\">Source</span>=<span class=\"hljs-string\">&quot;Resources/Styles/Colors.xaml&quot;</span> /&gt;<br> &lt;ResourceDictionary x:<span class=\"hljs-attribute\">Name</span>=<span class=\"hljs-string\">&quot;AppStyles&quot;</span> <span class=\"hljs-attribute\">Source</span>=<span class=\"hljs-string\">&quot;Resources/Styles/Styles.xaml&quot;</span> /&gt;<br>&lt;material:StyleResource <span class=\"hljs-attribute\">BasedOn</span>=<span class=\"hljs-string\">&quot;&#123;x:Reference AppStyles&#125;&quot;</span> <span class=\"hljs-attribute\">ColorsOverride</span>=<span class=\"hljs-string\">&quot;&#123;x:Reference AppColors&#125;&quot;</span> /&gt;<br><br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"使用UI库-模仿QQ登录界面\"><a href=\"#使用UI库-模仿QQ登录界面\" class=\"headerlink\" title=\"使用UI库 模仿QQ登录界面\"></a>使用UI库 模仿QQ登录界面</h3><p>QQ9的手机版登录界面如下图所示</p>\n<ul>\n<li><p>新建一个名为LoginPage的<code>ContentView</code></p>\n</li>\n<li><p>新建一个名为LoginPageViewModel的类，继承自<code>BindableBase</code></p>\n</li>\n<li><p>在LoginPage的隐藏代码<code>LoginPage.xaml.cs</code>中，添加Ioc注入</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> Core.Attributes;<br><span class=\"hljs-keyword\">using</span> UI.ViewModels;<br><br><span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">UI.Views</span>;<br><br>[<span class=\"hljs-meta\">IocForRegionNavigation(typeof(LoginPageViewModel))</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">partial</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">LoginPage</span> : <span class=\"hljs-title\">ContentView</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">LoginPage</span>()</span><br>    &#123;<br>        InitializeComponent();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li>\n<li><p>在LoginPage中引入命名空间<code> xmlns:material=&quot;clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material&quot;</code></p>\n<blockquote>\n<p>注意，这里千万不要引错了，这里的命名空间是带Controls的。<code>http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material</code>是错误的命名空间，VS编译通不过。</p>\n</blockquote>\n</li>\n<li><p>修改LoginPage的代码</p>\n<figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dust\"><span class=\"language-xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ContentView</span> <span class=\"hljs-attr\">x:Class</span>=<span class=\"hljs-string\">&quot;UI.Views.LoginPage&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/dotnet/2021/maui&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:x</span>=<span class=\"hljs-string\">&quot;http://schemas.microsoft.com/winfx/2009/xaml&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:m</span>=<span class=\"hljs-string\">&quot;clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">             <span class=\"hljs-attr\">xmlns:material</span>=<span class=\"hljs-string\">&quot;clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material&quot;</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Grid</span> <span class=\"hljs-attr\">RowDefinitions</span>=<span class=\"hljs-string\">&quot;1*,3*,1*&quot;</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Grid.Background</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LinearGradientBrush</span> <span class=\"hljs-attr\">StartPoint</span>=<span class=\"hljs-string\">&quot;0,0&quot;</span> <span class=\"hljs-attr\">EndPoint</span>=<span class=\"hljs-string\">&quot;0.5,0.5&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">GradientStop</span> <span class=\"hljs-attr\">Offset</span>=<span class=\"hljs-string\">&quot;0.1&quot;</span> <span class=\"hljs-attr\">Color</span>=<span class=\"hljs-string\">&quot;#D8D9FA&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">GradientStop</span> <span class=\"hljs-attr\">Offset</span>=<span class=\"hljs-string\">&quot;1.0&quot;</span> <span class=\"hljs-attr\">Color</span>=<span class=\"hljs-string\">&quot;White&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LinearGradientBrush</span>&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Grid.Background</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-comment\">&lt;!--  MAUI原生不支持渐变色文本，要么使用SkiaSharp手动绘制，要么使用矢量图片代替  --&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-comment\">&lt;!--&lt;Label FontSize=&quot;40&quot;</span></span><br><span class=\"hljs-comment\"><span class=\"language-xml\">               HorizontalOptions=&quot;Center&quot;</span></span><br><span class=\"hljs-comment\"><span class=\"language-xml\">               Text=&quot;QQ9&quot;</span></span><br><span class=\"hljs-comment\"><span class=\"language-xml\">               TextColor=&quot;AntiqueWhite&quot;</span></span><br><span class=\"hljs-comment\"><span class=\"language-xml\">               VerticalOptions=&quot;Center&quot; /&gt;--&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Image</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;0&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">HeightRequest</span>=<span class=\"hljs-string\">&quot;36&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">               <span class=\"hljs-attr\">Source</span>=<span class=\"hljs-string\">&quot;QQ.png&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;1&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">Margin</span>=<span class=\"hljs-string\">&quot;32,0&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">Spacing</span>=<span class=\"hljs-string\">&quot;30&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:TextField</span> <span class=\"hljs-attr\">Title</span>=<span class=\"hljs-string\">&quot;输入QQ号&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                <span class=\"hljs-attr\">AllowClear</span>=<span class=\"hljs-string\">&quot;True&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                <span class=\"hljs-attr\">HorizontalTextAlignment</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:TextField</span> <span class=\"hljs-attr\">Title</span>=<span class=\"hljs-string\">&quot;输入QQ密码&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                <span class=\"hljs-attr\">HorizontalTextAlignment</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                <span class=\"hljs-attr\">IsPassword</span>=<span class=\"hljs-string\">&quot;True&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:ButtonView</span> <span class=\"hljs-attr\">HeightRequest</span>=<span class=\"hljs-string\">&quot;52&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                       <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;登录&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                       <span class=\"hljs-attr\">TextColor</span>=<span class=\"hljs-string\">&quot;White&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                       <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">material:ButtonView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:CheckBox</span> <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;我已阅读并同意服务协议和QQ隐私保护指引&quot;</span> /&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalStackLayout</span> <span class=\"hljs-attr\">Grid.Row</span>=<span class=\"hljs-string\">&quot;2&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">HorizontalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                             <span class=\"hljs-attr\">VerticalOptions</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">material:ButtonView</span> <span class=\"hljs-attr\">BackgroundColor</span>=<span class=\"hljs-string\">&quot;White&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                 <span class=\"hljs-attr\">HeightRequest</span>=<span class=\"hljs-string\">&quot;40&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                 <span class=\"hljs-attr\">Stroke</span>=<span class=\"hljs-string\">&quot;Gray&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                 <span class=\"hljs-attr\">StrokeThickness</span>=<span class=\"hljs-string\">&quot;1&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                 <span class=\"hljs-attr\">WidthRequest</span>=<span class=\"hljs-string\">&quot;40&quot;</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Image</span>&gt;</span></span><br><span class=\"language-xml\">                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Image.Source</span>&gt;</span></span><br><span class=\"language-xml\">                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FontImageSource</span> <span class=\"hljs-attr\">FontFamily</span>=<span class=\"hljs-string\">&quot;MaterialRegular&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                         <span class=\"hljs-attr\">Glyph</span>=<span class=\"hljs-string\">&quot;</span></span></span><span class=\"hljs-template-variable\">&#123;x:Static m:MaterialRegular.Phone&#125;</span><span class=\"language-xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">&quot;</span></span></span><br><span class=\"hljs-tag\"><span class=\"language-xml\">                                         <span class=\"hljs-attr\">Color</span>=<span class=\"hljs-string\">&quot;Gray&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Image.Source</span>&gt;</span></span><br><span class=\"language-xml\">                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Image</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">material:ButtonView</span>&gt;</span></span><br><span class=\"language-xml\">            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Label</span> <span class=\"hljs-attr\">Margin</span>=<span class=\"hljs-string\">&quot;0,10,0,0&quot;</span> <span class=\"hljs-attr\">Text</span>=<span class=\"hljs-string\">&quot;手机号登录&quot;</span> /&gt;</span></span><br><span class=\"language-xml\">        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">VerticalStackLayout</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\">    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Grid</span>&gt;</span></span><br><span class=\"language-xml\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ContentView</span>&gt;</span></span><br><span class=\"language-xml\"></span><br><span class=\"language-xml\"></span><br></code></pre></td></tr></table></figure>\n\n<p>自此，一个低仿的QQ登录就完成了，其中使用了UraniumUI的文本输入框、按钮以及图标文字。</p>\n</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>引入第三方的UI控件相对来说是比较简单的，现在的第三方控件都有相对完整的文档，对着官网文档即可实现大多数功能，有问题可以直接在github上题issues。</p>\n<p>UraniumUI的使用就是：</p>\n<ol>\n<li>导入正确的库</li>\n<li>在程序启动之前配置</li>\n<li>导入正确的资源和命名空间</li>\n<li>正常使用</li>\n</ol>\n"},{"title":"从零开始搭建Maui框架05-添加自定义Dialog弹窗","date":"2024-11-19T06:20:32.000Z","_content":"## MAUI 自带的弹窗类型及用法\n\n.NET MAUI (多平台应用 UI) 提供了多种内置的弹窗类型，方便开发者在应用程序中与用户进行交互。这些弹窗在不同的平台上会呈现为原生控件，保证了跨平台应用的一致性。\n\n### 常用的三种弹窗类型\n\n* **DisplayAlert:** 用于显示简单的警报框，通常包含一个标题、一个消息和一个“确定”按钮。\n* **DisplayActionSheet:** 提供多个选项供用户选择，类似于 iOS 上的 Action Sheet 或 Android 上的 Bottom Sheet。\n* **DisplayPromptAsync:** 用于获取用户输入，可以设置输入类型（文本、密码等）。\n\nMaui提供的弹窗只有简单的功能，而且UI无法定制。\n\nPrism框架自带了`IDialogService` ,可以满足自定义弹窗的需求。\n\n## 创建Dialog视图\n\nPrism的Dialog弹窗视图没有特殊要求，使用`ContentView`即可，根据需求自定义视图UI。\n\n## 创建Dialog视图模型\n\nDialog的视图模型需要继承`BindableBase` 基类、并实现`IDialogAware`接口。`IDialogAware`接口中要实现的方法如下\n\n```\n /// <summary>\n /// Evaluates whether the Dialog is in a state that would allow the Dialog to Close\n /// </summary>\n /// <returns><c>true</c> if the Dialog can close</returns>\n bool CanCloseDialog();\n\n /// <summary>\n /// Provides a callback to clean up resources or finalize tasks when the Dialog has been closed\n /// </summary>\n void OnDialogClosed();\n\n /// <summary>\n /// Initializes the state of the Dialog with provided DialogParameters\n /// </summary>\n /// <param name=\"parameters\"></param>\n void OnDialogOpened(IDialogParameters parameters);\n\n /// <summary>\n /// The <see cref=\"DialogCloseListener\"/> will be set by the <see cref=\"IDialogService\"/> and can be called to\n /// invoke the close of the Dialog.\n /// </summary>\n DialogCloseListener RequestClose { get; }\n```\n\n* `CanCloseDialog` : 指示当前Dialog是否可以关闭\n* `OnDialogClosed` : 当Dialog关闭时触发\n* `OnDialogOpened` : 当Dialog打开时触发，`parameters`是弹窗时外部传进来的参数\n* `RequestClose`: `RequestClose` 的本质是一个Action，执行此方法时关闭当前的Dialog\n\n## 注册Dialog\n\n在调用弹窗之前，需要先将视图(`View`)和视图模型(`ViewModel`)注入到容器中，注册代码如下\n\n```\n containerRegistry.RegisterDialog<xxxDialog, xxxDialogViewModel>();\n```\n\n## 弹出Dialog\n\n在需要调用弹窗的地方，使用依赖注入的方法注入`IDialogService`服务，然后调用ShowDialog。\n\n```\n  dialogService.ShowDialog(\n      name: nameof(xxxDialog),\n      parameters: new DialogParameters\n      {\n          { \"key\", \"value\" }\n      }, callback: result => { Debug.WriteLine(result); });\n```\n\nShowDialog的参数\n\n* name：视图名称\n* parameters：传送给Dialog的参数，在Dialog的OnDialogOpened中可以拿到\n* callback：关闭Dialog时，Dialog回传的参数，其中包含`Exception` `ButtonResult` `Parameters`\n  * Exception： Dialog中发生的异常\n  * ButtonResult：Dialog是通过什么方式关闭的\n  * Parameters：Dialog回传的参数，以键值对的形式\n\n## 最后\n\n[Prism官网](https://docs.prismlibrary.com/docs/)\n\n[源码](https://github.com/user121238/MauiPrism9Demo)\n","source":"_posts/从零开始搭建Maui框架05-添加自定义Dialog弹窗.md","raw":"---\ntitle: 从零开始搭建Maui框架05-添加自定义Dialog弹窗\ndate: 2024-11-19 14:20:32\ncategories:\n\t- MAUI教程\ntags:\n\t- C#\n\t- .NET\n\t- MAUI\n\t- Prism\n---\n## MAUI 自带的弹窗类型及用法\n\n.NET MAUI (多平台应用 UI) 提供了多种内置的弹窗类型，方便开发者在应用程序中与用户进行交互。这些弹窗在不同的平台上会呈现为原生控件，保证了跨平台应用的一致性。\n\n### 常用的三种弹窗类型\n\n* **DisplayAlert:** 用于显示简单的警报框，通常包含一个标题、一个消息和一个“确定”按钮。\n* **DisplayActionSheet:** 提供多个选项供用户选择，类似于 iOS 上的 Action Sheet 或 Android 上的 Bottom Sheet。\n* **DisplayPromptAsync:** 用于获取用户输入，可以设置输入类型（文本、密码等）。\n\nMaui提供的弹窗只有简单的功能，而且UI无法定制。\n\nPrism框架自带了`IDialogService` ,可以满足自定义弹窗的需求。\n\n## 创建Dialog视图\n\nPrism的Dialog弹窗视图没有特殊要求，使用`ContentView`即可，根据需求自定义视图UI。\n\n## 创建Dialog视图模型\n\nDialog的视图模型需要继承`BindableBase` 基类、并实现`IDialogAware`接口。`IDialogAware`接口中要实现的方法如下\n\n```\n /// <summary>\n /// Evaluates whether the Dialog is in a state that would allow the Dialog to Close\n /// </summary>\n /// <returns><c>true</c> if the Dialog can close</returns>\n bool CanCloseDialog();\n\n /// <summary>\n /// Provides a callback to clean up resources or finalize tasks when the Dialog has been closed\n /// </summary>\n void OnDialogClosed();\n\n /// <summary>\n /// Initializes the state of the Dialog with provided DialogParameters\n /// </summary>\n /// <param name=\"parameters\"></param>\n void OnDialogOpened(IDialogParameters parameters);\n\n /// <summary>\n /// The <see cref=\"DialogCloseListener\"/> will be set by the <see cref=\"IDialogService\"/> and can be called to\n /// invoke the close of the Dialog.\n /// </summary>\n DialogCloseListener RequestClose { get; }\n```\n\n* `CanCloseDialog` : 指示当前Dialog是否可以关闭\n* `OnDialogClosed` : 当Dialog关闭时触发\n* `OnDialogOpened` : 当Dialog打开时触发，`parameters`是弹窗时外部传进来的参数\n* `RequestClose`: `RequestClose` 的本质是一个Action，执行此方法时关闭当前的Dialog\n\n## 注册Dialog\n\n在调用弹窗之前，需要先将视图(`View`)和视图模型(`ViewModel`)注入到容器中，注册代码如下\n\n```\n containerRegistry.RegisterDialog<xxxDialog, xxxDialogViewModel>();\n```\n\n## 弹出Dialog\n\n在需要调用弹窗的地方，使用依赖注入的方法注入`IDialogService`服务，然后调用ShowDialog。\n\n```\n  dialogService.ShowDialog(\n      name: nameof(xxxDialog),\n      parameters: new DialogParameters\n      {\n          { \"key\", \"value\" }\n      }, callback: result => { Debug.WriteLine(result); });\n```\n\nShowDialog的参数\n\n* name：视图名称\n* parameters：传送给Dialog的参数，在Dialog的OnDialogOpened中可以拿到\n* callback：关闭Dialog时，Dialog回传的参数，其中包含`Exception` `ButtonResult` `Parameters`\n  * Exception： Dialog中发生的异常\n  * ButtonResult：Dialog是通过什么方式关闭的\n  * Parameters：Dialog回传的参数，以键值对的形式\n\n## 最后\n\n[Prism官网](https://docs.prismlibrary.com/docs/)\n\n[源码](https://github.com/user121238/MauiPrism9Demo)\n","slug":"从零开始搭建Maui框架05-添加自定义Dialog弹窗","published":1,"updated":"2024-11-19T08:37:14.123Z","_id":"cm3o2hc3m00016sv4dgju64hg","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"MAUI-自带的弹窗类型及用法\"><a href=\"#MAUI-自带的弹窗类型及用法\" class=\"headerlink\" title=\"MAUI 自带的弹窗类型及用法\"></a>MAUI 自带的弹窗类型及用法</h2><p>.NET MAUI (多平台应用 UI) 提供了多种内置的弹窗类型，方便开发者在应用程序中与用户进行交互。这些弹窗在不同的平台上会呈现为原生控件，保证了跨平台应用的一致性。</p>\n<h3 id=\"常用的三种弹窗类型\"><a href=\"#常用的三种弹窗类型\" class=\"headerlink\" title=\"常用的三种弹窗类型\"></a>常用的三种弹窗类型</h3><ul>\n<li><strong>DisplayAlert:</strong> 用于显示简单的警报框，通常包含一个标题、一个消息和一个“确定”按钮。</li>\n<li><strong>DisplayActionSheet:</strong> 提供多个选项供用户选择，类似于 iOS 上的 Action Sheet 或 Android 上的 Bottom Sheet。</li>\n<li><strong>DisplayPromptAsync:</strong> 用于获取用户输入，可以设置输入类型（文本、密码等）。</li>\n</ul>\n<p>Maui提供的弹窗只有简单的功能，而且UI无法定制。</p>\n<p>Prism框架自带了<code>IDialogService</code> ,可以满足自定义弹窗的需求。</p>\n<h2 id=\"创建Dialog视图\"><a href=\"#创建Dialog视图\" class=\"headerlink\" title=\"创建Dialog视图\"></a>创建Dialog视图</h2><p>Prism的Dialog弹窗视图没有特殊要求，使用<code>ContentView</code>即可，根据需求自定义视图UI。</p>\n<h2 id=\"创建Dialog视图模型\"><a href=\"#创建Dialog视图模型\" class=\"headerlink\" title=\"创建Dialog视图模型\"></a>创建Dialog视图模型</h2><p>Dialog的视图模型需要继承<code>BindableBase</code> 基类、并实现<code>IDialogAware</code>接口。<code>IDialogAware</code>接口中要实现的方法如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Evaluates whether the Dialog is in a state that would allow the Dialog to Close</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span><span class=\"hljs-doctag\">&lt;c&gt;</span>true<span class=\"hljs-doctag\">&lt;/c&gt;</span> if the Dialog can close<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">CanCloseDialog</span>()</span>;<br><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Provides a callback to clean up resources or finalize tasks when the Dialog has been closed</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDialogClosed</span>()</span>;<br><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Initializes the state of the Dialog with provided DialogParameters</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;parameters&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDialogOpened</span>(<span class=\"hljs-params\">IDialogParameters parameters</span>)</span>;<br><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> The <span class=\"hljs-doctag\">&lt;see cref=&quot;DialogCloseListener&quot;/&gt;</span> will be set by the <span class=\"hljs-doctag\">&lt;see cref=&quot;IDialogService&quot;/&gt;</span> and can be called to</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> invoke the close of the Dialog.</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>DialogCloseListener RequestClose &#123; <span class=\"hljs-keyword\">get</span>; &#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><code>CanCloseDialog</code> : 指示当前Dialog是否可以关闭</li>\n<li><code>OnDialogClosed</code> : 当Dialog关闭时触发</li>\n<li><code>OnDialogOpened</code> : 当Dialog打开时触发，<code>parameters</code>是弹窗时外部传进来的参数</li>\n<li><code>RequestClose</code>: <code>RequestClose</code> 的本质是一个Action，执行此方法时关闭当前的Dialog</li>\n</ul>\n<h2 id=\"注册Dialog\"><a href=\"#注册Dialog\" class=\"headerlink\" title=\"注册Dialog\"></a>注册Dialog</h2><p>在调用弹窗之前，需要先将视图(<code>View</code>)和视图模型(<code>ViewModel</code>)注入到容器中，注册代码如下</p>\n<figure class=\"highlight bnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bnf\">containerRegistry.RegisterDialog<span class=\"hljs-attribute\">&lt;xxxDialog, xxxDialogViewModel&gt;</span>();<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"弹出Dialog\"><a href=\"#弹出Dialog\" class=\"headerlink\" title=\"弹出Dialog\"></a>弹出Dialog</h2><p>在需要调用弹窗的地方，使用依赖注入的方法注入<code>IDialogService</code>服务，然后调用ShowDialog。</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">dialogService.ShowDialog(</span><br><span class=\"hljs-keyword\"></span><span class=\"hljs-symbol\">    name:</span> nameof(xxxDialog),<br><span class=\"hljs-symbol\">    parameters:</span> new <span class=\"hljs-keyword\">DialogParameters</span><br><span class=\"hljs-keyword\"></span>    &#123;<br>        &#123; <span class=\"hljs-string\">&quot;key&quot;</span>, <span class=\"hljs-string\">&quot;value&quot;</span> &#125;<br>    &#125;, callback: result =&gt; &#123; <span class=\"hljs-built_in\">Debug</span>.WriteLine(result)<span class=\"hljs-comment\">; &#125;);</span><br></code></pre></td></tr></table></figure>\n\n<p>ShowDialog的参数</p>\n<ul>\n<li>name：视图名称</li>\n<li>parameters：传送给Dialog的参数，在Dialog的OnDialogOpened中可以拿到</li>\n<li>callback：关闭Dialog时，Dialog回传的参数，其中包含<code>Exception</code> <code>ButtonResult</code> <code>Parameters</code><ul>\n<li>Exception： Dialog中发生的异常</li>\n<li>ButtonResult：Dialog是通过什么方式关闭的</li>\n<li>Parameters：Dialog回传的参数，以键值对的形式</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p><a href=\"https://docs.prismlibrary.com/docs/\">Prism官网</a></p>\n<p><a href=\"https://github.com/user121238/MauiPrism9Demo\">源码</a></p>\n","excerpt":"","more":"<h2 id=\"MAUI-自带的弹窗类型及用法\"><a href=\"#MAUI-自带的弹窗类型及用法\" class=\"headerlink\" title=\"MAUI 自带的弹窗类型及用法\"></a>MAUI 自带的弹窗类型及用法</h2><p>.NET MAUI (多平台应用 UI) 提供了多种内置的弹窗类型，方便开发者在应用程序中与用户进行交互。这些弹窗在不同的平台上会呈现为原生控件，保证了跨平台应用的一致性。</p>\n<h3 id=\"常用的三种弹窗类型\"><a href=\"#常用的三种弹窗类型\" class=\"headerlink\" title=\"常用的三种弹窗类型\"></a>常用的三种弹窗类型</h3><ul>\n<li><strong>DisplayAlert:</strong> 用于显示简单的警报框，通常包含一个标题、一个消息和一个“确定”按钮。</li>\n<li><strong>DisplayActionSheet:</strong> 提供多个选项供用户选择，类似于 iOS 上的 Action Sheet 或 Android 上的 Bottom Sheet。</li>\n<li><strong>DisplayPromptAsync:</strong> 用于获取用户输入，可以设置输入类型（文本、密码等）。</li>\n</ul>\n<p>Maui提供的弹窗只有简单的功能，而且UI无法定制。</p>\n<p>Prism框架自带了<code>IDialogService</code> ,可以满足自定义弹窗的需求。</p>\n<h2 id=\"创建Dialog视图\"><a href=\"#创建Dialog视图\" class=\"headerlink\" title=\"创建Dialog视图\"></a>创建Dialog视图</h2><p>Prism的Dialog弹窗视图没有特殊要求，使用<code>ContentView</code>即可，根据需求自定义视图UI。</p>\n<h2 id=\"创建Dialog视图模型\"><a href=\"#创建Dialog视图模型\" class=\"headerlink\" title=\"创建Dialog视图模型\"></a>创建Dialog视图模型</h2><p>Dialog的视图模型需要继承<code>BindableBase</code> 基类、并实现<code>IDialogAware</code>接口。<code>IDialogAware</code>接口中要实现的方法如下</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Evaluates whether the Dialog is in a state that would allow the Dialog to Close</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span><span class=\"hljs-doctag\">&lt;c&gt;</span>true<span class=\"hljs-doctag\">&lt;/c&gt;</span> if the Dialog can close<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">CanCloseDialog</span>()</span>;<br><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Provides a callback to clean up resources or finalize tasks when the Dialog has been closed</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDialogClosed</span>()</span>;<br><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Initializes the state of the Dialog with provided DialogParameters</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;parameters&quot;&gt;</span><span class=\"hljs-doctag\">&lt;/param&gt;</span></span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDialogOpened</span>(<span class=\"hljs-params\">IDialogParameters parameters</span>)</span>;<br><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> The <span class=\"hljs-doctag\">&lt;see cref=&quot;DialogCloseListener&quot;/&gt;</span> will be set by the <span class=\"hljs-doctag\">&lt;see cref=&quot;IDialogService&quot;/&gt;</span> and can be called to</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> invoke the close of the Dialog.</span><br><span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span><br>DialogCloseListener RequestClose &#123; <span class=\"hljs-keyword\">get</span>; &#125;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><code>CanCloseDialog</code> : 指示当前Dialog是否可以关闭</li>\n<li><code>OnDialogClosed</code> : 当Dialog关闭时触发</li>\n<li><code>OnDialogOpened</code> : 当Dialog打开时触发，<code>parameters</code>是弹窗时外部传进来的参数</li>\n<li><code>RequestClose</code>: <code>RequestClose</code> 的本质是一个Action，执行此方法时关闭当前的Dialog</li>\n</ul>\n<h2 id=\"注册Dialog\"><a href=\"#注册Dialog\" class=\"headerlink\" title=\"注册Dialog\"></a>注册Dialog</h2><p>在调用弹窗之前，需要先将视图(<code>View</code>)和视图模型(<code>ViewModel</code>)注入到容器中，注册代码如下</p>\n<figure class=\"highlight bnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bnf\">containerRegistry.RegisterDialog<span class=\"hljs-attribute\">&lt;xxxDialog, xxxDialogViewModel&gt;</span>();<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"弹出Dialog\"><a href=\"#弹出Dialog\" class=\"headerlink\" title=\"弹出Dialog\"></a>弹出Dialog</h2><p>在需要调用弹窗的地方，使用依赖注入的方法注入<code>IDialogService</code>服务，然后调用ShowDialog。</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">dialogService.ShowDialog(</span><br><span class=\"hljs-keyword\"></span><span class=\"hljs-symbol\">    name:</span> nameof(xxxDialog),<br><span class=\"hljs-symbol\">    parameters:</span> new <span class=\"hljs-keyword\">DialogParameters</span><br><span class=\"hljs-keyword\"></span>    &#123;<br>        &#123; <span class=\"hljs-string\">&quot;key&quot;</span>, <span class=\"hljs-string\">&quot;value&quot;</span> &#125;<br>    &#125;, callback: result =&gt; &#123; <span class=\"hljs-built_in\">Debug</span>.WriteLine(result)<span class=\"hljs-comment\">; &#125;);</span><br></code></pre></td></tr></table></figure>\n\n<p>ShowDialog的参数</p>\n<ul>\n<li>name：视图名称</li>\n<li>parameters：传送给Dialog的参数，在Dialog的OnDialogOpened中可以拿到</li>\n<li>callback：关闭Dialog时，Dialog回传的参数，其中包含<code>Exception</code> <code>ButtonResult</code> <code>Parameters</code><ul>\n<li>Exception： Dialog中发生的异常</li>\n<li>ButtonResult：Dialog是通过什么方式关闭的</li>\n<li>Parameters：Dialog回传的参数，以键值对的形式</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p><a href=\"https://docs.prismlibrary.com/docs/\">Prism官网</a></p>\n<p><a href=\"https://github.com/user121238/MauiPrism9Demo\">源码</a></p>\n"},{"title":"从零开始搭建Maui框架07-多主题切换","date":"2024-11-19T06:25:32.000Z","_content":"\nMaui的多主题切换，官方给了例子\n\n[官方文档](https://learn.microsoft.com/zh-cn/dotnet/maui/user-interface/theming?view=net-maui-8.0)\n\n### 添加主题文件\n\n* 新增`ResourceDictionary` 命名LightTheme\n* 新增`ResourceDictionary` 命名DarkTheme\n\n### 设置默认主题\n\n将上面创建的任一主题资源文件合并到`App.xaml`中\n\n### 使用主题资源\n\n再依赖属性上，使用` DynamicResource`拓展标记使用主题资源\n\n```\n <Style x:Key=\"LargeLabelStyle\"\n               TargetType=\"Label\">\n            <Setter Property=\"TextColor\"\n                    Value=\"{DynamicResource SecondaryTextColor}\" />\n            <Setter Property=\"FontSize\"\n                    Value=\"30\" />\n        </Style>\n```\n\n### 在运行时加载主题\n\n在运行时选定了主题时，应用应执行以下操作：\n\n1. 从应用中删除当前主题。 这是通过清除应用级别 [ResourceDictionary](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.resourcedictionary) 的 `MergedDictionaries` 属性实现的。\n2. 加载所选主题。 这是通过将所选主题的实例添加到应用级别 [ResourceDictionary](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.resourcedictionary) 的 `MergedDictionaries` 属性来实现的。\n\n然后，任何使用 [`DynamicResource`](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.xaml.dynamicresourceextension) 标记扩展设置属性的 [VisualElement](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.visualelement) 对象都将应用新的主题值。 这是因为 [`DynamicResource`](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.xaml.dynamicresourceextension) 标记扩展要保留一个到字典键的链接。 因此，当替换与键关联的值时，会将更改应用于 [VisualElement](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.visualelement) 对象。\n\n```\nICollection<ResourceDictionary> mergedDictionaries = Application.Current.Resources.MergedDictionaries;\nif (mergedDictionaries != null)\n{\n    mergedDictionaries.Clear();\n    mergedDictionaries.Add(new DarkTheme());\n}\n```\n\n> 上一章使用的UraniumUI使用的是静态资源，使用这种方式不能修改UraniumUI控件的主题资源\n\n上一章\n\n[从零开始搭建Maui框架06-使用第三方UI框架](https://zhuanlan.zhihu.com/p/719308343)\n","source":"_posts/从零开始搭建Maui框架07-多主题切换.md","raw":"---\ntitle: 从零开始搭建Maui框架07-多主题切换\ndate: 2024-11-19 14:25:32\ncategories:\n\t- MAUI教程\ntags:\n\t- C#\n\t- .NET\n\t- MAUI\n\t- Prism\n---\n\nMaui的多主题切换，官方给了例子\n\n[官方文档](https://learn.microsoft.com/zh-cn/dotnet/maui/user-interface/theming?view=net-maui-8.0)\n\n### 添加主题文件\n\n* 新增`ResourceDictionary` 命名LightTheme\n* 新增`ResourceDictionary` 命名DarkTheme\n\n### 设置默认主题\n\n将上面创建的任一主题资源文件合并到`App.xaml`中\n\n### 使用主题资源\n\n再依赖属性上，使用` DynamicResource`拓展标记使用主题资源\n\n```\n <Style x:Key=\"LargeLabelStyle\"\n               TargetType=\"Label\">\n            <Setter Property=\"TextColor\"\n                    Value=\"{DynamicResource SecondaryTextColor}\" />\n            <Setter Property=\"FontSize\"\n                    Value=\"30\" />\n        </Style>\n```\n\n### 在运行时加载主题\n\n在运行时选定了主题时，应用应执行以下操作：\n\n1. 从应用中删除当前主题。 这是通过清除应用级别 [ResourceDictionary](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.resourcedictionary) 的 `MergedDictionaries` 属性实现的。\n2. 加载所选主题。 这是通过将所选主题的实例添加到应用级别 [ResourceDictionary](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.resourcedictionary) 的 `MergedDictionaries` 属性来实现的。\n\n然后，任何使用 [`DynamicResource`](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.xaml.dynamicresourceextension) 标记扩展设置属性的 [VisualElement](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.visualelement) 对象都将应用新的主题值。 这是因为 [`DynamicResource`](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.xaml.dynamicresourceextension) 标记扩展要保留一个到字典键的链接。 因此，当替换与键关联的值时，会将更改应用于 [VisualElement](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.visualelement) 对象。\n\n```\nICollection<ResourceDictionary> mergedDictionaries = Application.Current.Resources.MergedDictionaries;\nif (mergedDictionaries != null)\n{\n    mergedDictionaries.Clear();\n    mergedDictionaries.Add(new DarkTheme());\n}\n```\n\n> 上一章使用的UraniumUI使用的是静态资源，使用这种方式不能修改UraniumUI控件的主题资源\n\n上一章\n\n[从零开始搭建Maui框架06-使用第三方UI框架](https://zhuanlan.zhihu.com/p/719308343)\n","slug":"从零开始搭建Maui框架07-多主题切换","published":1,"updated":"2024-11-19T08:36:58.910Z","_id":"cm3o2hc3n00036sv418hlb4a2","comments":1,"layout":"post","photos":[],"content":"<p>Maui的多主题切换，官方给了例子</p>\n<p><a href=\"https://learn.microsoft.com/zh-cn/dotnet/maui/user-interface/theming?view=net-maui-8.0\">官方文档</a></p>\n<h3 id=\"添加主题文件\"><a href=\"#添加主题文件\" class=\"headerlink\" title=\"添加主题文件\"></a>添加主题文件</h3><ul>\n<li>新增<code>ResourceDictionary</code> 命名LightTheme</li>\n<li>新增<code>ResourceDictionary</code> 命名DarkTheme</li>\n</ul>\n<h3 id=\"设置默认主题\"><a href=\"#设置默认主题\" class=\"headerlink\" title=\"设置默认主题\"></a>设置默认主题</h3><p>将上面创建的任一主题资源文件合并到<code>App.xaml</code>中</p>\n<h3 id=\"使用主题资源\"><a href=\"#使用主题资源\" class=\"headerlink\" title=\"使用主题资源\"></a>使用主题资源</h3><p>再依赖属性上，使用<code> DynamicResource</code>拓展标记使用主题资源</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\"><span class=\"hljs-operator\">&lt;</span><span class=\"hljs-built_in\">Style</span> <span class=\"hljs-variable\">x</span><span class=\"hljs-operator\">:</span><span class=\"hljs-built_in\">Key</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;LargeLabelStyle&quot;</span><br>              <span class=\"hljs-variable\">TargetType</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;Label&quot;</span><span class=\"hljs-operator\">&gt;</span><br>           <span class=\"hljs-operator\">&lt;</span><span class=\"hljs-built_in\">Setter</span> <span class=\"hljs-built_in\">Property</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;TextColor&quot;</span><br>                   <span class=\"hljs-variable\">Value</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;&#123;DynamicResource SecondaryTextColor&#125;&quot;</span> <span class=\"hljs-operator\">/&gt;</span><br>           <span class=\"hljs-operator\">&lt;</span><span class=\"hljs-built_in\">Setter</span> <span class=\"hljs-built_in\">Property</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;FontSize&quot;</span><br>                   <span class=\"hljs-variable\">Value</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;30&quot;</span> <span class=\"hljs-operator\">/&gt;</span><br>       <span class=\"hljs-operator\">&lt;/</span><span class=\"hljs-built_in\">Style</span><span class=\"hljs-operator\">&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"在运行时加载主题\"><a href=\"#在运行时加载主题\" class=\"headerlink\" title=\"在运行时加载主题\"></a>在运行时加载主题</h3><p>在运行时选定了主题时，应用应执行以下操作：</p>\n<ol>\n<li>从应用中删除当前主题。 这是通过清除应用级别 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.resourcedictionary\">ResourceDictionary</a> 的 <code>MergedDictionaries</code> 属性实现的。</li>\n<li>加载所选主题。 这是通过将所选主题的实例添加到应用级别 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.resourcedictionary\">ResourceDictionary</a> 的 <code>MergedDictionaries</code> 属性来实现的。</li>\n</ol>\n<p>然后，任何使用 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.xaml.dynamicresourceextension\"><code>DynamicResource</code></a> 标记扩展设置属性的 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.visualelement\">VisualElement</a> 对象都将应用新的主题值。 这是因为 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.xaml.dynamicresourceextension\"><code>DynamicResource</code></a> 标记扩展要保留一个到字典键的链接。 因此，当替换与键关联的值时，会将更改应用于 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.visualelement\">VisualElement</a> 对象。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">ICollection&lt;ResourceDictionary&gt; mergedDictionaries = Application.<span class=\"hljs-keyword\">Current</span>.Resources.MergedDictionaries;<br><span class=\"hljs-keyword\">if</span> (mergedDictionaries != <span class=\"hljs-keyword\">null</span>)<br>&#123;<br>    mergedDictionaries.Clear();<br>    mergedDictionaries.<span class=\"hljs-keyword\">Add</span>(<span class=\"hljs-built_in\">new</span> DarkTheme());<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>上一章使用的UraniumUI使用的是静态资源，使用这种方式不能修改UraniumUI控件的主题资源</p>\n</blockquote>\n<p>上一章</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/719308343\">从零开始搭建Maui框架06-使用第三方UI框架</a></p>\n","excerpt":"","more":"<p>Maui的多主题切换，官方给了例子</p>\n<p><a href=\"https://learn.microsoft.com/zh-cn/dotnet/maui/user-interface/theming?view=net-maui-8.0\">官方文档</a></p>\n<h3 id=\"添加主题文件\"><a href=\"#添加主题文件\" class=\"headerlink\" title=\"添加主题文件\"></a>添加主题文件</h3><ul>\n<li>新增<code>ResourceDictionary</code> 命名LightTheme</li>\n<li>新增<code>ResourceDictionary</code> 命名DarkTheme</li>\n</ul>\n<h3 id=\"设置默认主题\"><a href=\"#设置默认主题\" class=\"headerlink\" title=\"设置默认主题\"></a>设置默认主题</h3><p>将上面创建的任一主题资源文件合并到<code>App.xaml</code>中</p>\n<h3 id=\"使用主题资源\"><a href=\"#使用主题资源\" class=\"headerlink\" title=\"使用主题资源\"></a>使用主题资源</h3><p>再依赖属性上，使用<code> DynamicResource</code>拓展标记使用主题资源</p>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mathematica\"><span class=\"hljs-operator\">&lt;</span><span class=\"hljs-built_in\">Style</span> <span class=\"hljs-variable\">x</span><span class=\"hljs-operator\">:</span><span class=\"hljs-built_in\">Key</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;LargeLabelStyle&quot;</span><br>              <span class=\"hljs-variable\">TargetType</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;Label&quot;</span><span class=\"hljs-operator\">&gt;</span><br>           <span class=\"hljs-operator\">&lt;</span><span class=\"hljs-built_in\">Setter</span> <span class=\"hljs-built_in\">Property</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;TextColor&quot;</span><br>                   <span class=\"hljs-variable\">Value</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;&#123;DynamicResource SecondaryTextColor&#125;&quot;</span> <span class=\"hljs-operator\">/&gt;</span><br>           <span class=\"hljs-operator\">&lt;</span><span class=\"hljs-built_in\">Setter</span> <span class=\"hljs-built_in\">Property</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;FontSize&quot;</span><br>                   <span class=\"hljs-variable\">Value</span><span class=\"hljs-operator\">=</span><span class=\"hljs-string\">&quot;30&quot;</span> <span class=\"hljs-operator\">/&gt;</span><br>       <span class=\"hljs-operator\">&lt;/</span><span class=\"hljs-built_in\">Style</span><span class=\"hljs-operator\">&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"在运行时加载主题\"><a href=\"#在运行时加载主题\" class=\"headerlink\" title=\"在运行时加载主题\"></a>在运行时加载主题</h3><p>在运行时选定了主题时，应用应执行以下操作：</p>\n<ol>\n<li>从应用中删除当前主题。 这是通过清除应用级别 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.resourcedictionary\">ResourceDictionary</a> 的 <code>MergedDictionaries</code> 属性实现的。</li>\n<li>加载所选主题。 这是通过将所选主题的实例添加到应用级别 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.resourcedictionary\">ResourceDictionary</a> 的 <code>MergedDictionaries</code> 属性来实现的。</li>\n</ol>\n<p>然后，任何使用 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.xaml.dynamicresourceextension\"><code>DynamicResource</code></a> 标记扩展设置属性的 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.visualelement\">VisualElement</a> 对象都将应用新的主题值。 这是因为 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.xaml.dynamicresourceextension\"><code>DynamicResource</code></a> 标记扩展要保留一个到字典键的链接。 因此，当替换与键关联的值时，会将更改应用于 <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.maui.controls.visualelement\">VisualElement</a> 对象。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">ICollection&lt;ResourceDictionary&gt; mergedDictionaries = Application.<span class=\"hljs-keyword\">Current</span>.Resources.MergedDictionaries;<br><span class=\"hljs-keyword\">if</span> (mergedDictionaries != <span class=\"hljs-keyword\">null</span>)<br>&#123;<br>    mergedDictionaries.Clear();<br>    mergedDictionaries.<span class=\"hljs-keyword\">Add</span>(<span class=\"hljs-built_in\">new</span> DarkTheme());<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>上一章使用的UraniumUI使用的是静态资源，使用这种方式不能修改UraniumUI控件的主题资源</p>\n</blockquote>\n<p>上一章</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/719308343\">从零开始搭建Maui框架06-使用第三方UI框架</a></p>\n"},{"title":"使用Github Page 和 Hexo 创建blog","date":"2024-11-19T08:35:37.000Z","_content":"\n突发奇想想用github page搭建一个个人博客，查了些资料，最终决定使用Hexo。最主要的是这个框架很成熟，而且最最重要的是免费，且支持Markdown和Html，我的Html写的稀烂，用MD刚好。\n下面是我搭建这个博客的步骤：\n\n# 安装环境\n我使用的Windows搭建，需要安装以下环境：\n* Git [[Git官网](https://git-scm.com/)]\n* Node.js [[Node.js官网](https://nodejs.org/zh-cn)]\n\n\n上面的两个工具都直接在官网下载，直接下一步就能完成安装。\n> NodeJs安装时要记得勾选  **Add to PATH** ，否则就要自己手动添加环境变量了。\n\n# 安装Hexo\n直接把hexo安装成全局的，当然你有自信也可以安装成个人的。\n```\nnpm install -g hexo-cli\n```\n\n# 初始化博客项目\n在博客源文件存放目录，打开CMD，运行以下命令\n```\n hexo init <folder>\n cd <folder>\n npm install\n```\n\n命令执行完以后会生成的目录结构如下：\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n## _config.yml\n网站的配置文件，具体参数可以参考官方文档。[hexo官网](https://hexo.io/zh-cn/docs/)\n\n## source\n上传的md文档都会在这里面，后面要发布文章主要关注这个文件夹。\n\n**_drafts** 中包含的是草稿，不会显示在网页中。\n\n**_posts** 中是发布的文章，会显示在网页中。\n\n\n# 运行博客项目\n\n在控制台输入\n```\nhexo s\n```\n控制台会输出\n```\nINFO  Validating config\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.\n```\n这时候去浏览器访问`http://localhost:4000/` 就可以看到搭建好的博客网站了。\n\n# 上传新文章\n上传新文章有两种方式\n* 一种是直接将以往的md文件放置在 `source/_posts` 目录中。\n* 使用命令\n\n  ```\n  hexo new [layout] <title>\n  ```\n  比如\n  ```\n  hexo new post 测试文章\n  ```\n  上面的语句会在`source/_posts/`中生成一个名为 `测试文件.md`的文件，在这个文件中正常写文章就可以发布在网站上了。\n\n  到这里，搭建博客需要的东西就已经准备完成了。\n\n# 更换主题\n如果觉得博客自带的主题不好看，可以使用别人制作好的主题，本网站使用了Fluid的主题。\n\n[Fluid主题官网](https://hexo.fluid-dev.com/)\n\n## 安装fluid主题步骤\n以下步骤来源于fluid官方文档\n1. 安装主题\n\n    进入博客目录，执行命令：\n    ```\n    npm install --save hexo-theme-fluid\n    ```\n    然后在博客目录下创建` _config.fluid.yml`，将主题的 [_config.yml](https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml)内容复制过去。\n2. 修改配置文件\n\n    如下修改 Hexo 博客目录中的 _config.yml：\n    ```\n    theme: fluid  # 指定主题\n    language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改\n    ```\n3. 创建关于页\n\n    首次使用主题的「关于页」需要手动创建：\n    ```\n    hexo new page about\n    ```\n    创建成功后修改 `/source/about/index.md`，添加 `layout` 属性。\n\n    修改后的文件示例如下：\n    ```\n    ---\n    title: 标题\n    layout: about\n    ---\n\n    这里写关于页的正文，支持 Markdown, HTML\n    ```\n    > layout: about 必须存在，并且不能修改成其他值，否则不会显示头像等样式。\n\n# 部署到github page\n部署到github有两种方式，一种是把文件部署到github上，还有一种是一键部署，如果不想将源代码放到github上，可以选择一键部署。\n本博客使用文件部署的方式。\n1. 创建GitHub仓库\n    \n   在github上新建仓库，命名方式为  `username.github.io`\n   >需要注意的是，仓库名称必须为`username`开头，不然仓库不会识别。\n\n2. 将本地文件push到仓库中\n   > `public/`文件夹除外\n\n3. 查看本地的node.js版本\n   查询代码如下：\n   ```\n   node --version\n   ```\n   记住当前电脑上的node版本\n4. 在储存库中建立 .github/workflows/pages.yml，并填入以下内容 (将 20 替换为上个步骤中记下的版本)\n    ```\n    name: Pages\n\n    on:\n    push:\n        branches:\n        - main # default branch\n\n    jobs:\n    build:\n        runs-on: ubuntu-latest\n        steps:\n        - uses: actions/checkout@v4\n            with:\n            token: ${{ secrets.GITHUB_TOKEN }}\n            # If your repository depends on submodule, please see: https://github.com/actions/checkout\n            submodules: recursive\n        - name: Use Node.js 20\n            uses: actions/setup-node@v4\n            with:\n            # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n            # Ref: https://github.com/actions/setup-node#supported-version-syntax\n            node-version: \"20\"\n        - name: Cache NPM dependencies\n            uses: actions/cache@v4\n            with:\n            path: node_modules\n            key: ${{ runner.OS }}-npm-cache\n            restore-keys: |\n                ${{ runner.OS }}-npm-cache\n        - name: Install Dependencies\n            run: npm install\n        - name: Build\n            run: npm run build\n        - name: Upload Pages artifact\n            uses: actions/upload-pages-artifact@v3\n            with:\n            path: ./public\n    deploy:\n        needs: build\n        permissions:\n        pages: write\n        id-token: write\n        environment:\n        name: github-pages\n        url: ${{ steps.deployment.outputs.page_url }}\n        runs-on: ubuntu-latest\n        steps:\n        - name: Deploy to GitHub Pages\n            id: deployment\n            uses: actions/deploy-pages@v4\n    ```\n    其中`name: Use Node.js 20`这里的20替换成上面查询到的版本号，比如查询到的版本号为`20.13.1`,在此处为`name: Use Node.js 20.13.1`\n\n    \n\n\n\n5. 在储存库中前往 `Settings > Pages > Source` 。 将 `source` 更改为 `GitHub Actions`，然后保存。\n\n6. 部署完成，等待系统构建\n7. 访问 `username.github.io`查看网页\n    >假设你的用户名是：`zhangsan`，那你的仓库名称应该为`zhangsan.github.io`,最终访问的网址也是这个。\n\n# 总结\n本教程详细介绍了如何利用Hexo这个静态博客生成器，结合GitHub Pages的免费托管服务，快速搭建一个属于自己的个人博客。通过简单的几步操作，即使是新手也能拥有一个美观、功能强大的博客。","source":"_posts/使用Github-Page-和-Hexo-创建blog.md","raw":"---\ntitle: 使用Github Page 和 Hexo 创建blog\ntags:\n  - Hexo\n  - Github Page\n  - Fluid\ncategories:\n  - 博客搭建教程\ndate: 2024-11-19 16:35:37\n---\n\n突发奇想想用github page搭建一个个人博客，查了些资料，最终决定使用Hexo。最主要的是这个框架很成熟，而且最最重要的是免费，且支持Markdown和Html，我的Html写的稀烂，用MD刚好。\n下面是我搭建这个博客的步骤：\n\n# 安装环境\n我使用的Windows搭建，需要安装以下环境：\n* Git [[Git官网](https://git-scm.com/)]\n* Node.js [[Node.js官网](https://nodejs.org/zh-cn)]\n\n\n上面的两个工具都直接在官网下载，直接下一步就能完成安装。\n> NodeJs安装时要记得勾选  **Add to PATH** ，否则就要自己手动添加环境变量了。\n\n# 安装Hexo\n直接把hexo安装成全局的，当然你有自信也可以安装成个人的。\n```\nnpm install -g hexo-cli\n```\n\n# 初始化博客项目\n在博客源文件存放目录，打开CMD，运行以下命令\n```\n hexo init <folder>\n cd <folder>\n npm install\n```\n\n命令执行完以后会生成的目录结构如下：\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n## _config.yml\n网站的配置文件，具体参数可以参考官方文档。[hexo官网](https://hexo.io/zh-cn/docs/)\n\n## source\n上传的md文档都会在这里面，后面要发布文章主要关注这个文件夹。\n\n**_drafts** 中包含的是草稿，不会显示在网页中。\n\n**_posts** 中是发布的文章，会显示在网页中。\n\n\n# 运行博客项目\n\n在控制台输入\n```\nhexo s\n```\n控制台会输出\n```\nINFO  Validating config\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.\n```\n这时候去浏览器访问`http://localhost:4000/` 就可以看到搭建好的博客网站了。\n\n# 上传新文章\n上传新文章有两种方式\n* 一种是直接将以往的md文件放置在 `source/_posts` 目录中。\n* 使用命令\n\n  ```\n  hexo new [layout] <title>\n  ```\n  比如\n  ```\n  hexo new post 测试文章\n  ```\n  上面的语句会在`source/_posts/`中生成一个名为 `测试文件.md`的文件，在这个文件中正常写文章就可以发布在网站上了。\n\n  到这里，搭建博客需要的东西就已经准备完成了。\n\n# 更换主题\n如果觉得博客自带的主题不好看，可以使用别人制作好的主题，本网站使用了Fluid的主题。\n\n[Fluid主题官网](https://hexo.fluid-dev.com/)\n\n## 安装fluid主题步骤\n以下步骤来源于fluid官方文档\n1. 安装主题\n\n    进入博客目录，执行命令：\n    ```\n    npm install --save hexo-theme-fluid\n    ```\n    然后在博客目录下创建` _config.fluid.yml`，将主题的 [_config.yml](https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml)内容复制过去。\n2. 修改配置文件\n\n    如下修改 Hexo 博客目录中的 _config.yml：\n    ```\n    theme: fluid  # 指定主题\n    language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改\n    ```\n3. 创建关于页\n\n    首次使用主题的「关于页」需要手动创建：\n    ```\n    hexo new page about\n    ```\n    创建成功后修改 `/source/about/index.md`，添加 `layout` 属性。\n\n    修改后的文件示例如下：\n    ```\n    ---\n    title: 标题\n    layout: about\n    ---\n\n    这里写关于页的正文，支持 Markdown, HTML\n    ```\n    > layout: about 必须存在，并且不能修改成其他值，否则不会显示头像等样式。\n\n# 部署到github page\n部署到github有两种方式，一种是把文件部署到github上，还有一种是一键部署，如果不想将源代码放到github上，可以选择一键部署。\n本博客使用文件部署的方式。\n1. 创建GitHub仓库\n    \n   在github上新建仓库，命名方式为  `username.github.io`\n   >需要注意的是，仓库名称必须为`username`开头，不然仓库不会识别。\n\n2. 将本地文件push到仓库中\n   > `public/`文件夹除外\n\n3. 查看本地的node.js版本\n   查询代码如下：\n   ```\n   node --version\n   ```\n   记住当前电脑上的node版本\n4. 在储存库中建立 .github/workflows/pages.yml，并填入以下内容 (将 20 替换为上个步骤中记下的版本)\n    ```\n    name: Pages\n\n    on:\n    push:\n        branches:\n        - main # default branch\n\n    jobs:\n    build:\n        runs-on: ubuntu-latest\n        steps:\n        - uses: actions/checkout@v4\n            with:\n            token: ${{ secrets.GITHUB_TOKEN }}\n            # If your repository depends on submodule, please see: https://github.com/actions/checkout\n            submodules: recursive\n        - name: Use Node.js 20\n            uses: actions/setup-node@v4\n            with:\n            # Examples: 20, 18.19, >=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node\n            # Ref: https://github.com/actions/setup-node#supported-version-syntax\n            node-version: \"20\"\n        - name: Cache NPM dependencies\n            uses: actions/cache@v4\n            with:\n            path: node_modules\n            key: ${{ runner.OS }}-npm-cache\n            restore-keys: |\n                ${{ runner.OS }}-npm-cache\n        - name: Install Dependencies\n            run: npm install\n        - name: Build\n            run: npm run build\n        - name: Upload Pages artifact\n            uses: actions/upload-pages-artifact@v3\n            with:\n            path: ./public\n    deploy:\n        needs: build\n        permissions:\n        pages: write\n        id-token: write\n        environment:\n        name: github-pages\n        url: ${{ steps.deployment.outputs.page_url }}\n        runs-on: ubuntu-latest\n        steps:\n        - name: Deploy to GitHub Pages\n            id: deployment\n            uses: actions/deploy-pages@v4\n    ```\n    其中`name: Use Node.js 20`这里的20替换成上面查询到的版本号，比如查询到的版本号为`20.13.1`,在此处为`name: Use Node.js 20.13.1`\n\n    \n\n\n\n5. 在储存库中前往 `Settings > Pages > Source` 。 将 `source` 更改为 `GitHub Actions`，然后保存。\n\n6. 部署完成，等待系统构建\n7. 访问 `username.github.io`查看网页\n    >假设你的用户名是：`zhangsan`，那你的仓库名称应该为`zhangsan.github.io`,最终访问的网址也是这个。\n\n# 总结\n本教程详细介绍了如何利用Hexo这个静态博客生成器，结合GitHub Pages的免费托管服务，快速搭建一个属于自己的个人博客。通过简单的几步操作，即使是新手也能拥有一个美观、功能强大的博客。","slug":"使用Github-Page-和-Hexo-创建blog","published":1,"updated":"2024-11-19T08:42:09.634Z","_id":"cm3o79mxk00003wv4bbhkcneo","comments":1,"layout":"post","photos":[],"content":"<p>突发奇想想用github page搭建一个个人博客，查了些资料，最终决定使用Hexo。最主要的是这个框架很成熟，而且最最重要的是免费，且支持Markdown和Html，我的Html写的稀烂，用MD刚好。<br>下面是我搭建这个博客的步骤：</p>\n<h1 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h1><p>我使用的Windows搭建，需要安装以下环境：</p>\n<ul>\n<li>Git [<a href=\"https://git-scm.com/\">Git官网</a>]</li>\n<li>Node.js [<a href=\"https://nodejs.org/zh-cn\">Node.js官网</a>]</li>\n</ul>\n<p>上面的两个工具都直接在官网下载，直接下一步就能完成安装。</p>\n<blockquote>\n<p>NodeJs安装时要记得勾选  <strong>Add to PATH</strong> ，否则就要自己手动添加环境变量了。</p>\n</blockquote>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>直接把hexo安装成全局的，当然你有自信也可以安装成个人的。</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\">npm install -g hexo-<span class=\"hljs-keyword\">cli</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"初始化博客项目\"><a href=\"#初始化博客项目\" class=\"headerlink\" title=\"初始化博客项目\"></a>初始化博客项目</h1><p>在博客源文件存放目录，打开CMD，运行以下命令</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">hexo init <span class=\"hljs-symbol\">&lt;folder&gt;</span><br><span class=\"hljs-keyword\">cd</span> <span class=\"hljs-symbol\">&lt;folder&gt;</span><br>npm install<br></code></pre></td></tr></table></figure>\n\n<p>命令执行完以后会生成的目录结构如下：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br><span class=\"hljs-string\">|   ├── _drafts</span><br><span class=\"hljs-string\">|   └── _posts</span><br>└── themes<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h2><p>网站的配置文件，具体参数可以参考官方文档。<a href=\"https://hexo.io/zh-cn/docs/\">hexo官网</a></p>\n<h2 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h2><p>上传的md文档都会在这里面，后面要发布文章主要关注这个文件夹。</p>\n<p><strong>_drafts</strong> 中包含的是草稿，不会显示在网页中。</p>\n<p><strong>_posts</strong> 中是发布的文章，会显示在网页中。</p>\n<h1 id=\"运行博客项目\"><a href=\"#运行博客项目\" class=\"headerlink\" title=\"运行博客项目\"></a>运行博客项目</h1><p>在控制台输入</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">hexo s</span><br></code></pre></td></tr></table></figure>\n<p>控制台会输出</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">INFO</span>  Validating config<br><span class=\"hljs-keyword\">INFO</span>  <span class=\"hljs-keyword\">Start</span> processing<br><span class=\"hljs-keyword\">INFO</span>  Hexo <span class=\"hljs-keyword\">is</span> running at http://localhost:<span class=\"hljs-number\">4000</span>/ . Press Ctrl+C <span class=\"hljs-keyword\">to</span> stop.<br></code></pre></td></tr></table></figure>\n<p>这时候去浏览器访问<code>http://localhost:4000/</code> 就可以看到搭建好的博客网站了。</p>\n<h1 id=\"上传新文章\"><a href=\"#上传新文章\" class=\"headerlink\" title=\"上传新文章\"></a>上传新文章</h1><p>上传新文章有两种方式</p>\n<ul>\n<li><p>一种是直接将以往的md文件放置在 <code>source/_posts</code> 目录中。</p>\n</li>\n<li><p>使用命令</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">hexo <span class=\"hljs-keyword\">new</span> [layout] &lt;<span class=\"hljs-built_in\">title</span>&gt;<br></code></pre></td></tr></table></figure>\n<p>比如</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livecodeserver\">hexo <span class=\"hljs-built_in\">new</span> <span class=\"hljs-built_in\">post</span> 测试文章<br></code></pre></td></tr></table></figure>\n<p>上面的语句会在<code>source/_posts/</code>中生成一个名为 <code>测试文件.md</code>的文件，在这个文件中正常写文章就可以发布在网站上了。</p>\n<p>到这里，搭建博客需要的东西就已经准备完成了。</p>\n</li>\n</ul>\n<h1 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h1><p>如果觉得博客自带的主题不好看，可以使用别人制作好的主题，本网站使用了Fluid的主题。</p>\n<p><a href=\"https://hexo.fluid-dev.com/\">Fluid主题官网</a></p>\n<h2 id=\"安装fluid主题步骤\"><a href=\"#安装fluid主题步骤\" class=\"headerlink\" title=\"安装fluid主题步骤\"></a>安装fluid主题步骤</h2><p>以下步骤来源于fluid官方文档</p>\n<ol>\n<li><p>安装主题</p>\n<p> 进入博客目录，执行命令：</p>\n <figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\">npm install <span class=\"hljs-comment\">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure>\n<p> 然后在博客目录下创建<code> _config.fluid.yml</code>，将主题的 <a href=\"https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml\">_config.yml</a>内容复制过去。</p>\n</li>\n<li><p>修改配置文件</p>\n<p> 如下修改 Hexo 博客目录中的 _config.yml：</p>\n <figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">theme:</span> fluid  <span class=\"hljs-meta\"># 指定主题</span><br><span class=\"hljs-symbol\">language:</span> <span class=\"hljs-built_in\">zh</span>-CN  <span class=\"hljs-meta\"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure></li>\n<li><p>创建关于页</p>\n<p> 首次使用主题的「关于页」需要手动创建：</p>\n <figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\">hexo <span class=\"hljs-keyword\">new</span> page about<br></code></pre></td></tr></table></figure>\n<p> 创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p>\n<p> 修改后的文件示例如下：</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">标题</span><br><span class=\"hljs-attr\">layout:</span> <span class=\"hljs-string\">about</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-meta\"></span><br><span class=\"hljs-string\">这里写关于页的正文，支持</span> <span class=\"hljs-string\">Markdown,</span> <span class=\"hljs-string\">HTML</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>layout: about 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"部署到github-page\"><a href=\"#部署到github-page\" class=\"headerlink\" title=\"部署到github page\"></a>部署到github page</h1><p>部署到github有两种方式，一种是把文件部署到github上，还有一种是一键部署，如果不想将源代码放到github上，可以选择一键部署。<br>本博客使用文件部署的方式。</p>\n<ol>\n<li><p>创建GitHub仓库</p>\n<p>在github上新建仓库，命名方式为  <code>username.github.io</code></p>\n<blockquote>\n<p>需要注意的是，仓库名称必须为<code>username</code>开头，不然仓库不会识别。</p>\n</blockquote>\n</li>\n<li><p>将本地文件push到仓库中</p>\n<blockquote>\n<p><code>public/</code>文件夹除外</p>\n</blockquote>\n</li>\n<li><p>查看本地的node.js版本<br>查询代码如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">--version</span><br></code></pre></td></tr></table></figure>\n<p>记住当前电脑上的node版本</p>\n</li>\n<li><p>在储存库中建立 .github&#x2F;workflows&#x2F;pages.yml，并填入以下内容 (将 20 替换为上个步骤中记下的版本)</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Pages</span><br><br><span class=\"hljs-attr\">on:</span><br><span class=\"hljs-attr\">push:</span><br>    <span class=\"hljs-attr\">branches:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">main</span> <span class=\"hljs-comment\"># default branch</span><br><br><span class=\"hljs-attr\">jobs:</span><br><span class=\"hljs-attr\">build:</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">steps:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v4</span><br>        <span class=\"hljs-attr\">with:</span><br>        <span class=\"hljs-attr\">token:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">secrets.GITHUB_TOKEN</span> <span class=\"hljs-string\">&#125;&#125;</span><br>        <span class=\"hljs-comment\"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br>        <span class=\"hljs-attr\">submodules:</span> <span class=\"hljs-string\">recursive</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Use</span> <span class=\"hljs-string\">Node.js</span> <span class=\"hljs-number\">20</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v4</span><br>        <span class=\"hljs-attr\">with:</span><br>        <span class=\"hljs-comment\"># Examples: 20, 18.19, &gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node</span><br>        <span class=\"hljs-comment\"># Ref: https://github.com/actions/setup-node#supported-version-syntax</span><br>        <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">&quot;20&quot;</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Cache</span> <span class=\"hljs-string\">NPM</span> <span class=\"hljs-string\">dependencies</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/cache@v4</span><br>        <span class=\"hljs-attr\">with:</span><br>        <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">node_modules</span><br>        <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">runner.OS</span> <span class=\"hljs-string\">&#125;&#125;-npm-cache</span><br>        <span class=\"hljs-attr\">restore-keys:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"hljs-string\"></span>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span> <span class=\"hljs-string\">Dependencies</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Build</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Upload</span> <span class=\"hljs-string\">Pages</span> <span class=\"hljs-string\">artifact</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/upload-pages-artifact@v3</span><br>        <span class=\"hljs-attr\">with:</span><br>        <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">./public</span><br><span class=\"hljs-attr\">deploy:</span><br>    <span class=\"hljs-attr\">needs:</span> <span class=\"hljs-string\">build</span><br>    <span class=\"hljs-attr\">permissions:</span><br>    <span class=\"hljs-attr\">pages:</span> <span class=\"hljs-string\">write</span><br>    <span class=\"hljs-attr\">id-token:</span> <span class=\"hljs-string\">write</span><br>    <span class=\"hljs-attr\">environment:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">github-pages</span><br>    <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">steps.deployment.outputs.page_url</span> <span class=\"hljs-string\">&#125;&#125;</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">steps:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">GitHub</span> <span class=\"hljs-string\">Pages</span><br>        <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">deployment</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/deploy-pages@v4</span><br></code></pre></td></tr></table></figure>\n<p> 其中<code>name: Use Node.js 20</code>这里的20替换成上面查询到的版本号，比如查询到的版本号为<code>20.13.1</code>,在此处为<code>name: Use Node.js 20.13.1</code></p>\n</li>\n<li><p>在储存库中前往 <code>Settings &gt; Pages &gt; Source</code> 。 将 <code>source</code> 更改为 <code>GitHub Actions</code>，然后保存。</p>\n</li>\n<li><p>部署完成，等待系统构建</p>\n</li>\n<li><p>访问 <code>username.github.io</code>查看网页</p>\n<blockquote>\n<p>假设你的用户名是：<code>zhangsan</code>，那你的仓库名称应该为<code>zhangsan.github.io</code>,最终访问的网址也是这个。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>本教程详细介绍了如何利用Hexo这个静态博客生成器，结合GitHub Pages的免费托管服务，快速搭建一个属于自己的个人博客。通过简单的几步操作，即使是新手也能拥有一个美观、功能强大的博客。</p>\n","excerpt":"","more":"<p>突发奇想想用github page搭建一个个人博客，查了些资料，最终决定使用Hexo。最主要的是这个框架很成熟，而且最最重要的是免费，且支持Markdown和Html，我的Html写的稀烂，用MD刚好。<br>下面是我搭建这个博客的步骤：</p>\n<h1 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h1><p>我使用的Windows搭建，需要安装以下环境：</p>\n<ul>\n<li>Git [<a href=\"https://git-scm.com/\">Git官网</a>]</li>\n<li>Node.js [<a href=\"https://nodejs.org/zh-cn\">Node.js官网</a>]</li>\n</ul>\n<p>上面的两个工具都直接在官网下载，直接下一步就能完成安装。</p>\n<blockquote>\n<p>NodeJs安装时要记得勾选  <strong>Add to PATH</strong> ，否则就要自己手动添加环境变量了。</p>\n</blockquote>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>直接把hexo安装成全局的，当然你有自信也可以安装成个人的。</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\">npm install -g hexo-<span class=\"hljs-keyword\">cli</span><br></code></pre></td></tr></table></figure>\n\n<h1 id=\"初始化博客项目\"><a href=\"#初始化博客项目\" class=\"headerlink\" title=\"初始化博客项目\"></a>初始化博客项目</h1><p>在博客源文件存放目录，打开CMD，运行以下命令</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\">hexo init <span class=\"hljs-symbol\">&lt;folder&gt;</span><br><span class=\"hljs-keyword\">cd</span> <span class=\"hljs-symbol\">&lt;folder&gt;</span><br>npm install<br></code></pre></td></tr></table></figure>\n\n<p>命令执行完以后会生成的目录结构如下：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br><span class=\"hljs-string\">|   ├── _drafts</span><br><span class=\"hljs-string\">|   └── _posts</span><br>└── themes<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h2><p>网站的配置文件，具体参数可以参考官方文档。<a href=\"https://hexo.io/zh-cn/docs/\">hexo官网</a></p>\n<h2 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h2><p>上传的md文档都会在这里面，后面要发布文章主要关注这个文件夹。</p>\n<p><strong>_drafts</strong> 中包含的是草稿，不会显示在网页中。</p>\n<p><strong>_posts</strong> 中是发布的文章，会显示在网页中。</p>\n<h1 id=\"运行博客项目\"><a href=\"#运行博客项目\" class=\"headerlink\" title=\"运行博客项目\"></a>运行博客项目</h1><p>在控制台输入</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">hexo s</span><br></code></pre></td></tr></table></figure>\n<p>控制台会输出</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-keyword\">INFO</span>  Validating config<br><span class=\"hljs-keyword\">INFO</span>  <span class=\"hljs-keyword\">Start</span> processing<br><span class=\"hljs-keyword\">INFO</span>  Hexo <span class=\"hljs-keyword\">is</span> running at http://localhost:<span class=\"hljs-number\">4000</span>/ . Press Ctrl+C <span class=\"hljs-keyword\">to</span> stop.<br></code></pre></td></tr></table></figure>\n<p>这时候去浏览器访问<code>http://localhost:4000/</code> 就可以看到搭建好的博客网站了。</p>\n<h1 id=\"上传新文章\"><a href=\"#上传新文章\" class=\"headerlink\" title=\"上传新文章\"></a>上传新文章</h1><p>上传新文章有两种方式</p>\n<ul>\n<li><p>一种是直接将以往的md文件放置在 <code>source/_posts</code> 目录中。</p>\n</li>\n<li><p>使用命令</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">hexo <span class=\"hljs-keyword\">new</span> [layout] &lt;<span class=\"hljs-built_in\">title</span>&gt;<br></code></pre></td></tr></table></figure>\n<p>比如</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livecodeserver\">hexo <span class=\"hljs-built_in\">new</span> <span class=\"hljs-built_in\">post</span> 测试文章<br></code></pre></td></tr></table></figure>\n<p>上面的语句会在<code>source/_posts/</code>中生成一个名为 <code>测试文件.md</code>的文件，在这个文件中正常写文章就可以发布在网站上了。</p>\n<p>到这里，搭建博客需要的东西就已经准备完成了。</p>\n</li>\n</ul>\n<h1 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h1><p>如果觉得博客自带的主题不好看，可以使用别人制作好的主题，本网站使用了Fluid的主题。</p>\n<p><a href=\"https://hexo.fluid-dev.com/\">Fluid主题官网</a></p>\n<h2 id=\"安装fluid主题步骤\"><a href=\"#安装fluid主题步骤\" class=\"headerlink\" title=\"安装fluid主题步骤\"></a>安装fluid主题步骤</h2><p>以下步骤来源于fluid官方文档</p>\n<ol>\n<li><p>安装主题</p>\n<p> 进入博客目录，执行命令：</p>\n <figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\">npm install <span class=\"hljs-comment\">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure>\n<p> 然后在博客目录下创建<code> _config.fluid.yml</code>，将主题的 <a href=\"https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml\">_config.yml</a>内容复制过去。</p>\n</li>\n<li><p>修改配置文件</p>\n<p> 如下修改 Hexo 博客目录中的 _config.yml：</p>\n <figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">theme:</span> fluid  <span class=\"hljs-meta\"># 指定主题</span><br><span class=\"hljs-symbol\">language:</span> <span class=\"hljs-built_in\">zh</span>-CN  <span class=\"hljs-meta\"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure></li>\n<li><p>创建关于页</p>\n<p> 首次使用主题的「关于页」需要手动创建：</p>\n <figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\">hexo <span class=\"hljs-keyword\">new</span> page about<br></code></pre></td></tr></table></figure>\n<p> 创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p>\n<p> 修改后的文件示例如下：</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">标题</span><br><span class=\"hljs-attr\">layout:</span> <span class=\"hljs-string\">about</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-meta\"></span><br><span class=\"hljs-string\">这里写关于页的正文，支持</span> <span class=\"hljs-string\">Markdown,</span> <span class=\"hljs-string\">HTML</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>layout: about 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"部署到github-page\"><a href=\"#部署到github-page\" class=\"headerlink\" title=\"部署到github page\"></a>部署到github page</h1><p>部署到github有两种方式，一种是把文件部署到github上，还有一种是一键部署，如果不想将源代码放到github上，可以选择一键部署。<br>本博客使用文件部署的方式。</p>\n<ol>\n<li><p>创建GitHub仓库</p>\n<p>在github上新建仓库，命名方式为  <code>username.github.io</code></p>\n<blockquote>\n<p>需要注意的是，仓库名称必须为<code>username</code>开头，不然仓库不会识别。</p>\n</blockquote>\n</li>\n<li><p>将本地文件push到仓库中</p>\n<blockquote>\n<p><code>public/</code>文件夹除外</p>\n</blockquote>\n</li>\n<li><p>查看本地的node.js版本<br>查询代码如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\"><span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">--version</span><br></code></pre></td></tr></table></figure>\n<p>记住当前电脑上的node版本</p>\n</li>\n<li><p>在储存库中建立 .github&#x2F;workflows&#x2F;pages.yml，并填入以下内容 (将 20 替换为上个步骤中记下的版本)</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Pages</span><br><br><span class=\"hljs-attr\">on:</span><br><span class=\"hljs-attr\">push:</span><br>    <span class=\"hljs-attr\">branches:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">main</span> <span class=\"hljs-comment\"># default branch</span><br><br><span class=\"hljs-attr\">jobs:</span><br><span class=\"hljs-attr\">build:</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">steps:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v4</span><br>        <span class=\"hljs-attr\">with:</span><br>        <span class=\"hljs-attr\">token:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">secrets.GITHUB_TOKEN</span> <span class=\"hljs-string\">&#125;&#125;</span><br>        <span class=\"hljs-comment\"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span><br>        <span class=\"hljs-attr\">submodules:</span> <span class=\"hljs-string\">recursive</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Use</span> <span class=\"hljs-string\">Node.js</span> <span class=\"hljs-number\">20</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v4</span><br>        <span class=\"hljs-attr\">with:</span><br>        <span class=\"hljs-comment\"># Examples: 20, 18.19, &gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node</span><br>        <span class=\"hljs-comment\"># Ref: https://github.com/actions/setup-node#supported-version-syntax</span><br>        <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">&quot;20&quot;</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Cache</span> <span class=\"hljs-string\">NPM</span> <span class=\"hljs-string\">dependencies</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/cache@v4</span><br>        <span class=\"hljs-attr\">with:</span><br>        <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">node_modules</span><br>        <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">runner.OS</span> <span class=\"hljs-string\">&#125;&#125;-npm-cache</span><br>        <span class=\"hljs-attr\">restore-keys:</span> <span class=\"hljs-string\">|</span><br><span class=\"hljs-string\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span><br><span class=\"hljs-string\"></span>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span> <span class=\"hljs-string\">Dependencies</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Build</span><br>        <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Upload</span> <span class=\"hljs-string\">Pages</span> <span class=\"hljs-string\">artifact</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/upload-pages-artifact@v3</span><br>        <span class=\"hljs-attr\">with:</span><br>        <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">./public</span><br><span class=\"hljs-attr\">deploy:</span><br>    <span class=\"hljs-attr\">needs:</span> <span class=\"hljs-string\">build</span><br>    <span class=\"hljs-attr\">permissions:</span><br>    <span class=\"hljs-attr\">pages:</span> <span class=\"hljs-string\">write</span><br>    <span class=\"hljs-attr\">id-token:</span> <span class=\"hljs-string\">write</span><br>    <span class=\"hljs-attr\">environment:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">github-pages</span><br>    <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">$&#123;&#123;</span> <span class=\"hljs-string\">steps.deployment.outputs.page_url</span> <span class=\"hljs-string\">&#125;&#125;</span><br>    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span><br>    <span class=\"hljs-attr\">steps:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">GitHub</span> <span class=\"hljs-string\">Pages</span><br>        <span class=\"hljs-attr\">id:</span> <span class=\"hljs-string\">deployment</span><br>        <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/deploy-pages@v4</span><br></code></pre></td></tr></table></figure>\n<p> 其中<code>name: Use Node.js 20</code>这里的20替换成上面查询到的版本号，比如查询到的版本号为<code>20.13.1</code>,在此处为<code>name: Use Node.js 20.13.1</code></p>\n</li>\n<li><p>在储存库中前往 <code>Settings &gt; Pages &gt; Source</code> 。 将 <code>source</code> 更改为 <code>GitHub Actions</code>，然后保存。</p>\n</li>\n<li><p>部署完成，等待系统构建</p>\n</li>\n<li><p>访问 <code>username.github.io</code>查看网页</p>\n<blockquote>\n<p>假设你的用户名是：<code>zhangsan</code>，那你的仓库名称应该为<code>zhangsan.github.io</code>,最终访问的网址也是这个。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>本教程详细介绍了如何利用Hexo这个静态博客生成器，结合GitHub Pages的免费托管服务，快速搭建一个属于自己的个人博客。通过简单的几步操作，即使是新手也能拥有一个美观、功能强大的博客。</p>\n"},{"title":"免费激活office 2024 LTSC 增强版","date":"2024-12-02T03:11:13.000Z","_content":"# 免费激活Office 2024 LTSC 专业增强版\n\n1、 下载office软件安装工具\n\n下载链接\n\n```\nhttps://www.microsoft.com/en-us/download/details.aspx?id=49117\n```\n\n![alt text](images/免费激活office-2024-LTSC-增强版/image.png)\n\n2、 下载配置文件\n\n下载链接\n\n```\nhttps://config.office.com/deploymentsettings\n```\n\n进入页面后，先配置左侧部署设置，其中\n\n* 产品/Office套件 选择`Office LTSC Professional Plus 2024 - Volume License`\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-1.png)\n* 应用中的选项根据自己的需要选，选的越多，下载时间越长（废话）\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-3.png)\n* 更新和升级选项 中 选择 `Office内容分发网络(CDN)`\n* 如果以前安装过其他版本的Office,建议将`卸载所有 Office MSI 版本，包括 Visio 和 Project`开启\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-2.png)\n* 授权和激活/产品密钥 选择 `KMS`\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-4.png)\n* 其他选项根据自己的需要选择即可\n* 所有的选择的完成以后，点击完成\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-5.png)\n* 导出配置文件,两个导出按钮都可以\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-6.png)\n* 默认格式选择 `保留当前设置` 或者 `Office Open XAML 格式` 都可以\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-7.png)\n* 导出配置文件，配置文件名最好不要使用中文\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-8.png)\n\n3、 安装\n新建一个文件夹，最好路径不要包含中文，将下载好的`officedeploymenttool_18129-20030.exe` 和 `配置文件` 放在新建的文件夹中。\n![alt text](images/免费激活office-2024-LTSC-增强版/image-9.png)\n\n* 双击 `officedeploymenttool_18129-20030.exe` ，勾选左侧的选择框，然后点击右侧的Continue按钮\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-10.png)\n  点击按钮之后，会让你选择文件夹，就选择刚刚新建的文件夹就行，之后会在文件夹中生成安装文件\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-11.png)\n* 用管理员权限运行 `cmd`\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-12.png)\n\n使用以下命令\n\n```\ncd [path]\n```\n\n[path]为刚刚新建的文件夹的路径，比如在 `C:\\Users\\Eric\\Desktop\\office 2024` ,则命令为\n\n```\ncd C:\\Users\\Eric\\Desktop\\office 2024\n```\n\n![alt text](images/免费激活office-2024-LTSC-增强版/image-13.png)\n\n继续使用以下命令安装office\n\n```\nsetup /configure config.xml\n```\n\n就会出现安装界面\n\n![alt text](images/免费激活office-2024-LTSC-增强版/image-14.png)\n\n等待安装完成即可。\n\n不出意外的话，安装完成以后，你的Office就已经处于激活状态了。\n如果出了意外，没有激活的话，继续在命令控制台执行以下命令\n\n```\ncd C:\\Program Files\\Microsoft Office\\Office16\ncscript ospp.vbs /sethst:kms.03k.org \ncscript ospp.vbs /act\n```\n\n> 需要注意的事，如果你安装的是32位的话，第一行的命令需要换成 `cd C:\\Program Files (x86)\\Microsoft Office\\Office16 `\n\n执行到这里，Office就已经激活了，可以正常使用！！\n![alt text](images/免费激活office-2024-LTSC-增强版/image-15.png)\n","source":"_posts/免费激活office-2024-LTSC-增强版.md","raw":"---\ntitle: 免费激活office 2024 LTSC 增强版\ntags:\n  - office\n  - 激活\ncategories:\n  - 工具\ndate: 2024-12-02 11:11:13\n---\n# 免费激活Office 2024 LTSC 专业增强版\n\n1、 下载office软件安装工具\n\n下载链接\n\n```\nhttps://www.microsoft.com/en-us/download/details.aspx?id=49117\n```\n\n![alt text](images/免费激活office-2024-LTSC-增强版/image.png)\n\n2、 下载配置文件\n\n下载链接\n\n```\nhttps://config.office.com/deploymentsettings\n```\n\n进入页面后，先配置左侧部署设置，其中\n\n* 产品/Office套件 选择`Office LTSC Professional Plus 2024 - Volume License`\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-1.png)\n* 应用中的选项根据自己的需要选，选的越多，下载时间越长（废话）\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-3.png)\n* 更新和升级选项 中 选择 `Office内容分发网络(CDN)`\n* 如果以前安装过其他版本的Office,建议将`卸载所有 Office MSI 版本，包括 Visio 和 Project`开启\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-2.png)\n* 授权和激活/产品密钥 选择 `KMS`\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-4.png)\n* 其他选项根据自己的需要选择即可\n* 所有的选择的完成以后，点击完成\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-5.png)\n* 导出配置文件,两个导出按钮都可以\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-6.png)\n* 默认格式选择 `保留当前设置` 或者 `Office Open XAML 格式` 都可以\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-7.png)\n* 导出配置文件，配置文件名最好不要使用中文\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-8.png)\n\n3、 安装\n新建一个文件夹，最好路径不要包含中文，将下载好的`officedeploymenttool_18129-20030.exe` 和 `配置文件` 放在新建的文件夹中。\n![alt text](images/免费激活office-2024-LTSC-增强版/image-9.png)\n\n* 双击 `officedeploymenttool_18129-20030.exe` ，勾选左侧的选择框，然后点击右侧的Continue按钮\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-10.png)\n  点击按钮之后，会让你选择文件夹，就选择刚刚新建的文件夹就行，之后会在文件夹中生成安装文件\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-11.png)\n* 用管理员权限运行 `cmd`\n  ![alt text](images/免费激活office-2024-LTSC-增强版/image-12.png)\n\n使用以下命令\n\n```\ncd [path]\n```\n\n[path]为刚刚新建的文件夹的路径，比如在 `C:\\Users\\Eric\\Desktop\\office 2024` ,则命令为\n\n```\ncd C:\\Users\\Eric\\Desktop\\office 2024\n```\n\n![alt text](images/免费激活office-2024-LTSC-增强版/image-13.png)\n\n继续使用以下命令安装office\n\n```\nsetup /configure config.xml\n```\n\n就会出现安装界面\n\n![alt text](images/免费激活office-2024-LTSC-增强版/image-14.png)\n\n等待安装完成即可。\n\n不出意外的话，安装完成以后，你的Office就已经处于激活状态了。\n如果出了意外，没有激活的话，继续在命令控制台执行以下命令\n\n```\ncd C:\\Program Files\\Microsoft Office\\Office16\ncscript ospp.vbs /sethst:kms.03k.org \ncscript ospp.vbs /act\n```\n\n> 需要注意的事，如果你安装的是32位的话，第一行的命令需要换成 `cd C:\\Program Files (x86)\\Microsoft Office\\Office16 `\n\n执行到这里，Office就已经激活了，可以正常使用！！\n![alt text](images/免费激活office-2024-LTSC-增强版/image-15.png)\n","slug":"免费激活office-2024-LTSC-增强版","published":1,"updated":"2024-12-02T03:14:22.864Z","comments":1,"layout":"post","photos":[],"_id":"cm46gjx9m0000dwv43gh1gwq4","content":"<h1 id=\"免费激活Office-2024-LTSC-专业增强版\"><a href=\"#免费激活Office-2024-LTSC-专业增强版\" class=\"headerlink\" title=\"免费激活Office 2024 LTSC 专业增强版\"></a>免费激活Office 2024 LTSC 专业增强版</h1><p>1、 下载office软件安装工具</p>\n<p>下载链接</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">https:<span class=\"hljs-regexp\">//</span>www.microsoft.com<span class=\"hljs-regexp\">/en-us/</span>download/details.aspx?id=<span class=\"hljs-number\">49117</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image.png\" alt=\"alt text\"></p>\n<p>2、 下载配置文件</p>\n<p>下载链接</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">https:</span><span class=\"hljs-comment\">//config.office.com/deploymentsettings</span><br></code></pre></td></tr></table></figure>\n\n<p>进入页面后，先配置左侧部署设置，其中</p>\n<ul>\n<li>产品&#x2F;Office套件 选择<code>Office LTSC Professional Plus 2024 - Volume License</code><br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-1.png\" alt=\"alt text\"></li>\n<li>应用中的选项根据自己的需要选，选的越多，下载时间越长（废话）<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-3.png\" alt=\"alt text\"></li>\n<li>更新和升级选项 中 选择 <code>Office内容分发网络(CDN)</code></li>\n<li>如果以前安装过其他版本的Office,建议将<code>卸载所有 Office MSI 版本，包括 Visio 和 Project</code>开启<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-2.png\" alt=\"alt text\"></li>\n<li>授权和激活&#x2F;产品密钥 选择 <code>KMS</code><br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-4.png\" alt=\"alt text\"></li>\n<li>其他选项根据自己的需要选择即可</li>\n<li>所有的选择的完成以后，点击完成<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-5.png\" alt=\"alt text\"></li>\n<li>导出配置文件,两个导出按钮都可以<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-6.png\" alt=\"alt text\"></li>\n<li>默认格式选择 <code>保留当前设置</code> 或者 <code>Office Open XAML 格式</code> 都可以<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-7.png\" alt=\"alt text\"></li>\n<li>导出配置文件，配置文件名最好不要使用中文<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-8.png\" alt=\"alt text\"></li>\n</ul>\n<p>3、 安装<br>新建一个文件夹，最好路径不要包含中文，将下载好的<code>officedeploymenttool_18129-20030.exe</code> 和 <code>配置文件</code> 放在新建的文件夹中。<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-9.png\" alt=\"alt text\"></p>\n<ul>\n<li>双击 <code>officedeploymenttool_18129-20030.exe</code> ，勾选左侧的选择框，然后点击右侧的Continue按钮<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-10.png\" alt=\"alt text\"><br>点击按钮之后，会让你选择文件夹，就选择刚刚新建的文件夹就行，之后会在文件夹中生成安装文件<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-11.png\" alt=\"alt text\"></li>\n<li>用管理员权限运行 <code>cmd</code><br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-12.png\" alt=\"alt text\"></li>\n</ul>\n<p>使用以下命令</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dos\"><span class=\"hljs-built_in\">cd</span> [<span class=\"hljs-built_in\">path</span>]<br></code></pre></td></tr></table></figure>\n\n<p>[path]为刚刚新建的文件夹的路径，比如在 <code>C:\\Users\\Eric\\Desktop\\office 2024</code> ,则命令为</p>\n<figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs moonscript\">cd <span class=\"hljs-name\">C</span>:\\Users\\Eric\\Desktop\\office <span class=\"hljs-number\">2024</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-13.png\" alt=\"alt text\"></p>\n<p>继续使用以下命令安装office</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">setup /configure config.xml<br></code></pre></td></tr></table></figure>\n\n<p>就会出现安装界面</p>\n<p><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-14.png\" alt=\"alt text\"></p>\n<p>等待安装完成即可。</p>\n<p>不出意外的话，安装完成以后，你的Office就已经处于激活状态了。<br>如果出了意外，没有激活的话，继续在命令控制台执行以下命令</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\"><span class=\"hljs-keyword\">cd</span> C:\\<span class=\"hljs-keyword\">Program</span> Files\\Microsoft Office\\Office16<br><span class=\"hljs-keyword\">cscript</span> ospp.vbs /sethst:kms.03k.org <br><span class=\"hljs-keyword\">cscript</span> ospp.vbs /act<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>需要注意的事，如果你安装的是32位的话，第一行的命令需要换成 <code>cd C:\\Program Files (x86)\\Microsoft Office\\Office16 </code></p>\n</blockquote>\n<p>执行到这里，Office就已经激活了，可以正常使用！！<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-15.png\" alt=\"alt text\"></p>\n","excerpt":"","more":"<h1 id=\"免费激活Office-2024-LTSC-专业增强版\"><a href=\"#免费激活Office-2024-LTSC-专业增强版\" class=\"headerlink\" title=\"免费激活Office 2024 LTSC 专业增强版\"></a>免费激活Office 2024 LTSC 专业增强版</h1><p>1、 下载office软件安装工具</p>\n<p>下载链接</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">https:<span class=\"hljs-regexp\">//</span>www.microsoft.com<span class=\"hljs-regexp\">/en-us/</span>download/details.aspx?id=<span class=\"hljs-number\">49117</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image.png\" alt=\"alt text\"></p>\n<p>2、 下载配置文件</p>\n<p>下载链接</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">https:</span><span class=\"hljs-comment\">//config.office.com/deploymentsettings</span><br></code></pre></td></tr></table></figure>\n\n<p>进入页面后，先配置左侧部署设置，其中</p>\n<ul>\n<li>产品&#x2F;Office套件 选择<code>Office LTSC Professional Plus 2024 - Volume License</code><br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-1.png\" alt=\"alt text\"></li>\n<li>应用中的选项根据自己的需要选，选的越多，下载时间越长（废话）<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-3.png\" alt=\"alt text\"></li>\n<li>更新和升级选项 中 选择 <code>Office内容分发网络(CDN)</code></li>\n<li>如果以前安装过其他版本的Office,建议将<code>卸载所有 Office MSI 版本，包括 Visio 和 Project</code>开启<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-2.png\" alt=\"alt text\"></li>\n<li>授权和激活&#x2F;产品密钥 选择 <code>KMS</code><br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-4.png\" alt=\"alt text\"></li>\n<li>其他选项根据自己的需要选择即可</li>\n<li>所有的选择的完成以后，点击完成<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-5.png\" alt=\"alt text\"></li>\n<li>导出配置文件,两个导出按钮都可以<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-6.png\" alt=\"alt text\"></li>\n<li>默认格式选择 <code>保留当前设置</code> 或者 <code>Office Open XAML 格式</code> 都可以<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-7.png\" alt=\"alt text\"></li>\n<li>导出配置文件，配置文件名最好不要使用中文<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-8.png\" alt=\"alt text\"></li>\n</ul>\n<p>3、 安装<br>新建一个文件夹，最好路径不要包含中文，将下载好的<code>officedeploymenttool_18129-20030.exe</code> 和 <code>配置文件</code> 放在新建的文件夹中。<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-9.png\" alt=\"alt text\"></p>\n<ul>\n<li>双击 <code>officedeploymenttool_18129-20030.exe</code> ，勾选左侧的选择框，然后点击右侧的Continue按钮<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-10.png\" alt=\"alt text\"><br>点击按钮之后，会让你选择文件夹，就选择刚刚新建的文件夹就行，之后会在文件夹中生成安装文件<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-11.png\" alt=\"alt text\"></li>\n<li>用管理员权限运行 <code>cmd</code><br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-12.png\" alt=\"alt text\"></li>\n</ul>\n<p>使用以下命令</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dos\"><span class=\"hljs-built_in\">cd</span> [<span class=\"hljs-built_in\">path</span>]<br></code></pre></td></tr></table></figure>\n\n<p>[path]为刚刚新建的文件夹的路径，比如在 <code>C:\\Users\\Eric\\Desktop\\office 2024</code> ,则命令为</p>\n<figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs moonscript\">cd <span class=\"hljs-name\">C</span>:\\Users\\Eric\\Desktop\\office <span class=\"hljs-number\">2024</span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-13.png\" alt=\"alt text\"></p>\n<p>继续使用以下命令安装office</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">setup /configure config.xml<br></code></pre></td></tr></table></figure>\n\n<p>就会出现安装界面</p>\n<p><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-14.png\" alt=\"alt text\"></p>\n<p>等待安装完成即可。</p>\n<p>不出意外的话，安装完成以后，你的Office就已经处于激活状态了。<br>如果出了意外，没有激活的话，继续在命令控制台执行以下命令</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\"><span class=\"hljs-keyword\">cd</span> C:\\<span class=\"hljs-keyword\">Program</span> Files\\Microsoft Office\\Office16<br><span class=\"hljs-keyword\">cscript</span> ospp.vbs /sethst:kms.03k.org <br><span class=\"hljs-keyword\">cscript</span> ospp.vbs /act<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>需要注意的事，如果你安装的是32位的话，第一行的命令需要换成 <code>cd C:\\Program Files (x86)\\Microsoft Office\\Office16 </code></p>\n</blockquote>\n<p>执行到这里，Office就已经激活了，可以正常使用！！<br><img src=\"/images/%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BBoffice-2024-LTSC-%E5%A2%9E%E5%BC%BA%E7%89%88/image-15.png\" alt=\"alt text\"></p>\n"},{"title":"江湖秘本之英耀篇","date":"2024-12-02T08:37:54.000Z","_content":"\n偶然在网上看到了一本奇书，名曰《英耀篇》，上面说的东西对于人心的揣测比较精准，英耀赋或英耀篇是江湖术士看相的口诀。“英”是神，“耀”是捉，故此，“英耀”其实等于捉用神，江湖术士看相的首要伎俩，就是捉用神也。\n\n值得学习，全文背诵。\n\n以下是原文：\n\n```\n入门先观来意，既开言切莫踌躇，天来问追欲追贵，追来问天为天忧。 八问追，喜者欲凭子贵，怨者实为生孙近古。 叠叠问此件，定然此件缺，频频问原因，其中定有因。 一片真诚，百说慕名求教，此人乃是一哥，笑问看我贱相如何？此人若非火底就是畜生。\n\n砂砾丛中辨金石，衣冠队内别鱼龙，僧道纵清高不忘利欲，庙廊之士志在山林， 初贵者志极高超，久困者志无远大，聪明之子家业常寒，百拙之夫财终不匮。 眉精眼锐，白手兴家之人，碌碌无能，终生工水之辈。 破落户穷极不离鞋袜，初发家初起好炫金饰。 神暗额光，不是孤孀亦弃妇，妖婆媚笑，倘非花底定宠姬。 满口好对好，久居高位，连声是是是，出身卑微。\n\n面带笑容，而心神不定，家有祸争，招子闪烁，而故作安祥，祸发自身。 好勇斗狠，多遭横祸。怯懦无能，常受人欺。 志大才疏，终生咄咄空抱恨。才偏性执，不遭大祸亦奇穷。 治世重文学之臣，乱世发草莽英雄。通商大邑竞工商，穷乡僻壤争林田。\n\n急打慢千，轻敲响卖，隆卖齐施，敲打审千并用， 十千九响，十隆十成，敲其天，而推其比，审其一而知其三， 一敲即应，不妨打蛇随棍上，再敲不吐，何仿拨草寻蛇， 先千后隆，无往不利，有千无隆，帝寿之材， 故曰无千不响，无隆不成，学者可执其端，而理其绪，举一隅而知三隅， 随机应变，鬼神莫测，分寸己定，任意纵横，慎重传人，不出帝寿，斯篇玩熟，定教四海扬名。\n\n入门先观来意，出言先要拿心。先千后隆，乃兵家之妙法。轻敲响卖，是江湖之秘宗。 有问不可迟答，无言切勿先声。谈男命，先千后隆，谈女命，先隆后千。人人后运好，个个子孙贤。 三五成群，须防有假。嘻呵成，必定无心。 来意殷勤，前运必非好景。言词高傲，近来必定佳途。\n\n言不可多，言多必败。千不可极，千极必隆。 父年高而母年细，定必偏生庶出。己年细妻年高，当然苟合私逃。 子年与妻年仿佛，非填房定偏室坐正。父年与己年相等，不是过继定螟蛉。 老年问子，虽多亦寡，忧愁可断。少年问子，虽有亦女，立即分清。 早娶妻之人，父业可卜。迟立室者，祖业凋零。 当家早，父必先丧。当家迟，父命延长。 少年问亲娘，有病在牙床。老父问娇儿，定必子孙稀。\n\n来意神清，定必无心谈事。出言心乱，定当有意问灾凶。 少年过于奢华，其人必然浪子。老人过于朴实，此辈定是愚人。 年嫩志诚，千金可托之肖子。老来白霍，万事无成之鄙夫。 男儿问娼女，此乃终日谈烟花之俗子。妇人问翁姑，其人固念病体忧愁之贤女。 男人身配独锁匙，未断有室。妇人襟头常带乳，不是无儿。\n\n气滞神枯，斯人现困境，谋事十谋九凶。色润声高，此子近处吉祥，十成九就。 入门两目流连，必多心而无专一。身摇浪定，定小相而带轻浮。 衣服朴而洁，铜匙坠带，生意场中之能人，可卜权衡早创。 履华而整，银圆满袋，游乐场上之浪子，当决家业将倾。 田园近有，定卜先贫而后富。家业变尽，必然先富后贫。\n\n少年赞他寿长，老人许加福泽。 恶人勿言恶，只许傍借而此，隆千齐下。善人当言善，反正而说福寿同施。 中年发业兴家，此人善营善作。老来一筹莫展，是老失运失时。远客异方，祖宗每多富贵。近营内地，可断兄弟贫穷。\n\n小人宜以正直义气隆他，万无一失。君子当以诚谨俭让临之，百次皆同。 得英切勿尽吐，该防真里有假。失英最忌即兜，留心实内藏虚。 见水切宜用意，不可露轻视鄙贱之心。过火理当谨慎，最好看定方向开言。 刚柔并用，拷夹齐施，有千有隆。携琴祖宗有隆有千，火响连天。 坐立顶正大，言语要庄严，军马不可尽出，声气定要相连。 淡定吞吐，得意不宜再往。言词锋利、失之不可复言。声响视正君子相，目横语乱小人形。\n\n男女同来，分清老少亲戚方可断。单身再问，审定方向形势始能言。 寡妇询去留，定思重配。老媪多叹息，受屈难言。 病询自身，虽佑亦宜慢泄。老询寿元，未可即断死亡。 有子而寡，宜劝守节，将来必有好景。无儿问去，当要著其别栖为高。\n\n此乃看其人之年岁为立言。童儿身上，反复追寻，前儿难养。老大问自身，查寿元，现有病符。 瞻前顾后，必当高声唱问，以定其身。拉衣牵裙，定要暗里藏讥，以求其实。\n\n十六七之少女问男，春情己动，异性亦然。 五六十之老翁问女，冬雪既降，同偶何嫌。 因人情而谈世故，忖心理以顺开言。俏遇硬鼻高头，千中带夹。\n\n不受则隆。隆而吐则可，不吐连消带打，高声呼喝。千他古运将来，使其惊心动魄，言语要真诚。 若逢低首浅笑，隆中带打，不声则千。千而吐则可，不吐要逐路微拷。 低语讲话，隆其苦尽甘来，使其扬眉喜气，言语要温柔。\n\n男子入门，志气轩昂，袒胸露臂，高谈雄辩，非军政之徒定是捞家之辈。每要留心讲解，恐失言以招灾。 女子进来，言柔步淡，低头羞答，非闺秀之人，定名门之女，为势必听。我军马须从容，旁敲侧引。 视同来而眨眼，恐非有意寻求。对自己作疏言，未必无心试探。非得真英，不可落军马。须防马失前蹄。\n\n眼观四面，耳听八方，坐立必要端方。军马出须坚定，切忌浮言乱言，又忌俗语虚言。 先用人品涤荡一番，英耀未到，军马单刀直入，自然马到功成。\n\n但论叩经叩策之法，如官府升堂审案，必要寻根寻鸿。 一层一层，至紧深究根底。祸福此法，如入大座高楼，由浅入深，由轻至重。大概论之。 至紧问自身日后，次开谋望新花，次家宅占病，亦宜挨入自身可决。\n\n断自身之法，人生品行，一世好运丑运，可为议论。亦要在自身入脉，可能知得内里因由。 大约之法，如行兵调将，务要随机应变，仔细留心，不能一概而论。真乃变化无穷也。\n\n古人云，出人头地，须用苦心。工夫后学必要常常念熟，自有进步。 书云，学而不思则妄，思而不学则怠。凡间更新守旧，必定夹定男女。\n\n若男问必生意打工求财。若女问恐入八复飞。必要一一夹清。 见生意，启军马，必须镇定。\n\n贪者必贪，君子引为大戒，佛门亦为五戒之首，故做阿宝者的罪过，咎不在相而在一。\n\n贪官者，民贼也，好商者，民橐也，豪强者，民之虎狼也， 其或以知欺愚，恃强凌弱，欺人孤寡，谋人财产，此皆不义之财也， 不义之财理无久享，不报自身，亦报儿孙，不义之财，人人皆得而取之， 故曰做阿宝者，非千也，愿天之罚而已。\n\n凡做阿宝，博观而取之，慎始更慎终，未算其利，先防其弊，未置梗媒，先放生媒， 故善为相者，取之不竭其力，不伤其根，上顺天理，下怏人心，并使之有所畏怯而不敢言。 不善相者，竭一之力，伤之一内，取非不义之财，上违天理，下招人怨，非吾徒也，小子鸣鼓而攻之可也！\n\n凡一皆可札飞也，君子敬鬼神而远之，小人畏神鬼而陷之， 或求妻财子禄，或畏疾病灾祸，非有所惧，即有所求， 察其所惧，观其所求，而善用军马，则一无不唯命是从，故曰：“我求他，不能他求我。”\n\n札飞之术，贵在多方，幻其真耶，神化莫测， 小验然后大响，众信而后大成，鬼神无凭，唯人是依。 一犬吠形，百犬吠声，众口烁金，曾参杀人，虽明智之士齐所疑惑，何况一哉。 善为相者，莫不善用甲媒，故曰：“无媒不响，无媒不成。”\n```\n\n\n逐句释义：\n\n```\n入门先观来意，既开言切莫踌躇。\n（求卦问卜的人一进来，一定要凭着他的衣着相貌、言行举止，洞察他来算命的主旨，明了他心里在想些什么，怀着什么样的动机来求教于你。在这一点弄清之前，你先不能轻易发表言论。一旦认准了对方意图，觉得判断无误，就不应犹豫，迟疑不决。相命先生开口，最忌彷徨不定，吞吞吐吐。这种欲言又止的神态，会让人认为你连自己都缺乏自信，更不能取信于他人了。所以“切莫踌躇”，踌躇意味着信誉的消失，失去了吸引求测者并控制对方的基础力量。根据经验，对方进门之后，先不要轻易下结论，可装模作样排出八字，念念有词如子丑寅卯之类，一副老谋深算的样子，然后——啪！开口三句话就让他怵立当场，惊为神人。替人相命，命师的头三句话是至关重要的，如果三句话至少对了两句，你就牢牢抓住了对方，对方哪有不举白旗的）\n \n天（父）来问追（子）欲追贵，追来问天为天忧。\n（父亲问儿女，个人希望儿女有个好的前途，望子成龙，盼子富贵；或者儿女学习不佳，或者儿女早恋影响学业，或者儿女谈了恋爱做父亲的不太喜欢这个未来的儿媳或女婿等；或者儿女生意蚀了本，看今后如何；或者儿女出门在外，是否平安等。子来问父母，无外乎父母当官，能否再升；父母贪污受贿，会不会翻船；父母生病，病情结果如何；父母官非，能否化解，总之多数是有病有灾等不祥之光。以上诸等，若不能明确揣摩出来，不得已再运用“哄、吓、诈”三招，对方哪有不据实以言的，剩下的事情就好办多了。）\n \n八（妻）问七（夫），喜者欲凭七贵，怨者实为七愁。七问八，非八有事，定然子息艰难。\n（老婆问老公，无外乎老公前程如何，官运如何，财运如何，在外嫖妓或养小情妇等如何，或下岗后职业如何等。其实女人最好哄了，往好的方面去说，坏事也能变成好事。比如他官运亨通，财运大发等，或在外有女人是好事，不然您会被克死等；或老公蚀了财或遇小人等等东拉西扯，随机应变，越说越象真的。妻问其夫，如果满面带喜兴冲冲而来，那她的丈夫可能有官运、有福禄或横财，至少她希望如此，满面愁容而带怨气者，肯定是为“七愁”之事而来：无子、淫佚、不事父母公姑、口舌多言、盗窃、妒忌、恶疾。夫问妻，多数情况是问生子、淫行、恶疾、是不是要离婚等事。）\n     \n士子问前程，生孙（商贾）为近古（近况好不好）。     \n（读书人来问命算卦，多半是为了功名前程，希望有飞黄腾达之日，光宗耀祖之时；商人来问卜，则因为近来生意不好的缘故。怎样进一步判断这些人的来意呢，就是抓其特征，见下）\n \n叠叠问此事，定然此事缺；频频问原因，其中定有因。\n（以上四句，“百姓日用而不知”，真是令人拍案叫绝！一个叠叠，一个频频，已把求卜者的急切心情和盘手托出，他们所问的，正是他们心事所在。他们所希望的，正是他们所缺少的！他们想探询寻找出原因来，那么这里面定然有名堂。你相命的，就要在上面做文章，牢牢地吸引诱惑住来问者。）\n \n一片真诚，自说慕名求教，此人乃是“一哥”。笑问请看我贱相何如？此人非火底（有权有势的人物），即是“畜生”！砂砾丛中辨金石，衣冠队里排鱼龙（下缺四句）。\n \n（还要善于区分下面两种人：如果脸上一片真诚之色，自己介绍说，是慕我前来求卜问卦者，这种人多数是信神信命信卦的“一哥”——即虔诚的问卜求卦者。如果满口浅笑，装模作样，故意说请问我的贱相如何，那么，这种人不是有钱有势的人，就是专门来向你挑衅、捣蛋、败坏你声誉的轻薄之徒。在前来算命的人群里，有富贵官宦之人装穷卖傻前来相命，以此考你；也有穷愁潦倒之人，冒充富贵之人前来试你；或者是不怀好意的同行，或者是看了两本命书自认为了不起的家伙别有用心的前来考核你，存心踢馆给你难堪。你一定要在砂砾丛中辨认出是金还是石，在一大群前来相命的人流中识别出是龙还是鱼。不然，就是闹出笑话，丢“周易预测学”的脸。）\n \n僧道从清高，不忘利欲。\n（继续阐述上面的思想观点，教授相命者从更高的层次，即从来人的外表、谈吐、性格特征、心理倾向、命运趋势、人生动态作尽一步识别，洞察他们来问卜求卜的意向。因为没有这种识别和洞察，就无所谓看相算命，所以秘本言犹未尽，不厌其烦，恣意发挥，务求淋漓尽致。因为社会是复杂的，人生是复杂的，仅仅分析父子、夫妻、穷人、富人读书人和“一哥”是远远不够的。文章分析说：和尚、道士尊从为僧道，表在上清高寡欲，脱离凡尘世俗，实际上他们念念不忘的仍是私利欲望。那些“修炼”气功的凡人，那些自鸣清高的教授、学者，那些什么家什么家之类，亦不过都是些利欲之徒。天下人熙熙攘攘，攘攘熙熙，皆在为“名”、“利”二字而已矣）\n \n庙廊达士，志在山林。\n（那些身居高位的达官贵人，统治阶级，为“人民”服务的“父母官”等等，别看嘴面上冠冕堂皇，一心为公，其实个个都很贪婪，希望爵禄更丰，希望以权谋私搞更多的钱而不被察觉。只有真正的开明之士，才有志于功成名就后归隐山林，清白退休。）  \n \n初贵者志极高超，久困者志无远大。  \n（刚风发迹的显贵，考上或正在就读高校者，上党校学习者，或新官上任者，或投机倒把官商勾结而暴发者，他们得志便猖狂，欲望膨胀，飘飘然，器宇轩昂，趾高气扬。而那些屡试不第，穷困潦倒，生意蚀本之人，有才而不被重用者，因为长期压抑不得志，人穷志短，才不会志向远大，欲壑难填。）\n \n聪明之子，家业常寒。\n（聪明的人想出人头地，却常常因为聪明反被聪明，受到社会与同仁排挤，才能得不到重用，反而家境贫寒。）\n \n百拙之夫，财终不匮。\n（笨拙之人，由于他们欲望不高，勤勤恳恳，反而不缺乏生活来源，日子过得自足有余。）\n \n眉精眼细，白手兴家之人。\n（那些眉目前流露出自豪神情，看上去目光远大，精明能干，朴素而带有金银首饰的人，很可能是白手起家的老板。）  \n \n碌碌无能，终身工水（职工、贫穷）之辈。\n（只的那些无能之辈，或不会阿谀奉承、钻营苟苟的家伙，只能当个贫穷的做工人。）\n \n破落户穷极不离鞋袜，新发家初起好炫金饰。\n（那些破落户的特征是：白嫩肉，精神憔悴，衣饰寒酸，仍然穿鞋套袜不打赤脚，现代社会或可能是衣着毕挺，行为做作，腰上皮带是破旧的，脖上领带是皱褶的，脚上皮鞋是破旧或没擦的，领口衬衫是花的，鼻上眼镜片是脏的，腕上的手表是廉价的。那些新发迹的富人特征是：尽管穿着平常如旧，但是喜欢炫耀自己新买来的金玉饰物，人一阔，脸就变，现代社会还有可能是手里捏个大哥大，动辄“喂喂喂”叫个不停，生怕人家不知道他有手机……不管何种表现，总之有意无意地“炫耀”是其特征。）\n \n神暗额光，不是孤孀亦弃妇。妖姿媚笑，倘非花底（妓女）定宠姬。\n（神色黯然，面容愁闷但额头光滑细腻，衣饰华丽的，不是富人的遗孀，就是被抛弃的贵妇，或者不被官员和富商宠幸的情妇。妖冶、放荡、打扮得花枝招展，言笑风骚的，不是红粉妓女，就是官员富商的宠妾、情妇）  \n \n（中缺两句）满口好对好，久居高位；连声是是是，出身卑微。\n（满口“好”或“对”的，他可能身居高位；连声称“是、是、是”的，他可能出生卑微，是个小人物。）  \n \n面带愁容而心神不定，家有祸事。\n（面带愁容而又心神不定，恍恍惚惚，带神经质的，家里一定发生了不幸的事。）\n \n招子（眼睛）闪烁故作安祥，祸发自身。\n（若眼神恍惚不定，言语吞吞吐吐，精神不集中，内心惊慌而又故作镇定，则肯定是他自身干下的恶行而东窗事发了。）\n \n好勇斗狠，多招横死。\n（喜欢惹事生非，逞强好胜，殴斗成性，心狠手毒的人，多半身遭横祸，死于非命。）\n \n怯懦无能，当受人欺。\n（生性怯懦，自视低能的人，一定受人欺侮，终日只能衰声叹气。）\n \n志大才疏，终生咄咄空抱恨。\n（好高骛远，眼高手低，志大才疏的人，一辈子过得很窘迫，活得很累，却只能终身抱恨，郁郁寡欢。）\n \n才偏性执，不遭大祸亦奇穷。\n（才气性情非常偏颇固执，钻牛角尖，撞了南墙亦不回头的人，即使不遭大临头大祸，也会异常贫穷，日子过得十分艰难。）\n \n治世重文学之士，乱世发草泽英雄。\n（如果处于太平盛世，社会稳定繁荣，那么饱学之士或有专业技术之人会得到重用，算卦时须认定这种人是前途远大的。如果处于乱世，则出草莽英雄的居多，暴发户或敛不义之财的居多，比如现在改革开放，大字不识两个的社会流氓，劳改犯等等一个个成了企业家，董事长，黑社会老大等，吾见过有“街娃”起家者，有扒手起家者，有摆凉粉摊起家才者，有走私起家者，有办厂生产伪劣产品起家者，有贩卖假烟起家者……算卦时这一点必须予以考虑。）\n \n通商大邑竞工商，穷乡僻壤争林田。（下缺四句）。\n（如果是商业发达的大城市，其争执纠纷多半是为工商之事而发，如果是在穷乡僻壤发生纷争，多半是为了争夺林田）\n \n急打慢千，轻敲而响卖。\n隆卖齐施，敲打审千并用。\n十千九响，十隆九成。\n敲其大而推其比（兄弟），审其一而知其三。\n一敲即应，不妨打蛇随棍上，再敲不吐，何妨拨草以寻蛇（下缺两句）。\n先千后隆，无往不利；有千无隆，帝寿（愚蠢）之材。\n故曰：无千不响，不隆不成。\n学者可执其端而理其绪，学一隅而知三隅。\n随机应变，鬼神莫测，分寸已定，任意纵横。\n慎重传人，师门不出帝寿，斯篇玩熟，定教四海扬名。\n \n以上一段，讲的是看相算命的诡诈骗术，是全篇的核心部分，也是相士们认为最重要的“秘诀”。它是看相算命过程中的骗术的理论概括。按照“审、敲、打、千、隆、卖”六个字办，相士不仅可以设法掌握被相命者的底细隐私、心理状态，而且可以骗得对方目瞪口呆，佩服得五体投地，心悦诚服地投入你设下的罗网和陷阱。其招数实在是高深莫测，妙不可言。\n \n审：察貎辨色，判分真伪，并从已知推断未知\n敲：旁敲侧击\n打：突然发问，使对方措手不及，仓促间吐露真情\n千：刺激、责骂、恐吓，向要害打击\n隆：赞美、恭维和安慰、鼓励\n卖：掌握对方资料之后，从容不迫地用肯定的语气一一摊出来，使对方惊异和折服\n \n　　“急打慢千”是相命时的基本要领，就是说给人算命时，必须瞅准时机，突然发问，击中要害，陷对方于猝不及防的境地，使对方在仓促时间忘记来时的戒备心理而透露出真情实况。所谓“急打”，要有突发性，打对方一个措手不及，使其无暇自顾，从而瓦解他的心理防线，如此，不愁他不从实招来。所谓“慢千”，就是在获悉对方的“情报”后，要运用恐吓的手段，再给对方以强烈的刺激，使他惊诧、惧怕，担心有大祸临头之感。这样，他自然会求教于你，向你讨教消灾避祸的法术。算命中，对方的担心和忧虑是最好的诱饵，有了这种意思，你就可以牵着他的鼻子悠哉悠哉了。为什么“千”要慢呢？因为你要组织有条理有递进感的一套“军马”（即语言），来打击对方，语调必须做到平稳而有力，切忌急躁和语无伦次，一字一句一板一眼慢慢吐出，威严，阴森可怖，掷地有声，震慑对方的意志，粉碎他的抵抗。\n \n　　“轻敲而响卖”，就是说，在套取对方的情况时，要采取旁敲侧击的手法，不能直敲直槌，敲错地方。一敲就要敲到与对方心事有关联之处，起到敲山震虎的功效，使“虎”叫啸起来，自我暴露隐藏在深处的目标。“响卖”就是经“敲”又揣摩到对方的底细线索后，顺藤摸瓜，以肯定的语气把底牌亮出来，端出已见，使对方大为惊异并且深深地佩服你的高明。所谓“响”，就是一经探明路数，就要毫不犹豫，果断地出击直点对方的“穴位”，牢牢地抓住对方，在对方心中树立你的信念和权威感，由此，你可以左右逢源，条条道路通罗马了。“卖”，也是一种打击，是更深一层的刺激。然而，仅仅有打击和刺激，是不行的，还必须配之以“隆”，就是奉承恭维，夸赞和鼓励，给对方以希望，使他相信时来运转可以消为避祸之说，一切不幸均可化解；使他相信厄运之下，他仍是富贵命，幸运将降福于他。这一点很要紧，一个直到算命终场仍然一脸沮丧的人是不肯把更多的钱交给相命先生的。所以“卖”和“隆”要结合起来加以实施，单有卖，会把对方吓跑。你越是给他看到吉祥如意之光环，他越会乖乖地听你的“调遣”。算命结束，两者皆大欢喜，如若结局不是如此，那就失败了。同样道理，“敲打”、“审千”也必须并用不悖，缺一不可。这样自会“十千九响，十隆九成”。\n \n  \n　　“审、敲、打、千、隆、卖”六个字怎样并用实施呢？就是秘本所述的：“敲其大而推其比（兄弟），审（察颜观色，审时度势）其一而知其三。敲即应，不妨打蛇随棍上，再敲不吐，何妨拨草以寻蛇。”接着，它总结道：“先千后隆，无往不利；有千无隆，帝寿（愚蠢）之材。故曰：无千不响，无隆不成”。最后它强调指出“学者可执其端而理其绪，学一隅而知三隅（即融汇贯通，举一反三），随机应变，鬼神莫测，分寸已定，任意纵横。”\n \n  \n　　把求问者的各种情况都敲清了，又经过“响卖”，这时候就可以“落千”了。“千”，其意不光指“恐吓”，还有一层意思，就是击中对方的要害，抨击其最铭心刻骨之事。如指出他的不幸遭遇，是“千”，抨击世态炎凉，社会的不公，亲戚朋友的背离抛弃，也是“千”。“千”之后要“隆”，要抚慰他，要给他描绘未来。这种预言式、希望式的隆，是给对方一种心理暗示，给予其精神力量。无千就不会有好效果，因为“千”多半是说明和非难过去，“千”得准会使对方依赖你，那么你对未来的“隆”他也就不怀疑了。这就是“无千不响，无隆不成”的道理所在。  \n \n　　“审、敲、打、千、隆、卖”要兼施并用，这实质上是一套高级的算卦骗术。具体怎么运用？江湖术士心中有数，他们或者“千、隆、卖”齐施，或者“敲、打”与“审、千”结合，或者“审、千”与“隆、卖”结合，或者只使用其中的某一字，或者六个字一齐运用。总之是灵活的，视求卦者的具体情况而决定方略法术。\n```\n\n","source":"_posts/江湖秘本之英耀篇.md","raw":"---\ntitle: 江湖秘本之英耀篇\ntags:\n  - 心理学\n  - 算命\ncategories:\n  - 心理学\ndate: 2024-12-02 16:37:54\n---\n\n偶然在网上看到了一本奇书，名曰《英耀篇》，上面说的东西对于人心的揣测比较精准，英耀赋或英耀篇是江湖术士看相的口诀。“英”是神，“耀”是捉，故此，“英耀”其实等于捉用神，江湖术士看相的首要伎俩，就是捉用神也。\n\n值得学习，全文背诵。\n\n以下是原文：\n\n```\n入门先观来意，既开言切莫踌躇，天来问追欲追贵，追来问天为天忧。 八问追，喜者欲凭子贵，怨者实为生孙近古。 叠叠问此件，定然此件缺，频频问原因，其中定有因。 一片真诚，百说慕名求教，此人乃是一哥，笑问看我贱相如何？此人若非火底就是畜生。\n\n砂砾丛中辨金石，衣冠队内别鱼龙，僧道纵清高不忘利欲，庙廊之士志在山林， 初贵者志极高超，久困者志无远大，聪明之子家业常寒，百拙之夫财终不匮。 眉精眼锐，白手兴家之人，碌碌无能，终生工水之辈。 破落户穷极不离鞋袜，初发家初起好炫金饰。 神暗额光，不是孤孀亦弃妇，妖婆媚笑，倘非花底定宠姬。 满口好对好，久居高位，连声是是是，出身卑微。\n\n面带笑容，而心神不定，家有祸争，招子闪烁，而故作安祥，祸发自身。 好勇斗狠，多遭横祸。怯懦无能，常受人欺。 志大才疏，终生咄咄空抱恨。才偏性执，不遭大祸亦奇穷。 治世重文学之臣，乱世发草莽英雄。通商大邑竞工商，穷乡僻壤争林田。\n\n急打慢千，轻敲响卖，隆卖齐施，敲打审千并用， 十千九响，十隆十成，敲其天，而推其比，审其一而知其三， 一敲即应，不妨打蛇随棍上，再敲不吐，何仿拨草寻蛇， 先千后隆，无往不利，有千无隆，帝寿之材， 故曰无千不响，无隆不成，学者可执其端，而理其绪，举一隅而知三隅， 随机应变，鬼神莫测，分寸己定，任意纵横，慎重传人，不出帝寿，斯篇玩熟，定教四海扬名。\n\n入门先观来意，出言先要拿心。先千后隆，乃兵家之妙法。轻敲响卖，是江湖之秘宗。 有问不可迟答，无言切勿先声。谈男命，先千后隆，谈女命，先隆后千。人人后运好，个个子孙贤。 三五成群，须防有假。嘻呵成，必定无心。 来意殷勤，前运必非好景。言词高傲，近来必定佳途。\n\n言不可多，言多必败。千不可极，千极必隆。 父年高而母年细，定必偏生庶出。己年细妻年高，当然苟合私逃。 子年与妻年仿佛，非填房定偏室坐正。父年与己年相等，不是过继定螟蛉。 老年问子，虽多亦寡，忧愁可断。少年问子，虽有亦女，立即分清。 早娶妻之人，父业可卜。迟立室者，祖业凋零。 当家早，父必先丧。当家迟，父命延长。 少年问亲娘，有病在牙床。老父问娇儿，定必子孙稀。\n\n来意神清，定必无心谈事。出言心乱，定当有意问灾凶。 少年过于奢华，其人必然浪子。老人过于朴实，此辈定是愚人。 年嫩志诚，千金可托之肖子。老来白霍，万事无成之鄙夫。 男儿问娼女，此乃终日谈烟花之俗子。妇人问翁姑，其人固念病体忧愁之贤女。 男人身配独锁匙，未断有室。妇人襟头常带乳，不是无儿。\n\n气滞神枯，斯人现困境，谋事十谋九凶。色润声高，此子近处吉祥，十成九就。 入门两目流连，必多心而无专一。身摇浪定，定小相而带轻浮。 衣服朴而洁，铜匙坠带，生意场中之能人，可卜权衡早创。 履华而整，银圆满袋，游乐场上之浪子，当决家业将倾。 田园近有，定卜先贫而后富。家业变尽，必然先富后贫。\n\n少年赞他寿长，老人许加福泽。 恶人勿言恶，只许傍借而此，隆千齐下。善人当言善，反正而说福寿同施。 中年发业兴家，此人善营善作。老来一筹莫展，是老失运失时。远客异方，祖宗每多富贵。近营内地，可断兄弟贫穷。\n\n小人宜以正直义气隆他，万无一失。君子当以诚谨俭让临之，百次皆同。 得英切勿尽吐，该防真里有假。失英最忌即兜，留心实内藏虚。 见水切宜用意，不可露轻视鄙贱之心。过火理当谨慎，最好看定方向开言。 刚柔并用，拷夹齐施，有千有隆。携琴祖宗有隆有千，火响连天。 坐立顶正大，言语要庄严，军马不可尽出，声气定要相连。 淡定吞吐，得意不宜再往。言词锋利、失之不可复言。声响视正君子相，目横语乱小人形。\n\n男女同来，分清老少亲戚方可断。单身再问，审定方向形势始能言。 寡妇询去留，定思重配。老媪多叹息，受屈难言。 病询自身，虽佑亦宜慢泄。老询寿元，未可即断死亡。 有子而寡，宜劝守节，将来必有好景。无儿问去，当要著其别栖为高。\n\n此乃看其人之年岁为立言。童儿身上，反复追寻，前儿难养。老大问自身，查寿元，现有病符。 瞻前顾后，必当高声唱问，以定其身。拉衣牵裙，定要暗里藏讥，以求其实。\n\n十六七之少女问男，春情己动，异性亦然。 五六十之老翁问女，冬雪既降，同偶何嫌。 因人情而谈世故，忖心理以顺开言。俏遇硬鼻高头，千中带夹。\n\n不受则隆。隆而吐则可，不吐连消带打，高声呼喝。千他古运将来，使其惊心动魄，言语要真诚。 若逢低首浅笑，隆中带打，不声则千。千而吐则可，不吐要逐路微拷。 低语讲话，隆其苦尽甘来，使其扬眉喜气，言语要温柔。\n\n男子入门，志气轩昂，袒胸露臂，高谈雄辩，非军政之徒定是捞家之辈。每要留心讲解，恐失言以招灾。 女子进来，言柔步淡，低头羞答，非闺秀之人，定名门之女，为势必听。我军马须从容，旁敲侧引。 视同来而眨眼，恐非有意寻求。对自己作疏言，未必无心试探。非得真英，不可落军马。须防马失前蹄。\n\n眼观四面，耳听八方，坐立必要端方。军马出须坚定，切忌浮言乱言，又忌俗语虚言。 先用人品涤荡一番，英耀未到，军马单刀直入，自然马到功成。\n\n但论叩经叩策之法，如官府升堂审案，必要寻根寻鸿。 一层一层，至紧深究根底。祸福此法，如入大座高楼，由浅入深，由轻至重。大概论之。 至紧问自身日后，次开谋望新花，次家宅占病，亦宜挨入自身可决。\n\n断自身之法，人生品行，一世好运丑运，可为议论。亦要在自身入脉，可能知得内里因由。 大约之法，如行兵调将，务要随机应变，仔细留心，不能一概而论。真乃变化无穷也。\n\n古人云，出人头地，须用苦心。工夫后学必要常常念熟，自有进步。 书云，学而不思则妄，思而不学则怠。凡间更新守旧，必定夹定男女。\n\n若男问必生意打工求财。若女问恐入八复飞。必要一一夹清。 见生意，启军马，必须镇定。\n\n贪者必贪，君子引为大戒，佛门亦为五戒之首，故做阿宝者的罪过，咎不在相而在一。\n\n贪官者，民贼也，好商者，民橐也，豪强者，民之虎狼也， 其或以知欺愚，恃强凌弱，欺人孤寡，谋人财产，此皆不义之财也， 不义之财理无久享，不报自身，亦报儿孙，不义之财，人人皆得而取之， 故曰做阿宝者，非千也，愿天之罚而已。\n\n凡做阿宝，博观而取之，慎始更慎终，未算其利，先防其弊，未置梗媒，先放生媒， 故善为相者，取之不竭其力，不伤其根，上顺天理，下怏人心，并使之有所畏怯而不敢言。 不善相者，竭一之力，伤之一内，取非不义之财，上违天理，下招人怨，非吾徒也，小子鸣鼓而攻之可也！\n\n凡一皆可札飞也，君子敬鬼神而远之，小人畏神鬼而陷之， 或求妻财子禄，或畏疾病灾祸，非有所惧，即有所求， 察其所惧，观其所求，而善用军马，则一无不唯命是从，故曰：“我求他，不能他求我。”\n\n札飞之术，贵在多方，幻其真耶，神化莫测， 小验然后大响，众信而后大成，鬼神无凭，唯人是依。 一犬吠形，百犬吠声，众口烁金，曾参杀人，虽明智之士齐所疑惑，何况一哉。 善为相者，莫不善用甲媒，故曰：“无媒不响，无媒不成。”\n```\n\n\n逐句释义：\n\n```\n入门先观来意，既开言切莫踌躇。\n（求卦问卜的人一进来，一定要凭着他的衣着相貌、言行举止，洞察他来算命的主旨，明了他心里在想些什么，怀着什么样的动机来求教于你。在这一点弄清之前，你先不能轻易发表言论。一旦认准了对方意图，觉得判断无误，就不应犹豫，迟疑不决。相命先生开口，最忌彷徨不定，吞吞吐吐。这种欲言又止的神态，会让人认为你连自己都缺乏自信，更不能取信于他人了。所以“切莫踌躇”，踌躇意味着信誉的消失，失去了吸引求测者并控制对方的基础力量。根据经验，对方进门之后，先不要轻易下结论，可装模作样排出八字，念念有词如子丑寅卯之类，一副老谋深算的样子，然后——啪！开口三句话就让他怵立当场，惊为神人。替人相命，命师的头三句话是至关重要的，如果三句话至少对了两句，你就牢牢抓住了对方，对方哪有不举白旗的）\n \n天（父）来问追（子）欲追贵，追来问天为天忧。\n（父亲问儿女，个人希望儿女有个好的前途，望子成龙，盼子富贵；或者儿女学习不佳，或者儿女早恋影响学业，或者儿女谈了恋爱做父亲的不太喜欢这个未来的儿媳或女婿等；或者儿女生意蚀了本，看今后如何；或者儿女出门在外，是否平安等。子来问父母，无外乎父母当官，能否再升；父母贪污受贿，会不会翻船；父母生病，病情结果如何；父母官非，能否化解，总之多数是有病有灾等不祥之光。以上诸等，若不能明确揣摩出来，不得已再运用“哄、吓、诈”三招，对方哪有不据实以言的，剩下的事情就好办多了。）\n \n八（妻）问七（夫），喜者欲凭七贵，怨者实为七愁。七问八，非八有事，定然子息艰难。\n（老婆问老公，无外乎老公前程如何，官运如何，财运如何，在外嫖妓或养小情妇等如何，或下岗后职业如何等。其实女人最好哄了，往好的方面去说，坏事也能变成好事。比如他官运亨通，财运大发等，或在外有女人是好事，不然您会被克死等；或老公蚀了财或遇小人等等东拉西扯，随机应变，越说越象真的。妻问其夫，如果满面带喜兴冲冲而来，那她的丈夫可能有官运、有福禄或横财，至少她希望如此，满面愁容而带怨气者，肯定是为“七愁”之事而来：无子、淫佚、不事父母公姑、口舌多言、盗窃、妒忌、恶疾。夫问妻，多数情况是问生子、淫行、恶疾、是不是要离婚等事。）\n     \n士子问前程，生孙（商贾）为近古（近况好不好）。     \n（读书人来问命算卦，多半是为了功名前程，希望有飞黄腾达之日，光宗耀祖之时；商人来问卜，则因为近来生意不好的缘故。怎样进一步判断这些人的来意呢，就是抓其特征，见下）\n \n叠叠问此事，定然此事缺；频频问原因，其中定有因。\n（以上四句，“百姓日用而不知”，真是令人拍案叫绝！一个叠叠，一个频频，已把求卜者的急切心情和盘手托出，他们所问的，正是他们心事所在。他们所希望的，正是他们所缺少的！他们想探询寻找出原因来，那么这里面定然有名堂。你相命的，就要在上面做文章，牢牢地吸引诱惑住来问者。）\n \n一片真诚，自说慕名求教，此人乃是“一哥”。笑问请看我贱相何如？此人非火底（有权有势的人物），即是“畜生”！砂砾丛中辨金石，衣冠队里排鱼龙（下缺四句）。\n \n（还要善于区分下面两种人：如果脸上一片真诚之色，自己介绍说，是慕我前来求卜问卦者，这种人多数是信神信命信卦的“一哥”——即虔诚的问卜求卦者。如果满口浅笑，装模作样，故意说请问我的贱相如何，那么，这种人不是有钱有势的人，就是专门来向你挑衅、捣蛋、败坏你声誉的轻薄之徒。在前来算命的人群里，有富贵官宦之人装穷卖傻前来相命，以此考你；也有穷愁潦倒之人，冒充富贵之人前来试你；或者是不怀好意的同行，或者是看了两本命书自认为了不起的家伙别有用心的前来考核你，存心踢馆给你难堪。你一定要在砂砾丛中辨认出是金还是石，在一大群前来相命的人流中识别出是龙还是鱼。不然，就是闹出笑话，丢“周易预测学”的脸。）\n \n僧道从清高，不忘利欲。\n（继续阐述上面的思想观点，教授相命者从更高的层次，即从来人的外表、谈吐、性格特征、心理倾向、命运趋势、人生动态作尽一步识别，洞察他们来问卜求卜的意向。因为没有这种识别和洞察，就无所谓看相算命，所以秘本言犹未尽，不厌其烦，恣意发挥，务求淋漓尽致。因为社会是复杂的，人生是复杂的，仅仅分析父子、夫妻、穷人、富人读书人和“一哥”是远远不够的。文章分析说：和尚、道士尊从为僧道，表在上清高寡欲，脱离凡尘世俗，实际上他们念念不忘的仍是私利欲望。那些“修炼”气功的凡人，那些自鸣清高的教授、学者，那些什么家什么家之类，亦不过都是些利欲之徒。天下人熙熙攘攘，攘攘熙熙，皆在为“名”、“利”二字而已矣）\n \n庙廊达士，志在山林。\n（那些身居高位的达官贵人，统治阶级，为“人民”服务的“父母官”等等，别看嘴面上冠冕堂皇，一心为公，其实个个都很贪婪，希望爵禄更丰，希望以权谋私搞更多的钱而不被察觉。只有真正的开明之士，才有志于功成名就后归隐山林，清白退休。）  \n \n初贵者志极高超，久困者志无远大。  \n（刚风发迹的显贵，考上或正在就读高校者，上党校学习者，或新官上任者，或投机倒把官商勾结而暴发者，他们得志便猖狂，欲望膨胀，飘飘然，器宇轩昂，趾高气扬。而那些屡试不第，穷困潦倒，生意蚀本之人，有才而不被重用者，因为长期压抑不得志，人穷志短，才不会志向远大，欲壑难填。）\n \n聪明之子，家业常寒。\n（聪明的人想出人头地，却常常因为聪明反被聪明，受到社会与同仁排挤，才能得不到重用，反而家境贫寒。）\n \n百拙之夫，财终不匮。\n（笨拙之人，由于他们欲望不高，勤勤恳恳，反而不缺乏生活来源，日子过得自足有余。）\n \n眉精眼细，白手兴家之人。\n（那些眉目前流露出自豪神情，看上去目光远大，精明能干，朴素而带有金银首饰的人，很可能是白手起家的老板。）  \n \n碌碌无能，终身工水（职工、贫穷）之辈。\n（只的那些无能之辈，或不会阿谀奉承、钻营苟苟的家伙，只能当个贫穷的做工人。）\n \n破落户穷极不离鞋袜，新发家初起好炫金饰。\n（那些破落户的特征是：白嫩肉，精神憔悴，衣饰寒酸，仍然穿鞋套袜不打赤脚，现代社会或可能是衣着毕挺，行为做作，腰上皮带是破旧的，脖上领带是皱褶的，脚上皮鞋是破旧或没擦的，领口衬衫是花的，鼻上眼镜片是脏的，腕上的手表是廉价的。那些新发迹的富人特征是：尽管穿着平常如旧，但是喜欢炫耀自己新买来的金玉饰物，人一阔，脸就变，现代社会还有可能是手里捏个大哥大，动辄“喂喂喂”叫个不停，生怕人家不知道他有手机……不管何种表现，总之有意无意地“炫耀”是其特征。）\n \n神暗额光，不是孤孀亦弃妇。妖姿媚笑，倘非花底（妓女）定宠姬。\n（神色黯然，面容愁闷但额头光滑细腻，衣饰华丽的，不是富人的遗孀，就是被抛弃的贵妇，或者不被官员和富商宠幸的情妇。妖冶、放荡、打扮得花枝招展，言笑风骚的，不是红粉妓女，就是官员富商的宠妾、情妇）  \n \n（中缺两句）满口好对好，久居高位；连声是是是，出身卑微。\n（满口“好”或“对”的，他可能身居高位；连声称“是、是、是”的，他可能出生卑微，是个小人物。）  \n \n面带愁容而心神不定，家有祸事。\n（面带愁容而又心神不定，恍恍惚惚，带神经质的，家里一定发生了不幸的事。）\n \n招子（眼睛）闪烁故作安祥，祸发自身。\n（若眼神恍惚不定，言语吞吞吐吐，精神不集中，内心惊慌而又故作镇定，则肯定是他自身干下的恶行而东窗事发了。）\n \n好勇斗狠，多招横死。\n（喜欢惹事生非，逞强好胜，殴斗成性，心狠手毒的人，多半身遭横祸，死于非命。）\n \n怯懦无能，当受人欺。\n（生性怯懦，自视低能的人，一定受人欺侮，终日只能衰声叹气。）\n \n志大才疏，终生咄咄空抱恨。\n（好高骛远，眼高手低，志大才疏的人，一辈子过得很窘迫，活得很累，却只能终身抱恨，郁郁寡欢。）\n \n才偏性执，不遭大祸亦奇穷。\n（才气性情非常偏颇固执，钻牛角尖，撞了南墙亦不回头的人，即使不遭大临头大祸，也会异常贫穷，日子过得十分艰难。）\n \n治世重文学之士，乱世发草泽英雄。\n（如果处于太平盛世，社会稳定繁荣，那么饱学之士或有专业技术之人会得到重用，算卦时须认定这种人是前途远大的。如果处于乱世，则出草莽英雄的居多，暴发户或敛不义之财的居多，比如现在改革开放，大字不识两个的社会流氓，劳改犯等等一个个成了企业家，董事长，黑社会老大等，吾见过有“街娃”起家者，有扒手起家者，有摆凉粉摊起家才者，有走私起家者，有办厂生产伪劣产品起家者，有贩卖假烟起家者……算卦时这一点必须予以考虑。）\n \n通商大邑竞工商，穷乡僻壤争林田。（下缺四句）。\n（如果是商业发达的大城市，其争执纠纷多半是为工商之事而发，如果是在穷乡僻壤发生纷争，多半是为了争夺林田）\n \n急打慢千，轻敲而响卖。\n隆卖齐施，敲打审千并用。\n十千九响，十隆九成。\n敲其大而推其比（兄弟），审其一而知其三。\n一敲即应，不妨打蛇随棍上，再敲不吐，何妨拨草以寻蛇（下缺两句）。\n先千后隆，无往不利；有千无隆，帝寿（愚蠢）之材。\n故曰：无千不响，不隆不成。\n学者可执其端而理其绪，学一隅而知三隅。\n随机应变，鬼神莫测，分寸已定，任意纵横。\n慎重传人，师门不出帝寿，斯篇玩熟，定教四海扬名。\n \n以上一段，讲的是看相算命的诡诈骗术，是全篇的核心部分，也是相士们认为最重要的“秘诀”。它是看相算命过程中的骗术的理论概括。按照“审、敲、打、千、隆、卖”六个字办，相士不仅可以设法掌握被相命者的底细隐私、心理状态，而且可以骗得对方目瞪口呆，佩服得五体投地，心悦诚服地投入你设下的罗网和陷阱。其招数实在是高深莫测，妙不可言。\n \n审：察貎辨色，判分真伪，并从已知推断未知\n敲：旁敲侧击\n打：突然发问，使对方措手不及，仓促间吐露真情\n千：刺激、责骂、恐吓，向要害打击\n隆：赞美、恭维和安慰、鼓励\n卖：掌握对方资料之后，从容不迫地用肯定的语气一一摊出来，使对方惊异和折服\n \n　　“急打慢千”是相命时的基本要领，就是说给人算命时，必须瞅准时机，突然发问，击中要害，陷对方于猝不及防的境地，使对方在仓促时间忘记来时的戒备心理而透露出真情实况。所谓“急打”，要有突发性，打对方一个措手不及，使其无暇自顾，从而瓦解他的心理防线，如此，不愁他不从实招来。所谓“慢千”，就是在获悉对方的“情报”后，要运用恐吓的手段，再给对方以强烈的刺激，使他惊诧、惧怕，担心有大祸临头之感。这样，他自然会求教于你，向你讨教消灾避祸的法术。算命中，对方的担心和忧虑是最好的诱饵，有了这种意思，你就可以牵着他的鼻子悠哉悠哉了。为什么“千”要慢呢？因为你要组织有条理有递进感的一套“军马”（即语言），来打击对方，语调必须做到平稳而有力，切忌急躁和语无伦次，一字一句一板一眼慢慢吐出，威严，阴森可怖，掷地有声，震慑对方的意志，粉碎他的抵抗。\n \n　　“轻敲而响卖”，就是说，在套取对方的情况时，要采取旁敲侧击的手法，不能直敲直槌，敲错地方。一敲就要敲到与对方心事有关联之处，起到敲山震虎的功效，使“虎”叫啸起来，自我暴露隐藏在深处的目标。“响卖”就是经“敲”又揣摩到对方的底细线索后，顺藤摸瓜，以肯定的语气把底牌亮出来，端出已见，使对方大为惊异并且深深地佩服你的高明。所谓“响”，就是一经探明路数，就要毫不犹豫，果断地出击直点对方的“穴位”，牢牢地抓住对方，在对方心中树立你的信念和权威感，由此，你可以左右逢源，条条道路通罗马了。“卖”，也是一种打击，是更深一层的刺激。然而，仅仅有打击和刺激，是不行的，还必须配之以“隆”，就是奉承恭维，夸赞和鼓励，给对方以希望，使他相信时来运转可以消为避祸之说，一切不幸均可化解；使他相信厄运之下，他仍是富贵命，幸运将降福于他。这一点很要紧，一个直到算命终场仍然一脸沮丧的人是不肯把更多的钱交给相命先生的。所以“卖”和“隆”要结合起来加以实施，单有卖，会把对方吓跑。你越是给他看到吉祥如意之光环，他越会乖乖地听你的“调遣”。算命结束，两者皆大欢喜，如若结局不是如此，那就失败了。同样道理，“敲打”、“审千”也必须并用不悖，缺一不可。这样自会“十千九响，十隆九成”。\n \n  \n　　“审、敲、打、千、隆、卖”六个字怎样并用实施呢？就是秘本所述的：“敲其大而推其比（兄弟），审（察颜观色，审时度势）其一而知其三。敲即应，不妨打蛇随棍上，再敲不吐，何妨拨草以寻蛇。”接着，它总结道：“先千后隆，无往不利；有千无隆，帝寿（愚蠢）之材。故曰：无千不响，无隆不成”。最后它强调指出“学者可执其端而理其绪，学一隅而知三隅（即融汇贯通，举一反三），随机应变，鬼神莫测，分寸已定，任意纵横。”\n \n  \n　　把求问者的各种情况都敲清了，又经过“响卖”，这时候就可以“落千”了。“千”，其意不光指“恐吓”，还有一层意思，就是击中对方的要害，抨击其最铭心刻骨之事。如指出他的不幸遭遇，是“千”，抨击世态炎凉，社会的不公，亲戚朋友的背离抛弃，也是“千”。“千”之后要“隆”，要抚慰他，要给他描绘未来。这种预言式、希望式的隆，是给对方一种心理暗示，给予其精神力量。无千就不会有好效果，因为“千”多半是说明和非难过去，“千”得准会使对方依赖你，那么你对未来的“隆”他也就不怀疑了。这就是“无千不响，无隆不成”的道理所在。  \n \n　　“审、敲、打、千、隆、卖”要兼施并用，这实质上是一套高级的算卦骗术。具体怎么运用？江湖术士心中有数，他们或者“千、隆、卖”齐施，或者“敲、打”与“审、千”结合，或者“审、千”与“隆、卖”结合，或者只使用其中的某一字，或者六个字一齐运用。总之是灵活的，视求卦者的具体情况而决定方略法术。\n```\n\n","slug":"江湖秘本之英耀篇","published":1,"updated":"2024-12-02T09:02:56.963Z","_id":"cm46sw0530000g4v4enqv7e9g","comments":1,"layout":"post","photos":[],"content":"<p>偶然在网上看到了一本奇书，名曰《英耀篇》，上面说的东西对于人心的揣测比较精准，英耀赋或英耀篇是江湖术士看相的口诀。“英”是神，“耀”是捉，故此，“英耀”其实等于捉用神，江湖术士看相的首要伎俩，就是捉用神也。</p>\n<p>值得学习，全文背诵。</p>\n<p>以下是原文：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">入门先观来意，既开言切莫踌躇，天来问追欲追贵，追来问天为天忧。 八问追，喜者欲凭子贵，怨者实为生孙近古。 叠叠问此件，定然此件缺，频频问原因，其中定有因。 一片真诚，百说慕名求教，此人乃是一哥，笑问看我贱相如何？此人若非火底就是畜生。<br><br>砂砾丛中辨金石，衣冠队内别鱼龙，僧道纵清高不忘利欲，庙廊之士志在山林， 初贵者志极高超，久困者志无远大，聪明之子家业常寒，百拙之夫财终不匮。 眉精眼锐，白手兴家之人，碌碌无能，终生工水之辈。 破落户穷极不离鞋袜，初发家初起好炫金饰。 神暗额光，不是孤孀亦弃妇，妖婆媚笑，倘非花底定宠姬。 满口好对好，久居高位，连声是是是，出身卑微。<br><br>面带笑容，而心神不定，家有祸争，招子闪烁，而故作安祥，祸发自身。 好勇斗狠，多遭横祸。怯懦无能，常受人欺。 志大才疏，终生咄咄空抱恨。才偏性执，不遭大祸亦奇穷。 治世重文学之臣，乱世发草莽英雄。通商大邑竞工商，穷乡僻壤争林田。<br><br>急打慢千，轻敲响卖，隆卖齐施，敲打审千并用， 十千九响，十隆十成，敲其天，而推其比，审其一而知其三， 一敲即应，不妨打蛇随棍上，再敲不吐，何仿拨草寻蛇， 先千后隆，无往不利，有千无隆，帝寿之材， 故曰无千不响，无隆不成，学者可执其端，而理其绪，举一隅而知三隅， 随机应变，鬼神莫测，分寸己定，任意纵横，慎重传人，不出帝寿，斯篇玩熟，定教四海扬名。<br><br>入门先观来意，出言先要拿心。先千后隆，乃兵家之妙法。轻敲响卖，是江湖之秘宗。 有问不可迟答，无言切勿先声。谈男命，先千后隆，谈女命，先隆后千。人人后运好，个个子孙贤。 三五成群，须防有假。嘻呵成，必定无心。 来意殷勤，前运必非好景。言词高傲，近来必定佳途。<br><br>言不可多，言多必败。千不可极，千极必隆。 父年高而母年细，定必偏生庶出。己年细妻年高，当然苟合私逃。 子年与妻年仿佛，非填房定偏室坐正。父年与己年相等，不是过继定螟蛉。 老年问子，虽多亦寡，忧愁可断。少年问子，虽有亦女，立即分清。 早娶妻之人，父业可卜。迟立室者，祖业凋零。 当家早，父必先丧。当家迟，父命延长。 少年问亲娘，有病在牙床。老父问娇儿，定必子孙稀。<br><br>来意神清，定必无心谈事。出言心乱，定当有意问灾凶。 少年过于奢华，其人必然浪子。老人过于朴实，此辈定是愚人。 年嫩志诚，千金可托之肖子。老来白霍，万事无成之鄙夫。 男儿问娼女，此乃终日谈烟花之俗子。妇人问翁姑，其人固念病体忧愁之贤女。 男人身配独锁匙，未断有室。妇人襟头常带乳，不是无儿。<br><br>气滞神枯，斯人现困境，谋事十谋九凶。色润声高，此子近处吉祥，十成九就。 入门两目流连，必多心而无专一。身摇浪定，定小相而带轻浮。 衣服朴而洁，铜匙坠带，生意场中之能人，可卜权衡早创。 履华而整，银圆满袋，游乐场上之浪子，当决家业将倾。 田园近有，定卜先贫而后富。家业变尽，必然先富后贫。<br><br>少年赞他寿长，老人许加福泽。 恶人勿言恶，只许傍借而此，隆千齐下。善人当言善，反正而说福寿同施。 中年发业兴家，此人善营善作。老来一筹莫展，是老失运失时。远客异方，祖宗每多富贵。近营内地，可断兄弟贫穷。<br><br>小人宜以正直义气隆他，万无一失。君子当以诚谨俭让临之，百次皆同。 得英切勿尽吐，该防真里有假。失英最忌即兜，留心实内藏虚。 见水切宜用意，不可露轻视鄙贱之心。过火理当谨慎，最好看定方向开言。 刚柔并用，拷夹齐施，有千有隆。携琴祖宗有隆有千，火响连天。 坐立顶正大，言语要庄严，军马不可尽出，声气定要相连。 淡定吞吐，得意不宜再往。言词锋利、失之不可复言。声响视正君子相，目横语乱小人形。<br><br>男女同来，分清老少亲戚方可断。单身再问，审定方向形势始能言。 寡妇询去留，定思重配。老媪多叹息，受屈难言。 病询自身，虽佑亦宜慢泄。老询寿元，未可即断死亡。 有子而寡，宜劝守节，将来必有好景。无儿问去，当要著其别栖为高。<br><br>此乃看其人之年岁为立言。童儿身上，反复追寻，前儿难养。老大问自身，查寿元，现有病符。 瞻前顾后，必当高声唱问，以定其身。拉衣牵裙，定要暗里藏讥，以求其实。<br><br>十六七之少女问男，春情己动，异性亦然。 五六十之老翁问女，冬雪既降，同偶何嫌。 因人情而谈世故，忖心理以顺开言。俏遇硬鼻高头，千中带夹。<br><br>不受则隆。隆而吐则可，不吐连消带打，高声呼喝。千他古运将来，使其惊心动魄，言语要真诚。 若逢低首浅笑，隆中带打，不声则千。千而吐则可，不吐要逐路微拷。 低语讲话，隆其苦尽甘来，使其扬眉喜气，言语要温柔。<br><br>男子入门，志气轩昂，袒胸露臂，高谈雄辩，非军政之徒定是捞家之辈。每要留心讲解，恐失言以招灾。 女子进来，言柔步淡，低头羞答，非闺秀之人，定名门之女，为势必听。我军马须从容，旁敲侧引。 视同来而眨眼，恐非有意寻求。对自己作疏言，未必无心试探。非得真英，不可落军马。须防马失前蹄。<br><br>眼观四面，耳听八方，坐立必要端方。军马出须坚定，切忌浮言乱言，又忌俗语虚言。 先用人品涤荡一番，英耀未到，军马单刀直入，自然马到功成。<br><br>但论叩经叩策之法，如官府升堂审案，必要寻根寻鸿。 一层一层，至紧深究根底。祸福此法，如入大座高楼，由浅入深，由轻至重。大概论之。 至紧问自身日后，次开谋望新花，次家宅占病，亦宜挨入自身可决。<br><br>断自身之法，人生品行，一世好运丑运，可为议论。亦要在自身入脉，可能知得内里因由。 大约之法，如行兵调将，务要随机应变，仔细留心，不能一概而论。真乃变化无穷也。<br><br>古人云，出人头地，须用苦心。工夫后学必要常常念熟，自有进步。 书云，学而不思则妄，思而不学则怠。凡间更新守旧，必定夹定男女。<br><br>若男问必生意打工求财。若女问恐入八复飞。必要一一夹清。 见生意，启军马，必须镇定。<br><br>贪者必贪，君子引为大戒，佛门亦为五戒之首，故做阿宝者的罪过，咎不在相而在一。<br><br>贪官者，民贼也，好商者，民橐也，豪强者，民之虎狼也， 其或以知欺愚，恃强凌弱，欺人孤寡，谋人财产，此皆不义之财也， 不义之财理无久享，不报自身，亦报儿孙，不义之财，人人皆得而取之， 故曰做阿宝者，非千也，愿天之罚而已。<br><br>凡做阿宝，博观而取之，慎始更慎终，未算其利，先防其弊，未置梗媒，先放生媒， 故善为相者，取之不竭其力，不伤其根，上顺天理，下怏人心，并使之有所畏怯而不敢言。 不善相者，竭一之力，伤之一内，取非不义之财，上违天理，下招人怨，非吾徒也，小子鸣鼓而攻之可也！<br><br>凡一皆可札飞也，君子敬鬼神而远之，小人畏神鬼而陷之， 或求妻财子禄，或畏疾病灾祸，非有所惧，即有所求， 察其所惧，观其所求，而善用军马，则一无不唯命是从，故曰：“我求他，不能他求我。”<br><br>札飞之术，贵在多方，幻其真耶，神化莫测， 小验然后大响，众信而后大成，鬼神无凭，唯人是依。 一犬吠形，百犬吠声，众口烁金，曾参杀人，虽明智之士齐所疑惑，何况一哉。 善为相者，莫不善用甲媒，故曰：“无媒不响，无媒不成。”<br></code></pre></td></tr></table></figure>\n\n\n<p>逐句释义：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">入门先观来意，既开言切莫踌躇。<br>（求卦问卜的人一进来，一定要凭着他的衣着相貌、言行举止，洞察他来算命的主旨，明了他心里在想些什么，怀着什么样的动机来求教于你。在这一点弄清之前，你先不能轻易发表言论。一旦认准了对方意图，觉得判断无误，就不应犹豫，迟疑不决。相命先生开口，最忌彷徨不定，吞吞吐吐。这种欲言又止的神态，会让人认为你连自己都缺乏自信，更不能取信于他人了。所以“切莫踌躇”，踌躇意味着信誉的消失，失去了吸引求测者并控制对方的基础力量。根据经验，对方进门之后，先不要轻易下结论，可装模作样排出八字，念念有词如子丑寅卯之类，一副老谋深算的样子，然后——啪！开口三句话就让他怵立当场，惊为神人。替人相命，命师的头三句话是至关重要的，如果三句话至少对了两句，你就牢牢抓住了对方，对方哪有不举白旗的）<br> <br>天（父）来问追（子）欲追贵，追来问天为天忧。<br>（父亲问儿女，个人希望儿女有个好的前途，望子成龙，盼子富贵；或者儿女学习不佳，或者儿女早恋影响学业，或者儿女谈了恋爱做父亲的不太喜欢这个未来的儿媳或女婿等；或者儿女生意蚀了本，看今后如何；或者儿女出门在外，是否平安等。子来问父母，无外乎父母当官，能否再升；父母贪污受贿，会不会翻船；父母生病，病情结果如何；父母官非，能否化解，总之多数是有病有灾等不祥之光。以上诸等，若不能明确揣摩出来，不得已再运用“哄、吓、诈”三招，对方哪有不据实以言的，剩下的事情就好办多了。）<br> <br>八（妻）问七（夫），喜者欲凭七贵，怨者实为七愁。七问八，非八有事，定然子息艰难。<br>（老婆问老公，无外乎老公前程如何，官运如何，财运如何，在外嫖妓或养小情妇等如何，或下岗后职业如何等。其实女人最好哄了，往好的方面去说，坏事也能变成好事。比如他官运亨通，财运大发等，或在外有女人是好事，不然您会被克死等；或老公蚀了财或遇小人等等东拉西扯，随机应变，越说越象真的。妻问其夫，如果满面带喜兴冲冲而来，那她的丈夫可能有官运、有福禄或横财，至少她希望如此，满面愁容而带怨气者，肯定是为“七愁”之事而来：无子、淫佚、不事父母公姑、口舌多言、盗窃、妒忌、恶疾。夫问妻，多数情况是问生子、淫行、恶疾、是不是要离婚等事。）<br>     <br>士子问前程，生孙（商贾）为近古（近况好不好）。     <br>（读书人来问命算卦，多半是为了功名前程，希望有飞黄腾达之日，光宗耀祖之时；商人来问卜，则因为近来生意不好的缘故。怎样进一步判断这些人的来意呢，就是抓其特征，见下）<br> <br>叠叠问此事，定然此事缺；频频问原因，其中定有因。<br>（以上四句，“百姓日用而不知”，真是令人拍案叫绝！一个叠叠，一个频频，已把求卜者的急切心情和盘手托出，他们所问的，正是他们心事所在。他们所希望的，正是他们所缺少的！他们想探询寻找出原因来，那么这里面定然有名堂。你相命的，就要在上面做文章，牢牢地吸引诱惑住来问者。）<br> <br>一片真诚，自说慕名求教，此人乃是“一哥”。笑问请看我贱相何如？此人非火底（有权有势的人物），即是“畜生”！砂砾丛中辨金石，衣冠队里排鱼龙（下缺四句）。<br> <br>（还要善于区分下面两种人：如果脸上一片真诚之色，自己介绍说，是慕我前来求卜问卦者，这种人多数是信神信命信卦的“一哥”——即虔诚的问卜求卦者。如果满口浅笑，装模作样，故意说请问我的贱相如何，那么，这种人不是有钱有势的人，就是专门来向你挑衅、捣蛋、败坏你声誉的轻薄之徒。在前来算命的人群里，有富贵官宦之人装穷卖傻前来相命，以此考你；也有穷愁潦倒之人，冒充富贵之人前来试你；或者是不怀好意的同行，或者是看了两本命书自认为了不起的家伙别有用心的前来考核你，存心踢馆给你难堪。你一定要在砂砾丛中辨认出是金还是石，在一大群前来相命的人流中识别出是龙还是鱼。不然，就是闹出笑话，丢“周易预测学”的脸。）<br> <br>僧道从清高，不忘利欲。<br>（继续阐述上面的思想观点，教授相命者从更高的层次，即从来人的外表、谈吐、性格特征、心理倾向、命运趋势、人生动态作尽一步识别，洞察他们来问卜求卜的意向。因为没有这种识别和洞察，就无所谓看相算命，所以秘本言犹未尽，不厌其烦，恣意发挥，务求淋漓尽致。因为社会是复杂的，人生是复杂的，仅仅分析父子、夫妻、穷人、富人读书人和“一哥”是远远不够的。文章分析说：和尚、道士尊从为僧道，表在上清高寡欲，脱离凡尘世俗，实际上他们念念不忘的仍是私利欲望。那些“修炼”气功的凡人，那些自鸣清高的教授、学者，那些什么家什么家之类，亦不过都是些利欲之徒。天下人熙熙攘攘，攘攘熙熙，皆在为“名”、“利”二字而已矣）<br> <br>庙廊达士，志在山林。<br>（那些身居高位的达官贵人，统治阶级，为“人民”服务的“父母官”等等，别看嘴面上冠冕堂皇，一心为公，其实个个都很贪婪，希望爵禄更丰，希望以权谋私搞更多的钱而不被察觉。只有真正的开明之士，才有志于功成名就后归隐山林，清白退休。）  <br> <br>初贵者志极高超，久困者志无远大。  <br>（刚风发迹的显贵，考上或正在就读高校者，上党校学习者，或新官上任者，或投机倒把官商勾结而暴发者，他们得志便猖狂，欲望膨胀，飘飘然，器宇轩昂，趾高气扬。而那些屡试不第，穷困潦倒，生意蚀本之人，有才而不被重用者，因为长期压抑不得志，人穷志短，才不会志向远大，欲壑难填。）<br> <br>聪明之子，家业常寒。<br>（聪明的人想出人头地，却常常因为聪明反被聪明，受到社会与同仁排挤，才能得不到重用，反而家境贫寒。）<br> <br>百拙之夫，财终不匮。<br>（笨拙之人，由于他们欲望不高，勤勤恳恳，反而不缺乏生活来源，日子过得自足有余。）<br> <br>眉精眼细，白手兴家之人。<br>（那些眉目前流露出自豪神情，看上去目光远大，精明能干，朴素而带有金银首饰的人，很可能是白手起家的老板。）  <br> <br>碌碌无能，终身工水（职工、贫穷）之辈。<br>（只的那些无能之辈，或不会阿谀奉承、钻营苟苟的家伙，只能当个贫穷的做工人。）<br> <br>破落户穷极不离鞋袜，新发家初起好炫金饰。<br>（那些破落户的特征是：白嫩肉，精神憔悴，衣饰寒酸，仍然穿鞋套袜不打赤脚，现代社会或可能是衣着毕挺，行为做作，腰上皮带是破旧的，脖上领带是皱褶的，脚上皮鞋是破旧或没擦的，领口衬衫是花的，鼻上眼镜片是脏的，腕上的手表是廉价的。那些新发迹的富人特征是：尽管穿着平常如旧，但是喜欢炫耀自己新买来的金玉饰物，人一阔，脸就变，现代社会还有可能是手里捏个大哥大，动辄“喂喂喂”叫个不停，生怕人家不知道他有手机……不管何种表现，总之有意无意地“炫耀”是其特征。）<br> <br>神暗额光，不是孤孀亦弃妇。妖姿媚笑，倘非花底（妓女）定宠姬。<br>（神色黯然，面容愁闷但额头光滑细腻，衣饰华丽的，不是富人的遗孀，就是被抛弃的贵妇，或者不被官员和富商宠幸的情妇。妖冶、放荡、打扮得花枝招展，言笑风骚的，不是红粉妓女，就是官员富商的宠妾、情妇）  <br> <br>（中缺两句）满口好对好，久居高位；连声是是是，出身卑微。<br>（满口“好”或“对”的，他可能身居高位；连声称“是、是、是”的，他可能出生卑微，是个小人物。）  <br> <br>面带愁容而心神不定，家有祸事。<br>（面带愁容而又心神不定，恍恍惚惚，带神经质的，家里一定发生了不幸的事。）<br> <br>招子（眼睛）闪烁故作安祥，祸发自身。<br>（若眼神恍惚不定，言语吞吞吐吐，精神不集中，内心惊慌而又故作镇定，则肯定是他自身干下的恶行而东窗事发了。）<br> <br>好勇斗狠，多招横死。<br>（喜欢惹事生非，逞强好胜，殴斗成性，心狠手毒的人，多半身遭横祸，死于非命。）<br> <br>怯懦无能，当受人欺。<br>（生性怯懦，自视低能的人，一定受人欺侮，终日只能衰声叹气。）<br> <br>志大才疏，终生咄咄空抱恨。<br>（好高骛远，眼高手低，志大才疏的人，一辈子过得很窘迫，活得很累，却只能终身抱恨，郁郁寡欢。）<br> <br>才偏性执，不遭大祸亦奇穷。<br>（才气性情非常偏颇固执，钻牛角尖，撞了南墙亦不回头的人，即使不遭大临头大祸，也会异常贫穷，日子过得十分艰难。）<br> <br>治世重文学之士，乱世发草泽英雄。<br>（如果处于太平盛世，社会稳定繁荣，那么饱学之士或有专业技术之人会得到重用，算卦时须认定这种人是前途远大的。如果处于乱世，则出草莽英雄的居多，暴发户或敛不义之财的居多，比如现在改革开放，大字不识两个的社会流氓，劳改犯等等一个个成了企业家，董事长，黑社会老大等，吾见过有“街娃”起家者，有扒手起家者，有摆凉粉摊起家才者，有走私起家者，有办厂生产伪劣产品起家者，有贩卖假烟起家者……算卦时这一点必须予以考虑。）<br> <br>通商大邑竞工商，穷乡僻壤争林田。（下缺四句）。<br>（如果是商业发达的大城市，其争执纠纷多半是为工商之事而发，如果是在穷乡僻壤发生纷争，多半是为了争夺林田）<br> <br>急打慢千，轻敲而响卖。<br>隆卖齐施，敲打审千并用。<br>十千九响，十隆九成。<br>敲其大而推其比（兄弟），审其一而知其三。<br>一敲即应，不妨打蛇随棍上，再敲不吐，何妨拨草以寻蛇（下缺两句）。<br>先千后隆，无往不利；有千无隆，帝寿（愚蠢）之材。<br>故曰：无千不响，不隆不成。<br>学者可执其端而理其绪，学一隅而知三隅。<br>随机应变，鬼神莫测，分寸已定，任意纵横。<br>慎重传人，师门不出帝寿，斯篇玩熟，定教四海扬名。<br> <br>以上一段，讲的是看相算命的诡诈骗术，是全篇的核心部分，也是相士们认为最重要的“秘诀”。它是看相算命过程中的骗术的理论概括。按照“审、敲、打、千、隆、卖”六个字办，相士不仅可以设法掌握被相命者的底细隐私、心理状态，而且可以骗得对方目瞪口呆，佩服得五体投地，心悦诚服地投入你设下的罗网和陷阱。其招数实在是高深莫测，妙不可言。<br> <br>审：察貎辨色，判分真伪，并从已知推断未知<br>敲：旁敲侧击<br>打：突然发问，使对方措手不及，仓促间吐露真情<br>千：刺激、责骂、恐吓，向要害打击<br>隆：赞美、恭维和安慰、鼓励<br>卖：掌握对方资料之后，从容不迫地用肯定的语气一一摊出来，使对方惊异和折服<br> <br>　　“急打慢千”是相命时的基本要领，就是说给人算命时，必须瞅准时机，突然发问，击中要害，陷对方于猝不及防的境地，使对方在仓促时间忘记来时的戒备心理而透露出真情实况。所谓“急打”，要有突发性，打对方一个措手不及，使其无暇自顾，从而瓦解他的心理防线，如此，不愁他不从实招来。所谓“慢千”，就是在获悉对方的“情报”后，要运用恐吓的手段，再给对方以强烈的刺激，使他惊诧、惧怕，担心有大祸临头之感。这样，他自然会求教于你，向你讨教消灾避祸的法术。算命中，对方的担心和忧虑是最好的诱饵，有了这种意思，你就可以牵着他的鼻子悠哉悠哉了。为什么“千”要慢呢？因为你要组织有条理有递进感的一套“军马”（即语言），来打击对方，语调必须做到平稳而有力，切忌急躁和语无伦次，一字一句一板一眼慢慢吐出，威严，阴森可怖，掷地有声，震慑对方的意志，粉碎他的抵抗。<br> <br>　　“轻敲而响卖”，就是说，在套取对方的情况时，要采取旁敲侧击的手法，不能直敲直槌，敲错地方。一敲就要敲到与对方心事有关联之处，起到敲山震虎的功效，使“虎”叫啸起来，自我暴露隐藏在深处的目标。“响卖”就是经“敲”又揣摩到对方的底细线索后，顺藤摸瓜，以肯定的语气把底牌亮出来，端出已见，使对方大为惊异并且深深地佩服你的高明。所谓“响”，就是一经探明路数，就要毫不犹豫，果断地出击直点对方的“穴位”，牢牢地抓住对方，在对方心中树立你的信念和权威感，由此，你可以左右逢源，条条道路通罗马了。“卖”，也是一种打击，是更深一层的刺激。然而，仅仅有打击和刺激，是不行的，还必须配之以“隆”，就是奉承恭维，夸赞和鼓励，给对方以希望，使他相信时来运转可以消为避祸之说，一切不幸均可化解；使他相信厄运之下，他仍是富贵命，幸运将降福于他。这一点很要紧，一个直到算命终场仍然一脸沮丧的人是不肯把更多的钱交给相命先生的。所以“卖”和“隆”要结合起来加以实施，单有卖，会把对方吓跑。你越是给他看到吉祥如意之光环，他越会乖乖地听你的“调遣”。算命结束，两者皆大欢喜，如若结局不是如此，那就失败了。同样道理，“敲打”、“审千”也必须并用不悖，缺一不可。这样自会“十千九响，十隆九成”。<br> <br>  <br>　　“审、敲、打、千、隆、卖”六个字怎样并用实施呢？就是秘本所述的：“敲其大而推其比（兄弟），审（察颜观色，审时度势）其一而知其三。敲即应，不妨打蛇随棍上，再敲不吐，何妨拨草以寻蛇。”接着，它总结道：“先千后隆，无往不利；有千无隆，帝寿（愚蠢）之材。故曰：无千不响，无隆不成”。最后它强调指出“学者可执其端而理其绪，学一隅而知三隅（即融汇贯通，举一反三），随机应变，鬼神莫测，分寸已定，任意纵横。”<br> <br>  <br>　　把求问者的各种情况都敲清了，又经过“响卖”，这时候就可以“落千”了。“千”，其意不光指“恐吓”，还有一层意思，就是击中对方的要害，抨击其最铭心刻骨之事。如指出他的不幸遭遇，是“千”，抨击世态炎凉，社会的不公，亲戚朋友的背离抛弃，也是“千”。“千”之后要“隆”，要抚慰他，要给他描绘未来。这种预言式、希望式的隆，是给对方一种心理暗示，给予其精神力量。无千就不会有好效果，因为“千”多半是说明和非难过去，“千”得准会使对方依赖你，那么你对未来的“隆”他也就不怀疑了。这就是“无千不响，无隆不成”的道理所在。  <br> <br>　　“审、敲、打、千、隆、卖”要兼施并用，这实质上是一套高级的算卦骗术。具体怎么运用？江湖术士心中有数，他们或者“千、隆、卖”齐施，或者“敲、打”与“审、千”结合，或者“审、千”与“隆、卖”结合，或者只使用其中的某一字，或者六个字一齐运用。总之是灵活的，视求卦者的具体情况而决定方略法术。<br></code></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<p>偶然在网上看到了一本奇书，名曰《英耀篇》，上面说的东西对于人心的揣测比较精准，英耀赋或英耀篇是江湖术士看相的口诀。“英”是神，“耀”是捉，故此，“英耀”其实等于捉用神，江湖术士看相的首要伎俩，就是捉用神也。</p>\n<p>值得学习，全文背诵。</p>\n<p>以下是原文：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">入门先观来意，既开言切莫踌躇，天来问追欲追贵，追来问天为天忧。 八问追，喜者欲凭子贵，怨者实为生孙近古。 叠叠问此件，定然此件缺，频频问原因，其中定有因。 一片真诚，百说慕名求教，此人乃是一哥，笑问看我贱相如何？此人若非火底就是畜生。<br><br>砂砾丛中辨金石，衣冠队内别鱼龙，僧道纵清高不忘利欲，庙廊之士志在山林， 初贵者志极高超，久困者志无远大，聪明之子家业常寒，百拙之夫财终不匮。 眉精眼锐，白手兴家之人，碌碌无能，终生工水之辈。 破落户穷极不离鞋袜，初发家初起好炫金饰。 神暗额光，不是孤孀亦弃妇，妖婆媚笑，倘非花底定宠姬。 满口好对好，久居高位，连声是是是，出身卑微。<br><br>面带笑容，而心神不定，家有祸争，招子闪烁，而故作安祥，祸发自身。 好勇斗狠，多遭横祸。怯懦无能，常受人欺。 志大才疏，终生咄咄空抱恨。才偏性执，不遭大祸亦奇穷。 治世重文学之臣，乱世发草莽英雄。通商大邑竞工商，穷乡僻壤争林田。<br><br>急打慢千，轻敲响卖，隆卖齐施，敲打审千并用， 十千九响，十隆十成，敲其天，而推其比，审其一而知其三， 一敲即应，不妨打蛇随棍上，再敲不吐，何仿拨草寻蛇， 先千后隆，无往不利，有千无隆，帝寿之材， 故曰无千不响，无隆不成，学者可执其端，而理其绪，举一隅而知三隅， 随机应变，鬼神莫测，分寸己定，任意纵横，慎重传人，不出帝寿，斯篇玩熟，定教四海扬名。<br><br>入门先观来意，出言先要拿心。先千后隆，乃兵家之妙法。轻敲响卖，是江湖之秘宗。 有问不可迟答，无言切勿先声。谈男命，先千后隆，谈女命，先隆后千。人人后运好，个个子孙贤。 三五成群，须防有假。嘻呵成，必定无心。 来意殷勤，前运必非好景。言词高傲，近来必定佳途。<br><br>言不可多，言多必败。千不可极，千极必隆。 父年高而母年细，定必偏生庶出。己年细妻年高，当然苟合私逃。 子年与妻年仿佛，非填房定偏室坐正。父年与己年相等，不是过继定螟蛉。 老年问子，虽多亦寡，忧愁可断。少年问子，虽有亦女，立即分清。 早娶妻之人，父业可卜。迟立室者，祖业凋零。 当家早，父必先丧。当家迟，父命延长。 少年问亲娘，有病在牙床。老父问娇儿，定必子孙稀。<br><br>来意神清，定必无心谈事。出言心乱，定当有意问灾凶。 少年过于奢华，其人必然浪子。老人过于朴实，此辈定是愚人。 年嫩志诚，千金可托之肖子。老来白霍，万事无成之鄙夫。 男儿问娼女，此乃终日谈烟花之俗子。妇人问翁姑，其人固念病体忧愁之贤女。 男人身配独锁匙，未断有室。妇人襟头常带乳，不是无儿。<br><br>气滞神枯，斯人现困境，谋事十谋九凶。色润声高，此子近处吉祥，十成九就。 入门两目流连，必多心而无专一。身摇浪定，定小相而带轻浮。 衣服朴而洁，铜匙坠带，生意场中之能人，可卜权衡早创。 履华而整，银圆满袋，游乐场上之浪子，当决家业将倾。 田园近有，定卜先贫而后富。家业变尽，必然先富后贫。<br><br>少年赞他寿长，老人许加福泽。 恶人勿言恶，只许傍借而此，隆千齐下。善人当言善，反正而说福寿同施。 中年发业兴家，此人善营善作。老来一筹莫展，是老失运失时。远客异方，祖宗每多富贵。近营内地，可断兄弟贫穷。<br><br>小人宜以正直义气隆他，万无一失。君子当以诚谨俭让临之，百次皆同。 得英切勿尽吐，该防真里有假。失英最忌即兜，留心实内藏虚。 见水切宜用意，不可露轻视鄙贱之心。过火理当谨慎，最好看定方向开言。 刚柔并用，拷夹齐施，有千有隆。携琴祖宗有隆有千，火响连天。 坐立顶正大，言语要庄严，军马不可尽出，声气定要相连。 淡定吞吐，得意不宜再往。言词锋利、失之不可复言。声响视正君子相，目横语乱小人形。<br><br>男女同来，分清老少亲戚方可断。单身再问，审定方向形势始能言。 寡妇询去留，定思重配。老媪多叹息，受屈难言。 病询自身，虽佑亦宜慢泄。老询寿元，未可即断死亡。 有子而寡，宜劝守节，将来必有好景。无儿问去，当要著其别栖为高。<br><br>此乃看其人之年岁为立言。童儿身上，反复追寻，前儿难养。老大问自身，查寿元，现有病符。 瞻前顾后，必当高声唱问，以定其身。拉衣牵裙，定要暗里藏讥，以求其实。<br><br>十六七之少女问男，春情己动，异性亦然。 五六十之老翁问女，冬雪既降，同偶何嫌。 因人情而谈世故，忖心理以顺开言。俏遇硬鼻高头，千中带夹。<br><br>不受则隆。隆而吐则可，不吐连消带打，高声呼喝。千他古运将来，使其惊心动魄，言语要真诚。 若逢低首浅笑，隆中带打，不声则千。千而吐则可，不吐要逐路微拷。 低语讲话，隆其苦尽甘来，使其扬眉喜气，言语要温柔。<br><br>男子入门，志气轩昂，袒胸露臂，高谈雄辩，非军政之徒定是捞家之辈。每要留心讲解，恐失言以招灾。 女子进来，言柔步淡，低头羞答，非闺秀之人，定名门之女，为势必听。我军马须从容，旁敲侧引。 视同来而眨眼，恐非有意寻求。对自己作疏言，未必无心试探。非得真英，不可落军马。须防马失前蹄。<br><br>眼观四面，耳听八方，坐立必要端方。军马出须坚定，切忌浮言乱言，又忌俗语虚言。 先用人品涤荡一番，英耀未到，军马单刀直入，自然马到功成。<br><br>但论叩经叩策之法，如官府升堂审案，必要寻根寻鸿。 一层一层，至紧深究根底。祸福此法，如入大座高楼，由浅入深，由轻至重。大概论之。 至紧问自身日后，次开谋望新花，次家宅占病，亦宜挨入自身可决。<br><br>断自身之法，人生品行，一世好运丑运，可为议论。亦要在自身入脉，可能知得内里因由。 大约之法，如行兵调将，务要随机应变，仔细留心，不能一概而论。真乃变化无穷也。<br><br>古人云，出人头地，须用苦心。工夫后学必要常常念熟，自有进步。 书云，学而不思则妄，思而不学则怠。凡间更新守旧，必定夹定男女。<br><br>若男问必生意打工求财。若女问恐入八复飞。必要一一夹清。 见生意，启军马，必须镇定。<br><br>贪者必贪，君子引为大戒，佛门亦为五戒之首，故做阿宝者的罪过，咎不在相而在一。<br><br>贪官者，民贼也，好商者，民橐也，豪强者，民之虎狼也， 其或以知欺愚，恃强凌弱，欺人孤寡，谋人财产，此皆不义之财也， 不义之财理无久享，不报自身，亦报儿孙，不义之财，人人皆得而取之， 故曰做阿宝者，非千也，愿天之罚而已。<br><br>凡做阿宝，博观而取之，慎始更慎终，未算其利，先防其弊，未置梗媒，先放生媒， 故善为相者，取之不竭其力，不伤其根，上顺天理，下怏人心，并使之有所畏怯而不敢言。 不善相者，竭一之力，伤之一内，取非不义之财，上违天理，下招人怨，非吾徒也，小子鸣鼓而攻之可也！<br><br>凡一皆可札飞也，君子敬鬼神而远之，小人畏神鬼而陷之， 或求妻财子禄，或畏疾病灾祸，非有所惧，即有所求， 察其所惧，观其所求，而善用军马，则一无不唯命是从，故曰：“我求他，不能他求我。”<br><br>札飞之术，贵在多方，幻其真耶，神化莫测， 小验然后大响，众信而后大成，鬼神无凭，唯人是依。 一犬吠形，百犬吠声，众口烁金，曾参杀人，虽明智之士齐所疑惑，何况一哉。 善为相者，莫不善用甲媒，故曰：“无媒不响，无媒不成。”<br></code></pre></td></tr></table></figure>\n\n\n<p>逐句释义：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">入门先观来意，既开言切莫踌躇。<br>（求卦问卜的人一进来，一定要凭着他的衣着相貌、言行举止，洞察他来算命的主旨，明了他心里在想些什么，怀着什么样的动机来求教于你。在这一点弄清之前，你先不能轻易发表言论。一旦认准了对方意图，觉得判断无误，就不应犹豫，迟疑不决。相命先生开口，最忌彷徨不定，吞吞吐吐。这种欲言又止的神态，会让人认为你连自己都缺乏自信，更不能取信于他人了。所以“切莫踌躇”，踌躇意味着信誉的消失，失去了吸引求测者并控制对方的基础力量。根据经验，对方进门之后，先不要轻易下结论，可装模作样排出八字，念念有词如子丑寅卯之类，一副老谋深算的样子，然后——啪！开口三句话就让他怵立当场，惊为神人。替人相命，命师的头三句话是至关重要的，如果三句话至少对了两句，你就牢牢抓住了对方，对方哪有不举白旗的）<br> <br>天（父）来问追（子）欲追贵，追来问天为天忧。<br>（父亲问儿女，个人希望儿女有个好的前途，望子成龙，盼子富贵；或者儿女学习不佳，或者儿女早恋影响学业，或者儿女谈了恋爱做父亲的不太喜欢这个未来的儿媳或女婿等；或者儿女生意蚀了本，看今后如何；或者儿女出门在外，是否平安等。子来问父母，无外乎父母当官，能否再升；父母贪污受贿，会不会翻船；父母生病，病情结果如何；父母官非，能否化解，总之多数是有病有灾等不祥之光。以上诸等，若不能明确揣摩出来，不得已再运用“哄、吓、诈”三招，对方哪有不据实以言的，剩下的事情就好办多了。）<br> <br>八（妻）问七（夫），喜者欲凭七贵，怨者实为七愁。七问八，非八有事，定然子息艰难。<br>（老婆问老公，无外乎老公前程如何，官运如何，财运如何，在外嫖妓或养小情妇等如何，或下岗后职业如何等。其实女人最好哄了，往好的方面去说，坏事也能变成好事。比如他官运亨通，财运大发等，或在外有女人是好事，不然您会被克死等；或老公蚀了财或遇小人等等东拉西扯，随机应变，越说越象真的。妻问其夫，如果满面带喜兴冲冲而来，那她的丈夫可能有官运、有福禄或横财，至少她希望如此，满面愁容而带怨气者，肯定是为“七愁”之事而来：无子、淫佚、不事父母公姑、口舌多言、盗窃、妒忌、恶疾。夫问妻，多数情况是问生子、淫行、恶疾、是不是要离婚等事。）<br>     <br>士子问前程，生孙（商贾）为近古（近况好不好）。     <br>（读书人来问命算卦，多半是为了功名前程，希望有飞黄腾达之日，光宗耀祖之时；商人来问卜，则因为近来生意不好的缘故。怎样进一步判断这些人的来意呢，就是抓其特征，见下）<br> <br>叠叠问此事，定然此事缺；频频问原因，其中定有因。<br>（以上四句，“百姓日用而不知”，真是令人拍案叫绝！一个叠叠，一个频频，已把求卜者的急切心情和盘手托出，他们所问的，正是他们心事所在。他们所希望的，正是他们所缺少的！他们想探询寻找出原因来，那么这里面定然有名堂。你相命的，就要在上面做文章，牢牢地吸引诱惑住来问者。）<br> <br>一片真诚，自说慕名求教，此人乃是“一哥”。笑问请看我贱相何如？此人非火底（有权有势的人物），即是“畜生”！砂砾丛中辨金石，衣冠队里排鱼龙（下缺四句）。<br> <br>（还要善于区分下面两种人：如果脸上一片真诚之色，自己介绍说，是慕我前来求卜问卦者，这种人多数是信神信命信卦的“一哥”——即虔诚的问卜求卦者。如果满口浅笑，装模作样，故意说请问我的贱相如何，那么，这种人不是有钱有势的人，就是专门来向你挑衅、捣蛋、败坏你声誉的轻薄之徒。在前来算命的人群里，有富贵官宦之人装穷卖傻前来相命，以此考你；也有穷愁潦倒之人，冒充富贵之人前来试你；或者是不怀好意的同行，或者是看了两本命书自认为了不起的家伙别有用心的前来考核你，存心踢馆给你难堪。你一定要在砂砾丛中辨认出是金还是石，在一大群前来相命的人流中识别出是龙还是鱼。不然，就是闹出笑话，丢“周易预测学”的脸。）<br> <br>僧道从清高，不忘利欲。<br>（继续阐述上面的思想观点，教授相命者从更高的层次，即从来人的外表、谈吐、性格特征、心理倾向、命运趋势、人生动态作尽一步识别，洞察他们来问卜求卜的意向。因为没有这种识别和洞察，就无所谓看相算命，所以秘本言犹未尽，不厌其烦，恣意发挥，务求淋漓尽致。因为社会是复杂的，人生是复杂的，仅仅分析父子、夫妻、穷人、富人读书人和“一哥”是远远不够的。文章分析说：和尚、道士尊从为僧道，表在上清高寡欲，脱离凡尘世俗，实际上他们念念不忘的仍是私利欲望。那些“修炼”气功的凡人，那些自鸣清高的教授、学者，那些什么家什么家之类，亦不过都是些利欲之徒。天下人熙熙攘攘，攘攘熙熙，皆在为“名”、“利”二字而已矣）<br> <br>庙廊达士，志在山林。<br>（那些身居高位的达官贵人，统治阶级，为“人民”服务的“父母官”等等，别看嘴面上冠冕堂皇，一心为公，其实个个都很贪婪，希望爵禄更丰，希望以权谋私搞更多的钱而不被察觉。只有真正的开明之士，才有志于功成名就后归隐山林，清白退休。）  <br> <br>初贵者志极高超，久困者志无远大。  <br>（刚风发迹的显贵，考上或正在就读高校者，上党校学习者，或新官上任者，或投机倒把官商勾结而暴发者，他们得志便猖狂，欲望膨胀，飘飘然，器宇轩昂，趾高气扬。而那些屡试不第，穷困潦倒，生意蚀本之人，有才而不被重用者，因为长期压抑不得志，人穷志短，才不会志向远大，欲壑难填。）<br> <br>聪明之子，家业常寒。<br>（聪明的人想出人头地，却常常因为聪明反被聪明，受到社会与同仁排挤，才能得不到重用，反而家境贫寒。）<br> <br>百拙之夫，财终不匮。<br>（笨拙之人，由于他们欲望不高，勤勤恳恳，反而不缺乏生活来源，日子过得自足有余。）<br> <br>眉精眼细，白手兴家之人。<br>（那些眉目前流露出自豪神情，看上去目光远大，精明能干，朴素而带有金银首饰的人，很可能是白手起家的老板。）  <br> <br>碌碌无能，终身工水（职工、贫穷）之辈。<br>（只的那些无能之辈，或不会阿谀奉承、钻营苟苟的家伙，只能当个贫穷的做工人。）<br> <br>破落户穷极不离鞋袜，新发家初起好炫金饰。<br>（那些破落户的特征是：白嫩肉，精神憔悴，衣饰寒酸，仍然穿鞋套袜不打赤脚，现代社会或可能是衣着毕挺，行为做作，腰上皮带是破旧的，脖上领带是皱褶的，脚上皮鞋是破旧或没擦的，领口衬衫是花的，鼻上眼镜片是脏的，腕上的手表是廉价的。那些新发迹的富人特征是：尽管穿着平常如旧，但是喜欢炫耀自己新买来的金玉饰物，人一阔，脸就变，现代社会还有可能是手里捏个大哥大，动辄“喂喂喂”叫个不停，生怕人家不知道他有手机……不管何种表现，总之有意无意地“炫耀”是其特征。）<br> <br>神暗额光，不是孤孀亦弃妇。妖姿媚笑，倘非花底（妓女）定宠姬。<br>（神色黯然，面容愁闷但额头光滑细腻，衣饰华丽的，不是富人的遗孀，就是被抛弃的贵妇，或者不被官员和富商宠幸的情妇。妖冶、放荡、打扮得花枝招展，言笑风骚的，不是红粉妓女，就是官员富商的宠妾、情妇）  <br> <br>（中缺两句）满口好对好，久居高位；连声是是是，出身卑微。<br>（满口“好”或“对”的，他可能身居高位；连声称“是、是、是”的，他可能出生卑微，是个小人物。）  <br> <br>面带愁容而心神不定，家有祸事。<br>（面带愁容而又心神不定，恍恍惚惚，带神经质的，家里一定发生了不幸的事。）<br> <br>招子（眼睛）闪烁故作安祥，祸发自身。<br>（若眼神恍惚不定，言语吞吞吐吐，精神不集中，内心惊慌而又故作镇定，则肯定是他自身干下的恶行而东窗事发了。）<br> <br>好勇斗狠，多招横死。<br>（喜欢惹事生非，逞强好胜，殴斗成性，心狠手毒的人，多半身遭横祸，死于非命。）<br> <br>怯懦无能，当受人欺。<br>（生性怯懦，自视低能的人，一定受人欺侮，终日只能衰声叹气。）<br> <br>志大才疏，终生咄咄空抱恨。<br>（好高骛远，眼高手低，志大才疏的人，一辈子过得很窘迫，活得很累，却只能终身抱恨，郁郁寡欢。）<br> <br>才偏性执，不遭大祸亦奇穷。<br>（才气性情非常偏颇固执，钻牛角尖，撞了南墙亦不回头的人，即使不遭大临头大祸，也会异常贫穷，日子过得十分艰难。）<br> <br>治世重文学之士，乱世发草泽英雄。<br>（如果处于太平盛世，社会稳定繁荣，那么饱学之士或有专业技术之人会得到重用，算卦时须认定这种人是前途远大的。如果处于乱世，则出草莽英雄的居多，暴发户或敛不义之财的居多，比如现在改革开放，大字不识两个的社会流氓，劳改犯等等一个个成了企业家，董事长，黑社会老大等，吾见过有“街娃”起家者，有扒手起家者，有摆凉粉摊起家才者，有走私起家者，有办厂生产伪劣产品起家者，有贩卖假烟起家者……算卦时这一点必须予以考虑。）<br> <br>通商大邑竞工商，穷乡僻壤争林田。（下缺四句）。<br>（如果是商业发达的大城市，其争执纠纷多半是为工商之事而发，如果是在穷乡僻壤发生纷争，多半是为了争夺林田）<br> <br>急打慢千，轻敲而响卖。<br>隆卖齐施，敲打审千并用。<br>十千九响，十隆九成。<br>敲其大而推其比（兄弟），审其一而知其三。<br>一敲即应，不妨打蛇随棍上，再敲不吐，何妨拨草以寻蛇（下缺两句）。<br>先千后隆，无往不利；有千无隆，帝寿（愚蠢）之材。<br>故曰：无千不响，不隆不成。<br>学者可执其端而理其绪，学一隅而知三隅。<br>随机应变，鬼神莫测，分寸已定，任意纵横。<br>慎重传人，师门不出帝寿，斯篇玩熟，定教四海扬名。<br> <br>以上一段，讲的是看相算命的诡诈骗术，是全篇的核心部分，也是相士们认为最重要的“秘诀”。它是看相算命过程中的骗术的理论概括。按照“审、敲、打、千、隆、卖”六个字办，相士不仅可以设法掌握被相命者的底细隐私、心理状态，而且可以骗得对方目瞪口呆，佩服得五体投地，心悦诚服地投入你设下的罗网和陷阱。其招数实在是高深莫测，妙不可言。<br> <br>审：察貎辨色，判分真伪，并从已知推断未知<br>敲：旁敲侧击<br>打：突然发问，使对方措手不及，仓促间吐露真情<br>千：刺激、责骂、恐吓，向要害打击<br>隆：赞美、恭维和安慰、鼓励<br>卖：掌握对方资料之后，从容不迫地用肯定的语气一一摊出来，使对方惊异和折服<br> <br>　　“急打慢千”是相命时的基本要领，就是说给人算命时，必须瞅准时机，突然发问，击中要害，陷对方于猝不及防的境地，使对方在仓促时间忘记来时的戒备心理而透露出真情实况。所谓“急打”，要有突发性，打对方一个措手不及，使其无暇自顾，从而瓦解他的心理防线，如此，不愁他不从实招来。所谓“慢千”，就是在获悉对方的“情报”后，要运用恐吓的手段，再给对方以强烈的刺激，使他惊诧、惧怕，担心有大祸临头之感。这样，他自然会求教于你，向你讨教消灾避祸的法术。算命中，对方的担心和忧虑是最好的诱饵，有了这种意思，你就可以牵着他的鼻子悠哉悠哉了。为什么“千”要慢呢？因为你要组织有条理有递进感的一套“军马”（即语言），来打击对方，语调必须做到平稳而有力，切忌急躁和语无伦次，一字一句一板一眼慢慢吐出，威严，阴森可怖，掷地有声，震慑对方的意志，粉碎他的抵抗。<br> <br>　　“轻敲而响卖”，就是说，在套取对方的情况时，要采取旁敲侧击的手法，不能直敲直槌，敲错地方。一敲就要敲到与对方心事有关联之处，起到敲山震虎的功效，使“虎”叫啸起来，自我暴露隐藏在深处的目标。“响卖”就是经“敲”又揣摩到对方的底细线索后，顺藤摸瓜，以肯定的语气把底牌亮出来，端出已见，使对方大为惊异并且深深地佩服你的高明。所谓“响”，就是一经探明路数，就要毫不犹豫，果断地出击直点对方的“穴位”，牢牢地抓住对方，在对方心中树立你的信念和权威感，由此，你可以左右逢源，条条道路通罗马了。“卖”，也是一种打击，是更深一层的刺激。然而，仅仅有打击和刺激，是不行的，还必须配之以“隆”，就是奉承恭维，夸赞和鼓励，给对方以希望，使他相信时来运转可以消为避祸之说，一切不幸均可化解；使他相信厄运之下，他仍是富贵命，幸运将降福于他。这一点很要紧，一个直到算命终场仍然一脸沮丧的人是不肯把更多的钱交给相命先生的。所以“卖”和“隆”要结合起来加以实施，单有卖，会把对方吓跑。你越是给他看到吉祥如意之光环，他越会乖乖地听你的“调遣”。算命结束，两者皆大欢喜，如若结局不是如此，那就失败了。同样道理，“敲打”、“审千”也必须并用不悖，缺一不可。这样自会“十千九响，十隆九成”。<br> <br>  <br>　　“审、敲、打、千、隆、卖”六个字怎样并用实施呢？就是秘本所述的：“敲其大而推其比（兄弟），审（察颜观色，审时度势）其一而知其三。敲即应，不妨打蛇随棍上，再敲不吐，何妨拨草以寻蛇。”接着，它总结道：“先千后隆，无往不利；有千无隆，帝寿（愚蠢）之材。故曰：无千不响，无隆不成”。最后它强调指出“学者可执其端而理其绪，学一隅而知三隅（即融汇贯通，举一反三），随机应变，鬼神莫测，分寸已定，任意纵横。”<br> <br>  <br>　　把求问者的各种情况都敲清了，又经过“响卖”，这时候就可以“落千”了。“千”，其意不光指“恐吓”，还有一层意思，就是击中对方的要害，抨击其最铭心刻骨之事。如指出他的不幸遭遇，是“千”，抨击世态炎凉，社会的不公，亲戚朋友的背离抛弃，也是“千”。“千”之后要“隆”，要抚慰他，要给他描绘未来。这种预言式、希望式的隆，是给对方一种心理暗示，给予其精神力量。无千就不会有好效果，因为“千”多半是说明和非难过去，“千”得准会使对方依赖你，那么你对未来的“隆”他也就不怀疑了。这就是“无千不响，无隆不成”的道理所在。  <br> <br>　　“审、敲、打、千、隆、卖”要兼施并用，这实质上是一套高级的算卦骗术。具体怎么运用？江湖术士心中有数，他们或者“千、隆、卖”齐施，或者“敲、打”与“审、千”结合，或者“审、千”与“隆、卖”结合，或者只使用其中的某一字，或者六个字一齐运用。总之是灵活的，视求卦者的具体情况而决定方略法术。<br></code></pre></td></tr></table></figure>\n\n"},{"title":"江湖秘本之军马篇","date":"2024-12-02T08:51:09.000Z","_content":"《軍馬篇》又稱《昆馬篇》與《英耀篇》、《扎飛篇》及《阿寶篇》同為江湖術士的騙術天書。昆馬亦寫作昆碼，有混騙、棍騙之意。因為江湖相士是靠口才吃飯的，而昆是昔日廣州俗語，意思是指欺騙的說話。《軍馬篇》是一套專業術語，只在民間流傳，難登大雅之堂。多被正統論命者唾棄。但其實用價值是很高的。\n\n求卦問卜的人一進來，相士憑著他的衣著相貌、言行舉止，洞察他來算命的主旨，明了他心裡在想些什麼，懷著什麼樣的動機來求教。在這一點弄清之前，相士不會輕易發表言論。一旦認準了對方意圖，覺得判斷無誤，就毫不猶豫，當機立斷。\n\n原文\n\n## 军马篇之命运\n\n```\n只道浮雲風送去，人間霹靂自空來。莫道小溪流水淺，須知滑石有驚人。\n莫謂途不堪走馬，應防路滑失前蹄。馬快當防平地石，舟忙宜慎水中磯。\n如火燒赤壁，曹孟德之驚魂。若兵用烏江，楚霸王之喪膽。\n只可靜坐觀風月，切勿臨淵去釣魚。周郎大破連環策，孔明臺上借東風。\n花柳場中切勿往，好比狐狸聽旨施邪術，斷送成湯六百秋。\n漫江撒下釣和線，尤恐釣出是非來。\n花花世界春三月，草草人情又一秋。惟要且勤且守，切勿妄作妄為。\n四季謀來來多阻滯，乘船騎馬實艱難。莫謂花開常鮮艷，猶恐風狂有敗枝。\n時時謹慎，步步為營。好比夜靜水寒魚不餌，滿船空載月明歸。\n不貪無所欲，守耐自然榮。一陣狂風一陣雨，半生雲霧半生煙。\n一夜風來急，草木盡低頭。六畜近來生百相，一牛兩尾少人聞。\n有所憂患，則不得免焉。高山流水少，狂風雨半天。月色虛心待，有一船軍器上營藏。\n書中生困難攀食，水上游魚易釣烹。緊陷堅牢地，須防足下浮。\n山下兩輪明月現，目前運限具文星。有貴難為貴，求敗不聚財。\n車心馬角棋休下，虎口羊腸路莫行。江水澄清翻作赤，湖波蕩漾變成紅。\n漢高著灘水，光武逢滂沱之險。華容道上逢關羽，赤壁江中遇周郎。\n青天白日雷公響，驚動愁人夜不眠。一片白雲天外望，數聲啼鳥夢中驚。\n門前枯樹倒，白鶴滿天飛。江山水渺渺，暗石在其中。\n紅血杜鵑啼不盡，綠楊鶯燕語思親。高堂冷落，萱草凄涼。\n靛房未有工師染，茅屋常多木色衣。椿枝已落，萱草猶榮。\n門前多喜慶，人事倍精神。日暖春光侵衣艷，風送花來樸鼻香。\n新月桂松梢，清風送好音。緩舒雁羽翼，輕舉蝶精神。\n萬里春光先報暖，一天秋月更增輝。天喜照臨，宜傘室家。\n喜事從天降，桂子結成雙。紹振祖宗之箕裘，開啟後人之事業。\n方寸有天堪府迎，逢人無地不生春。一派水木皆佳景，重重錦上又添花。\n春夏精神爽，秋冬大吉昌。忽然果遂真奇遇，便是男兒得志時。\n花逢春暖枝枝秀，月到秋晴夜夜光。殘花發蕊，月缺重圓。\n花開葉茂枝枝秀，嫩竹出林節節高。一番新氣象，隨遇盡亨通。\n雲收月朗家家現，雨后花前朵朵香。風和竹塢添新筍，日暖蘭階長嫩芽。\n何只丁財並進，而且人物康寧。\n脫其荊棘，乃有真景而來。財源不竭，不但利祿盈庭。\n倘言麒麟再慶，換過一翻新世界。果然不興舊時同。不但態羆入夢，而且大獲繩頭。\n昔日雲移遮朗月，今朝霧散見青天。有喜色，所謀如願。\n若遵孔孟之門，苦志蕓窗。但習陶朱之術，富有大業。\n預卜鴻圖大展之榮，財如春水朝朝至，喜似秋月夜夜光。\n一石打破青銅鏡，月裡嫦娥缺半邊。不盡祥光來眼底，無窮佳景到身前。\n美中不足生狼狽，目到浮雲空自嗟。莫言一事小，弄出大乾坤。\n滿眼兒孫增福壽，一庭少長盡安寧。玉人語燕陪君枕，肖子三槐即汝家。\n笑語家聲振，共聚一堂親。蜀地未逢司馬到，荊州已著臥龍謀。\n好風吃散浮雲去，明月照通大地光。交情渭北三春樹，生意江南二月花。\n壁玉珠還時轉泰，雲開霧散月重明。前途運去金成鐵，今日時來鐵化金。\n昨夜不知何處雨，今朝忽見滿江湖。\n禍去福生，增爾一番新氣象。時來運泰，相逢到處盡繁華。\n自古英雄，每多挫折。由來豪傑，偏受興磨。\n一翻寒澈骨，怎得梅花噴鼻香。雖有名利暢地，還防苦海生波。\n宿雲似幕難遮月，細雨如煙不損花。如昏衢得炬燭，若苦海忽遇慈航。\n得意須防失意，開眉又恐皺眉。馬逢伯樂，劍遇張華。\n立志非常早，懷才惜未伸。花開遭兩損，月色被雲迷。\n秋月雲開後，薰風雨過時。坎地番夷夏，崎嶇恐撲顛。\n發意外之財源，添歲前之秀子。財如春柳發，喜若夏蓮開。\n平地生荊棘，淺水起風波。無邊美景頻頻至，不盡財源滾滾來。\n莫道三冬無雨落，須防六月有寒時。雲散一天星斗現，風平四海波浪清。\n老梅生白玉，秋菊綻黃金。雖有名利暢地，還防霜雪相侵。\n縱有風霜犯，依然樂到好春。佳偶忽成怨偶，良緣反作孽緣。\n莫道喜中無拂意，還妨樂裡有生愁。\n```\n\n## 军马篇之双关\n\n```\n好比枯槁之木，縱逢春而不榮。茂盛之標，雖凌霜而不敗。\n雖無意外心常泰，猶有胸中內帶愁。滿徑好花人讚羨，一簾微雨客生愁。\n一枝花放門牆外，幾處人思瓶裡簪。范丹雖乃穿蕉異，一時運轉展鴻基。\n相如昔日為司馬，洪武當年去牧牛。子女雙生曾報兆，錦雞齊唱竟呈祥。\n竹影掃街塵不動，螢光燭地草難燃。一輪夜月圓還缺，幾點晨星有若無。\n好去好來還好意，多財多寶亦多男。門前八卦蚊休入，戶外三星我接來。\n浪靜風和船不動，天晴月朗客優游。為人靜處尋安樂，便是清閒一日仙。\n諸葛一生惟謹慎，呂端大事不糊塗。\n漸入佳境，如小溪流水，未得大展鴻圖。財丁兩遂，仍妨家運轉衰。\n家運支持，將功補過，只可靜而獲福，勿縱閒以生嗔。貴人得力，仍妨服色而丁憂。\n太乙臨運，應主熊羆入夢，宜慎破財為佳。一則以喜，一則以懼。\n紙花做出驚人目，好在無香在裡頭。財雖有而積聚無多。\n縱遇丁財而逢喜，難免神色以生悲。富貴草頭露，繁華瓦上霜。\n雖有志於四方，依然未伸大志。挫折在前，安逸在後。挫折大，險阻于常。\n頗得貴人關照，仍然未得暢志從心。宛如枯木逢春，雖有滋生也不榮。\n只可順風搖順槳，莫來危馬過危橋。守株待免為安穩，緣木求魚枉用功。\n雖行貴人提拔，未許十分稱懷。財之有進有退，事亦半喜半憂。\n得財誠恐失獻身，生子還妨損子。應得桑麻女，當逢吉服穿。\n平途走馬無關礙，順水行舟有逆風。衣祿有餘，起跌殊多。\n得不足以補失，喜慶能使亡憂。交脫之際，動作勿妄。\n莫道全無事，須防不測憂。\n```\n\n## 军马篇之颂扬\n\n```\n如秦樓之月，未得常光。似走盤之珠，去留未定。\n雖得鴻圖猶未展，難令如意遂君心。忽然平地一聲雷，丁財兩旺。\n隻手創成銀世界，雙拳弄出錦乾坤。貴子連添，財利重重。\n喜氣欣欣，財源疊疊。財丁兩旺，百事堪宜。\n丁財如旱曲得雨，枯木逢春。生涯占大有，美利盡成事。\n萬物看生新氣象，百般從此得精神。好風吹送巖前桂，十里人間九里花。\n雨露細滋春草長，風雲際會小陽春。有意裁花花不發，無心插柳柳成陰。\n吹開雲裡月，剔起暗中燈。用心機再謀世界，盡本事而得大財。\n運逢財氣心先爽，月到中秋分外明。春至滿園皆秀色，秋來無處不花香。\n東成西就般般合，內作外為事事亨。花紅花綠花成錦，月清月白月光明。\n平安竹報全家慶，寶貴花開遍室春。振家聲而宏駿業，逢巧遇而得其財。\n可秉大權恭大任，重重財氣，祿位高陞。秋到中天明月好，運到人間寶貴春。\n脫迷離而登大道，拔雲霧而見青天。果能發奮振雄心，定卜如意獲資財。\n海外經營多獲利，前程發達在他邦。英雄得志揚名遠，寶貴催人氣象新。\n盡力推開沙與石，用心淘得玉兼金。時運就從今日發，百花俱是此間開。\n且看巨船出大海，錦帆無恙挂西風。財如秋水朝朝滿，運比桃花日日紅。\n揚揚喜慶如春至，滾滾財源似水流。名花得雨生艷色，滿面紅顏照畫堂。\n人逢喜事精神爽，樺遇春風瑞氣香。花逢春景千般艷，月到中秋分外光。\n小小經營成厚業，微微創置可興隆。上苑奇花呈寶貴，庭前瑞草報平安。\n狂風吹散殘雲去，如雨稍晴紅日升。千里江山千里錦，一翻雨至一翻新。\n財如江上之清風，喜似山間之明月。清風明月無人管，綠水青山任意游。\n利如曉日騰雲去，財似清風送喜來。斯時幸有賢朗志，何怕南窗寄傲情。\n喜金銀之滿庫，納榖粟以盈倉。紅日初升，陰霾已散。順時而動，循序上進。\n心花怒放，未許稱心。財喜並臨，有喜有財。謹守成業，敏事慎言。\n免生煩惱，鑿石生玉。淘沙見金，惠風和暢。大有年豐，小人道長。\n甜言勿聽，見景生情。見機而作，慎勿強求。\n金鱗在手，得還妨走。有勝有敗，得足償失，無吝無譽。皓月當人，任意而為。\n忠而見疑，直而受謗。微風貶骨，冷雨侵肌。否極泰來，先否後亨，如日之升。\n大道生財，壽筳祥開。舉家暢飲，三杯不少。風光月齋。雨散雲收。\n三呼不返，一夢無回。月朗天清，花香月艷。乍暗乍明，一帆風順。\n吐氣揚眉，浮盡書散。多修厥德，福自天中。\n```\n\n## 軍馬篇之老人篇\n\n```\n大器晚成休道晚，長江有水任魚游。不特財源廣聚，自然到老生光。\n言晚福，安穩如山。論財祿，長江似水。福壽綿長安樂處，丁財並進又康寧。\n晚福更高兒女肖，晚景又盛妻妾賢。花迎麗日高低放，氣逐香風遠近聞。\n退去災殃無別意，展開心事有餘寬。財來恰似南山火，一陣高時一陣紅。\n過盡前途十八灘，任君隨意掛高帆。高處綠楊堪策馬，條條好路透長安。\n只宜再納蘭姬，子嗣定然有見。視南山之壽比，樂有嘉賓。\n賀北海之籌陳，欣多命子。無處無譽，層樓直上，到處皆亨。\n態羆許其入夢，璋兆宜男。又賦小星之慶。大謀九就皆如意。\n萬紫千紅氣象新，老驥倘懷千里志，枯桐空抱五材清\n```\n\n## 軍馬篇之小孩篇\n\n```\n根深不怕，樹大何愁。理幼而學，壯而行。如月初升，光朗可愛。少須藉椿萱之福，然而啾唧多端。\n亦可跨龍附鳳。無榮無辱。以度時光。\n```\n\n## 軍馬篇之命宮\n\n```\n命逢驛馬，非為性靜。\n嗟日落兮，靈椿早謝，歌月朗兮，萱草長榮，嗟椿樹之悲，喜萱堂之水（指喪父）。\n父母應得延年，可喜萱并茂（指父母全）。\n堂露冷，嘆椿樹之早凋，萱草悲秋，得王孫而抱憾（指喪父母）。\n萱花先謝，椿樹長年（指喪母）。\n縱使椿萓遐齡，定然要奉鄰家香火，以免幼年啾唧。\n縱使椿萓遐齡，於雁行中，不免折翼（指兄弟不全）。\n雖高年之福蔭，尤有小厄相驚，幼藉二親之福，依然兩暗三光。\n椿堂先敘，椿草長榮（指父死）。\n幼須前人之福。然而啾唧多端。正是南嶺種梅北嶺秀，縱然遇險保呈祥。\n先難後易，大耗守財。財輕義重，來固多，用亦不少。\n若問天倫，椿喪萱茂，論少年，不過鏡花水月。\n到晚景福份齊大。必主刑傷早見。椿萱難耐老。\n```\n\n## 軍馬篇之田宅宮\n\n```\n卜遺業之有限，自創置之豐隆。壯歲平常衣祿，晚年樂享田園。\n田宅帶ＸＸ(任何星均可套入)，能守能興。他日田園廣置，廈屋渠渠。堪為預上。\n祖蔭有些餘積，可以無饑。\n更不知他日良田萬頃，飼宇維新。\n祖業雖然甚豐厚，少年自創必興隆。\n```\n\n## 軍馬篇之財帛宮\n\n```\n財帛值ＸＸ（任何星均可套入，下同），自係揮金如土，義重如山。\n少得ＸＸ星宿照度，異日必然財生大道，實藏興焉。可創過萬之世界。\n財帛值ＸＸ凶星，早財難聚，如有ＸＸ吉星同垣，異日定堪創業。自創更豐於上代。\n又須早歲勤勞，晚年必一番作用。少年未能如意，他年獲利從心。\n財帛值天空，財多反復，喜得金匱同垣，他日定然創置。異日可卜季倫之富潤屋也。\n慣取市纏之利，必然旺處生財。\n不作文章高手，定為市井班頭。\n雖乃攀桂無緣，而許生財有道。黃卷無緣，勿以詩書求顯達，經營有道，須從商賈覓生財。\n```\n\n## 軍馬篇之遷移宮\n\n```\n出外Ｘ方（東南西北均可，下同），大利Ｘ方。不宜遷居。\n連日架薪，以金木生活為合。ＸＸ（任何星，下同）吉星守垣，郵門遇貴。來往咸亨。\n但ＸＸ同度，上落舟車，仍宜謹慎。\n一筆掃開雲漢路，三秋直上廣寒宮。\n```\n\n## 軍馬篇之官祿宮\n\n```\n吉凶混雜，生平起跌殊多。衣祿有餘，異日錦衣輕裘。而居富厚，乘肥馬，而掌軍權。\n犯ＸＸ（任何星，下同），詩書正路無緣。\n衣祿人間多有，勿向詩書爭榮辱，宜從市井逞英雄。\n若敵手持七寸管，也應才冠六鉤弓。\n名登龍虎榜，身列鳳凰池。\n詩書難謀，武力定膺爵祿。\nＸ星纏擾，求利勝於求名。\n若市井營業，定卜生財有道，必獲大利，面團團作富家翁。\n官階遠大，祿自豐饒，端木才能，億屢中，陶朱事業，富堪求。\n欣際會，而榮登政界。逢巧遇，以立奇功。\n```\n\n## 軍馬篇之福德宮\n\n```\n心有慈祥，安人濟眾。福份齊大，雖乃早歲勤勞，晚景安逸。\n論少年，不過鏡花水月，到晚景，福祿五全。\n福自身修，德建自然名立。\n```\n\n## 軍馬篇之疾厄宮\n\n```\n帶ＸＸ（任何星，下同）星宿，宜戒牛太血毒物，以免不測之災來。\n喜得ＸＸ，吉星照度，自是避凶化吉，履險如夷。\n帶ＸＸ星宿，勿入風月之場，勿貪意外之緣，生平宜謹慎，恐有意外之虞。\n防口舌之侵，疾恙不沾，無憂沉痀之苦，永無害及其身。\n可以逢凶化吉，轉禍為祥，保無隱疾侵身。\n雖有小恙，亦無大礙。宜請金水字邊先生醫理。\n須防病從口入。\n```\n\n## 軍馬篇之夫妻宮\n\n```\n孟光係賢婦，不讀詩書識禮義。常存聞範識規模。喜官星透出，受得好夫。\n印臨子位，食神顯露，亦慶亨佳兒肖子之榮。\n持家有法，婦道精乖，上能和，不能睦。\n女命身弱，主性純粹溫柔，夫賢子旺。魁罡性格多聰慧，疊疊相逢掌大權。\n蓋以女命以夫子為用，其殺為官混，到底有精神。\n在家尤利父母，出閣琴瑟調和。\n晚年安樂，自在優游，不用勞心，而衣糧自足，無須勞，而家道自成。\n金水司令而相生，火土乘時而相助，金水若相逢，必招美麗客。門庭吉，人物倍安寧。\n淚酒香腮，閨幃寂寞，獨殺成權，人有權術，非凡本領。\n子女雙生曾報兆，鬼雞齊唱竟呈祥。\n齊婦含冤，孟姜長城之哭破，二人齊到東山坑，同看紅日照東明。\n父母之喪，喪事不免，梟印奪食，難免花開花落之恨。\n未得枝枝挺秀，兒女之債，花果不一。\n女犯傷官格外嫌，帶印煞重，須防奪子。合多定損貞名，女犯傷官福不真。\n無財無印守孤貧。如在有財兼有印，好為有衣有祿人。\n花開花落無常定，月缺月圓又一輪。\n乙木者，花果之木也，藤蘿之緣，牡丹之形，依玉樹而臨風,附古木而生香。\n```\n\n## 軍馬篇之子女宮\n\n```\n好花不結因連雨，玉鏡無明為久塵。\n春至花無影，雲深月不明。\n丹桂經霜成晚子，碧桃遭雨結花遲。\n久寒草不秀，雨久花未榮。\n桃花貪結子，只恐五更霜。\n難免卜商之苦，東敗於齊。楊業大會沙灘，威風八面。\n石榴有子花應結，寶鴨與香煙怎生。\n一夕偷花人剷草，虹霓初現雨梢晴。\n```\n\n## 軍馬篇之僕役宮\n\n```\n遭ＸＸ（可套入任何星，下同）星，任用宜擇人，方能得力，切勿盡心相托，以免因人而累已。\n有受主敬賓強之義，無強奴欺主之虞。\n必須濟以因，臨以威。懷恩畏威，自無反側之虞。\n堂上一呼，堂下百諾，頤指氣使之效，呼聚喝散之權。\n生平雖享，自代其勞，待婢如意，僕役從心，指揮如意。\n```\n\n## 軍馬篇之兄弟宮\n\n```\n許昆仲而帶ＸＸ（任何星，下同）星宿，也無孫龐之意，亦無姜家大被同眠。\n連枝同氣，鴻雁成群。\nＸＸ拱照，應卜王氏三槐。\n所嫌ＸＸ，只論何家兩鳳。\n上得兄力，下得弟緣。\n伯牛之嘆，亦有相求相應，關張之盟，算來如女如足。\n```\n\n## 軍馬篇之相貌（父母）宮\n\n```\n金木相朝，明珠出海，中岳有氣，額廣顴高，晚年好景，此為相之得宜，品行端方者也。\n五官端正，三停相配，眼有神，眉有彩，三才相對，六府均合。\n雙眼睛有彩，雙眉之色有氣，是有貴子添生，乃有福之相。\n可惜金木相沖，故而先受折挫煩緒也。\n手相八卦不陷，三紋分明，終是有權，亨財帛豐厚也。\n為人純厚，交游中，有春皓月之奇，談笑間，有桃紅柳緣之趣。\n性格英明，品行超群，心靈性敏，義氣慣人，此君定是魁梧客。\n貌原非醜，其人當是小丈夫。\n人品忠直，無屈曲之心。貌如桃李之姿，心存慈悲之念。\n食神生財，定立一生之衣祿，米糧豐厚，可批一生之衣褖無虧。\n官星得命，平生衣祿有餘。\n元辰，本為人，寬洪布德，剛斷英明，胸藏大志，作事超群。\n```\n","source":"_posts/江湖秘本之军马篇.md","raw":"---\ntitle: 江湖秘本之军马篇\ntags:\n  - 算命\n  - 心理学\ncategories:\n  - 心理学\ndate: 2024-12-02 16:51:09\n---\n《軍馬篇》又稱《昆馬篇》與《英耀篇》、《扎飛篇》及《阿寶篇》同為江湖術士的騙術天書。昆馬亦寫作昆碼，有混騙、棍騙之意。因為江湖相士是靠口才吃飯的，而昆是昔日廣州俗語，意思是指欺騙的說話。《軍馬篇》是一套專業術語，只在民間流傳，難登大雅之堂。多被正統論命者唾棄。但其實用價值是很高的。\n\n求卦問卜的人一進來，相士憑著他的衣著相貌、言行舉止，洞察他來算命的主旨，明了他心裡在想些什麼，懷著什麼樣的動機來求教。在這一點弄清之前，相士不會輕易發表言論。一旦認準了對方意圖，覺得判斷無誤，就毫不猶豫，當機立斷。\n\n原文\n\n## 军马篇之命运\n\n```\n只道浮雲風送去，人間霹靂自空來。莫道小溪流水淺，須知滑石有驚人。\n莫謂途不堪走馬，應防路滑失前蹄。馬快當防平地石，舟忙宜慎水中磯。\n如火燒赤壁，曹孟德之驚魂。若兵用烏江，楚霸王之喪膽。\n只可靜坐觀風月，切勿臨淵去釣魚。周郎大破連環策，孔明臺上借東風。\n花柳場中切勿往，好比狐狸聽旨施邪術，斷送成湯六百秋。\n漫江撒下釣和線，尤恐釣出是非來。\n花花世界春三月，草草人情又一秋。惟要且勤且守，切勿妄作妄為。\n四季謀來來多阻滯，乘船騎馬實艱難。莫謂花開常鮮艷，猶恐風狂有敗枝。\n時時謹慎，步步為營。好比夜靜水寒魚不餌，滿船空載月明歸。\n不貪無所欲，守耐自然榮。一陣狂風一陣雨，半生雲霧半生煙。\n一夜風來急，草木盡低頭。六畜近來生百相，一牛兩尾少人聞。\n有所憂患，則不得免焉。高山流水少，狂風雨半天。月色虛心待，有一船軍器上營藏。\n書中生困難攀食，水上游魚易釣烹。緊陷堅牢地，須防足下浮。\n山下兩輪明月現，目前運限具文星。有貴難為貴，求敗不聚財。\n車心馬角棋休下，虎口羊腸路莫行。江水澄清翻作赤，湖波蕩漾變成紅。\n漢高著灘水，光武逢滂沱之險。華容道上逢關羽，赤壁江中遇周郎。\n青天白日雷公響，驚動愁人夜不眠。一片白雲天外望，數聲啼鳥夢中驚。\n門前枯樹倒，白鶴滿天飛。江山水渺渺，暗石在其中。\n紅血杜鵑啼不盡，綠楊鶯燕語思親。高堂冷落，萱草凄涼。\n靛房未有工師染，茅屋常多木色衣。椿枝已落，萱草猶榮。\n門前多喜慶，人事倍精神。日暖春光侵衣艷，風送花來樸鼻香。\n新月桂松梢，清風送好音。緩舒雁羽翼，輕舉蝶精神。\n萬里春光先報暖，一天秋月更增輝。天喜照臨，宜傘室家。\n喜事從天降，桂子結成雙。紹振祖宗之箕裘，開啟後人之事業。\n方寸有天堪府迎，逢人無地不生春。一派水木皆佳景，重重錦上又添花。\n春夏精神爽，秋冬大吉昌。忽然果遂真奇遇，便是男兒得志時。\n花逢春暖枝枝秀，月到秋晴夜夜光。殘花發蕊，月缺重圓。\n花開葉茂枝枝秀，嫩竹出林節節高。一番新氣象，隨遇盡亨通。\n雲收月朗家家現，雨后花前朵朵香。風和竹塢添新筍，日暖蘭階長嫩芽。\n何只丁財並進，而且人物康寧。\n脫其荊棘，乃有真景而來。財源不竭，不但利祿盈庭。\n倘言麒麟再慶，換過一翻新世界。果然不興舊時同。不但態羆入夢，而且大獲繩頭。\n昔日雲移遮朗月，今朝霧散見青天。有喜色，所謀如願。\n若遵孔孟之門，苦志蕓窗。但習陶朱之術，富有大業。\n預卜鴻圖大展之榮，財如春水朝朝至，喜似秋月夜夜光。\n一石打破青銅鏡，月裡嫦娥缺半邊。不盡祥光來眼底，無窮佳景到身前。\n美中不足生狼狽，目到浮雲空自嗟。莫言一事小，弄出大乾坤。\n滿眼兒孫增福壽，一庭少長盡安寧。玉人語燕陪君枕，肖子三槐即汝家。\n笑語家聲振，共聚一堂親。蜀地未逢司馬到，荊州已著臥龍謀。\n好風吃散浮雲去，明月照通大地光。交情渭北三春樹，生意江南二月花。\n壁玉珠還時轉泰，雲開霧散月重明。前途運去金成鐵，今日時來鐵化金。\n昨夜不知何處雨，今朝忽見滿江湖。\n禍去福生，增爾一番新氣象。時來運泰，相逢到處盡繁華。\n自古英雄，每多挫折。由來豪傑，偏受興磨。\n一翻寒澈骨，怎得梅花噴鼻香。雖有名利暢地，還防苦海生波。\n宿雲似幕難遮月，細雨如煙不損花。如昏衢得炬燭，若苦海忽遇慈航。\n得意須防失意，開眉又恐皺眉。馬逢伯樂，劍遇張華。\n立志非常早，懷才惜未伸。花開遭兩損，月色被雲迷。\n秋月雲開後，薰風雨過時。坎地番夷夏，崎嶇恐撲顛。\n發意外之財源，添歲前之秀子。財如春柳發，喜若夏蓮開。\n平地生荊棘，淺水起風波。無邊美景頻頻至，不盡財源滾滾來。\n莫道三冬無雨落，須防六月有寒時。雲散一天星斗現，風平四海波浪清。\n老梅生白玉，秋菊綻黃金。雖有名利暢地，還防霜雪相侵。\n縱有風霜犯，依然樂到好春。佳偶忽成怨偶，良緣反作孽緣。\n莫道喜中無拂意，還妨樂裡有生愁。\n```\n\n## 军马篇之双关\n\n```\n好比枯槁之木，縱逢春而不榮。茂盛之標，雖凌霜而不敗。\n雖無意外心常泰，猶有胸中內帶愁。滿徑好花人讚羨，一簾微雨客生愁。\n一枝花放門牆外，幾處人思瓶裡簪。范丹雖乃穿蕉異，一時運轉展鴻基。\n相如昔日為司馬，洪武當年去牧牛。子女雙生曾報兆，錦雞齊唱竟呈祥。\n竹影掃街塵不動，螢光燭地草難燃。一輪夜月圓還缺，幾點晨星有若無。\n好去好來還好意，多財多寶亦多男。門前八卦蚊休入，戶外三星我接來。\n浪靜風和船不動，天晴月朗客優游。為人靜處尋安樂，便是清閒一日仙。\n諸葛一生惟謹慎，呂端大事不糊塗。\n漸入佳境，如小溪流水，未得大展鴻圖。財丁兩遂，仍妨家運轉衰。\n家運支持，將功補過，只可靜而獲福，勿縱閒以生嗔。貴人得力，仍妨服色而丁憂。\n太乙臨運，應主熊羆入夢，宜慎破財為佳。一則以喜，一則以懼。\n紙花做出驚人目，好在無香在裡頭。財雖有而積聚無多。\n縱遇丁財而逢喜，難免神色以生悲。富貴草頭露，繁華瓦上霜。\n雖有志於四方，依然未伸大志。挫折在前，安逸在後。挫折大，險阻于常。\n頗得貴人關照，仍然未得暢志從心。宛如枯木逢春，雖有滋生也不榮。\n只可順風搖順槳，莫來危馬過危橋。守株待免為安穩，緣木求魚枉用功。\n雖行貴人提拔，未許十分稱懷。財之有進有退，事亦半喜半憂。\n得財誠恐失獻身，生子還妨損子。應得桑麻女，當逢吉服穿。\n平途走馬無關礙，順水行舟有逆風。衣祿有餘，起跌殊多。\n得不足以補失，喜慶能使亡憂。交脫之際，動作勿妄。\n莫道全無事，須防不測憂。\n```\n\n## 军马篇之颂扬\n\n```\n如秦樓之月，未得常光。似走盤之珠，去留未定。\n雖得鴻圖猶未展，難令如意遂君心。忽然平地一聲雷，丁財兩旺。\n隻手創成銀世界，雙拳弄出錦乾坤。貴子連添，財利重重。\n喜氣欣欣，財源疊疊。財丁兩旺，百事堪宜。\n丁財如旱曲得雨，枯木逢春。生涯占大有，美利盡成事。\n萬物看生新氣象，百般從此得精神。好風吹送巖前桂，十里人間九里花。\n雨露細滋春草長，風雲際會小陽春。有意裁花花不發，無心插柳柳成陰。\n吹開雲裡月，剔起暗中燈。用心機再謀世界，盡本事而得大財。\n運逢財氣心先爽，月到中秋分外明。春至滿園皆秀色，秋來無處不花香。\n東成西就般般合，內作外為事事亨。花紅花綠花成錦，月清月白月光明。\n平安竹報全家慶，寶貴花開遍室春。振家聲而宏駿業，逢巧遇而得其財。\n可秉大權恭大任，重重財氣，祿位高陞。秋到中天明月好，運到人間寶貴春。\n脫迷離而登大道，拔雲霧而見青天。果能發奮振雄心，定卜如意獲資財。\n海外經營多獲利，前程發達在他邦。英雄得志揚名遠，寶貴催人氣象新。\n盡力推開沙與石，用心淘得玉兼金。時運就從今日發，百花俱是此間開。\n且看巨船出大海，錦帆無恙挂西風。財如秋水朝朝滿，運比桃花日日紅。\n揚揚喜慶如春至，滾滾財源似水流。名花得雨生艷色，滿面紅顏照畫堂。\n人逢喜事精神爽，樺遇春風瑞氣香。花逢春景千般艷，月到中秋分外光。\n小小經營成厚業，微微創置可興隆。上苑奇花呈寶貴，庭前瑞草報平安。\n狂風吹散殘雲去，如雨稍晴紅日升。千里江山千里錦，一翻雨至一翻新。\n財如江上之清風，喜似山間之明月。清風明月無人管，綠水青山任意游。\n利如曉日騰雲去，財似清風送喜來。斯時幸有賢朗志，何怕南窗寄傲情。\n喜金銀之滿庫，納榖粟以盈倉。紅日初升，陰霾已散。順時而動，循序上進。\n心花怒放，未許稱心。財喜並臨，有喜有財。謹守成業，敏事慎言。\n免生煩惱，鑿石生玉。淘沙見金，惠風和暢。大有年豐，小人道長。\n甜言勿聽，見景生情。見機而作，慎勿強求。\n金鱗在手，得還妨走。有勝有敗，得足償失，無吝無譽。皓月當人，任意而為。\n忠而見疑，直而受謗。微風貶骨，冷雨侵肌。否極泰來，先否後亨，如日之升。\n大道生財，壽筳祥開。舉家暢飲，三杯不少。風光月齋。雨散雲收。\n三呼不返，一夢無回。月朗天清，花香月艷。乍暗乍明，一帆風順。\n吐氣揚眉，浮盡書散。多修厥德，福自天中。\n```\n\n## 軍馬篇之老人篇\n\n```\n大器晚成休道晚，長江有水任魚游。不特財源廣聚，自然到老生光。\n言晚福，安穩如山。論財祿，長江似水。福壽綿長安樂處，丁財並進又康寧。\n晚福更高兒女肖，晚景又盛妻妾賢。花迎麗日高低放，氣逐香風遠近聞。\n退去災殃無別意，展開心事有餘寬。財來恰似南山火，一陣高時一陣紅。\n過盡前途十八灘，任君隨意掛高帆。高處綠楊堪策馬，條條好路透長安。\n只宜再納蘭姬，子嗣定然有見。視南山之壽比，樂有嘉賓。\n賀北海之籌陳，欣多命子。無處無譽，層樓直上，到處皆亨。\n態羆許其入夢，璋兆宜男。又賦小星之慶。大謀九就皆如意。\n萬紫千紅氣象新，老驥倘懷千里志，枯桐空抱五材清\n```\n\n## 軍馬篇之小孩篇\n\n```\n根深不怕，樹大何愁。理幼而學，壯而行。如月初升，光朗可愛。少須藉椿萱之福，然而啾唧多端。\n亦可跨龍附鳳。無榮無辱。以度時光。\n```\n\n## 軍馬篇之命宮\n\n```\n命逢驛馬，非為性靜。\n嗟日落兮，靈椿早謝，歌月朗兮，萱草長榮，嗟椿樹之悲，喜萱堂之水（指喪父）。\n父母應得延年，可喜萱并茂（指父母全）。\n堂露冷，嘆椿樹之早凋，萱草悲秋，得王孫而抱憾（指喪父母）。\n萱花先謝，椿樹長年（指喪母）。\n縱使椿萓遐齡，定然要奉鄰家香火，以免幼年啾唧。\n縱使椿萓遐齡，於雁行中，不免折翼（指兄弟不全）。\n雖高年之福蔭，尤有小厄相驚，幼藉二親之福，依然兩暗三光。\n椿堂先敘，椿草長榮（指父死）。\n幼須前人之福。然而啾唧多端。正是南嶺種梅北嶺秀，縱然遇險保呈祥。\n先難後易，大耗守財。財輕義重，來固多，用亦不少。\n若問天倫，椿喪萱茂，論少年，不過鏡花水月。\n到晚景福份齊大。必主刑傷早見。椿萱難耐老。\n```\n\n## 軍馬篇之田宅宮\n\n```\n卜遺業之有限，自創置之豐隆。壯歲平常衣祿，晚年樂享田園。\n田宅帶ＸＸ(任何星均可套入)，能守能興。他日田園廣置，廈屋渠渠。堪為預上。\n祖蔭有些餘積，可以無饑。\n更不知他日良田萬頃，飼宇維新。\n祖業雖然甚豐厚，少年自創必興隆。\n```\n\n## 軍馬篇之財帛宮\n\n```\n財帛值ＸＸ（任何星均可套入，下同），自係揮金如土，義重如山。\n少得ＸＸ星宿照度，異日必然財生大道，實藏興焉。可創過萬之世界。\n財帛值ＸＸ凶星，早財難聚，如有ＸＸ吉星同垣，異日定堪創業。自創更豐於上代。\n又須早歲勤勞，晚年必一番作用。少年未能如意，他年獲利從心。\n財帛值天空，財多反復，喜得金匱同垣，他日定然創置。異日可卜季倫之富潤屋也。\n慣取市纏之利，必然旺處生財。\n不作文章高手，定為市井班頭。\n雖乃攀桂無緣，而許生財有道。黃卷無緣，勿以詩書求顯達，經營有道，須從商賈覓生財。\n```\n\n## 軍馬篇之遷移宮\n\n```\n出外Ｘ方（東南西北均可，下同），大利Ｘ方。不宜遷居。\n連日架薪，以金木生活為合。ＸＸ（任何星，下同）吉星守垣，郵門遇貴。來往咸亨。\n但ＸＸ同度，上落舟車，仍宜謹慎。\n一筆掃開雲漢路，三秋直上廣寒宮。\n```\n\n## 軍馬篇之官祿宮\n\n```\n吉凶混雜，生平起跌殊多。衣祿有餘，異日錦衣輕裘。而居富厚，乘肥馬，而掌軍權。\n犯ＸＸ（任何星，下同），詩書正路無緣。\n衣祿人間多有，勿向詩書爭榮辱，宜從市井逞英雄。\n若敵手持七寸管，也應才冠六鉤弓。\n名登龍虎榜，身列鳳凰池。\n詩書難謀，武力定膺爵祿。\nＸ星纏擾，求利勝於求名。\n若市井營業，定卜生財有道，必獲大利，面團團作富家翁。\n官階遠大，祿自豐饒，端木才能，億屢中，陶朱事業，富堪求。\n欣際會，而榮登政界。逢巧遇，以立奇功。\n```\n\n## 軍馬篇之福德宮\n\n```\n心有慈祥，安人濟眾。福份齊大，雖乃早歲勤勞，晚景安逸。\n論少年，不過鏡花水月，到晚景，福祿五全。\n福自身修，德建自然名立。\n```\n\n## 軍馬篇之疾厄宮\n\n```\n帶ＸＸ（任何星，下同）星宿，宜戒牛太血毒物，以免不測之災來。\n喜得ＸＸ，吉星照度，自是避凶化吉，履險如夷。\n帶ＸＸ星宿，勿入風月之場，勿貪意外之緣，生平宜謹慎，恐有意外之虞。\n防口舌之侵，疾恙不沾，無憂沉痀之苦，永無害及其身。\n可以逢凶化吉，轉禍為祥，保無隱疾侵身。\n雖有小恙，亦無大礙。宜請金水字邊先生醫理。\n須防病從口入。\n```\n\n## 軍馬篇之夫妻宮\n\n```\n孟光係賢婦，不讀詩書識禮義。常存聞範識規模。喜官星透出，受得好夫。\n印臨子位，食神顯露，亦慶亨佳兒肖子之榮。\n持家有法，婦道精乖，上能和，不能睦。\n女命身弱，主性純粹溫柔，夫賢子旺。魁罡性格多聰慧，疊疊相逢掌大權。\n蓋以女命以夫子為用，其殺為官混，到底有精神。\n在家尤利父母，出閣琴瑟調和。\n晚年安樂，自在優游，不用勞心，而衣糧自足，無須勞，而家道自成。\n金水司令而相生，火土乘時而相助，金水若相逢，必招美麗客。門庭吉，人物倍安寧。\n淚酒香腮，閨幃寂寞，獨殺成權，人有權術，非凡本領。\n子女雙生曾報兆，鬼雞齊唱竟呈祥。\n齊婦含冤，孟姜長城之哭破，二人齊到東山坑，同看紅日照東明。\n父母之喪，喪事不免，梟印奪食，難免花開花落之恨。\n未得枝枝挺秀，兒女之債，花果不一。\n女犯傷官格外嫌，帶印煞重，須防奪子。合多定損貞名，女犯傷官福不真。\n無財無印守孤貧。如在有財兼有印，好為有衣有祿人。\n花開花落無常定，月缺月圓又一輪。\n乙木者，花果之木也，藤蘿之緣，牡丹之形，依玉樹而臨風,附古木而生香。\n```\n\n## 軍馬篇之子女宮\n\n```\n好花不結因連雨，玉鏡無明為久塵。\n春至花無影，雲深月不明。\n丹桂經霜成晚子，碧桃遭雨結花遲。\n久寒草不秀，雨久花未榮。\n桃花貪結子，只恐五更霜。\n難免卜商之苦，東敗於齊。楊業大會沙灘，威風八面。\n石榴有子花應結，寶鴨與香煙怎生。\n一夕偷花人剷草，虹霓初現雨梢晴。\n```\n\n## 軍馬篇之僕役宮\n\n```\n遭ＸＸ（可套入任何星，下同）星，任用宜擇人，方能得力，切勿盡心相托，以免因人而累已。\n有受主敬賓強之義，無強奴欺主之虞。\n必須濟以因，臨以威。懷恩畏威，自無反側之虞。\n堂上一呼，堂下百諾，頤指氣使之效，呼聚喝散之權。\n生平雖享，自代其勞，待婢如意，僕役從心，指揮如意。\n```\n\n## 軍馬篇之兄弟宮\n\n```\n許昆仲而帶ＸＸ（任何星，下同）星宿，也無孫龐之意，亦無姜家大被同眠。\n連枝同氣，鴻雁成群。\nＸＸ拱照，應卜王氏三槐。\n所嫌ＸＸ，只論何家兩鳳。\n上得兄力，下得弟緣。\n伯牛之嘆，亦有相求相應，關張之盟，算來如女如足。\n```\n\n## 軍馬篇之相貌（父母）宮\n\n```\n金木相朝，明珠出海，中岳有氣，額廣顴高，晚年好景，此為相之得宜，品行端方者也。\n五官端正，三停相配，眼有神，眉有彩，三才相對，六府均合。\n雙眼睛有彩，雙眉之色有氣，是有貴子添生，乃有福之相。\n可惜金木相沖，故而先受折挫煩緒也。\n手相八卦不陷，三紋分明，終是有權，亨財帛豐厚也。\n為人純厚，交游中，有春皓月之奇，談笑間，有桃紅柳緣之趣。\n性格英明，品行超群，心靈性敏，義氣慣人，此君定是魁梧客。\n貌原非醜，其人當是小丈夫。\n人品忠直，無屈曲之心。貌如桃李之姿，心存慈悲之念。\n食神生財，定立一生之衣祿，米糧豐厚，可批一生之衣褖無虧。\n官星得命，平生衣祿有餘。\n元辰，本為人，寬洪布德，剛斷英明，胸藏大志，作事超群。\n```\n","slug":"江湖秘本之军马篇","published":1,"updated":"2024-12-02T09:03:05.806Z","_id":"cm46sw0550001g4v4dgmt4h41","comments":1,"layout":"post","photos":[],"content":"<p>《軍馬篇》又稱《昆馬篇》與《英耀篇》、《扎飛篇》及《阿寶篇》同為江湖術士的騙術天書。昆馬亦寫作昆碼，有混騙、棍騙之意。因為江湖相士是靠口才吃飯的，而昆是昔日廣州俗語，意思是指欺騙的說話。《軍馬篇》是一套專業術語，只在民間流傳，難登大雅之堂。多被正統論命者唾棄。但其實用價值是很高的。</p>\n<p>求卦問卜的人一進來，相士憑著他的衣著相貌、言行舉止，洞察他來算命的主旨，明了他心裡在想些什麼，懷著什麼樣的動機來求教。在這一點弄清之前，相士不會輕易發表言論。一旦認準了對方意圖，覺得判斷無誤，就毫不猶豫，當機立斷。</p>\n<p>原文</p>\n<h2 id=\"军马篇之命运\"><a href=\"#军马篇之命运\" class=\"headerlink\" title=\"军马篇之命运\"></a>军马篇之命运</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">只道浮雲風送去，人間霹靂自空來。莫道小溪流水淺，須知滑石有驚人。<br>莫謂途不堪走馬，應防路滑失前蹄。馬快當防平地石，舟忙宜慎水中磯。<br>如火燒赤壁，曹孟德之驚魂。若兵用烏江，楚霸王之喪膽。<br>只可靜坐觀風月，切勿臨淵去釣魚。周郎大破連環策，孔明臺上借東風。<br>花柳場中切勿往，好比狐狸聽旨施邪術，斷送成湯六百秋。<br>漫江撒下釣和線，尤恐釣出是非來。<br>花花世界春三月，草草人情又一秋。惟要且勤且守，切勿妄作妄為。<br>四季謀來來多阻滯，乘船騎馬實艱難。莫謂花開常鮮艷，猶恐風狂有敗枝。<br>時時謹慎，步步為營。好比夜靜水寒魚不餌，滿船空載月明歸。<br>不貪無所欲，守耐自然榮。一陣狂風一陣雨，半生雲霧半生煙。<br>一夜風來急，草木盡低頭。六畜近來生百相，一牛兩尾少人聞。<br>有所憂患，則不得免焉。高山流水少，狂風雨半天。月色虛心待，有一船軍器上營藏。<br>書中生困難攀食，水上游魚易釣烹。緊陷堅牢地，須防足下浮。<br>山下兩輪明月現，目前運限具文星。有貴難為貴，求敗不聚財。<br>車心馬角棋休下，虎口羊腸路莫行。江水澄清翻作赤，湖波蕩漾變成紅。<br>漢高著灘水，光武逢滂沱之險。華容道上逢關羽，赤壁江中遇周郎。<br>青天白日雷公響，驚動愁人夜不眠。一片白雲天外望，數聲啼鳥夢中驚。<br>門前枯樹倒，白鶴滿天飛。江山水渺渺，暗石在其中。<br>紅血杜鵑啼不盡，綠楊鶯燕語思親。高堂冷落，萱草凄涼。<br>靛房未有工師染，茅屋常多木色衣。椿枝已落，萱草猶榮。<br>門前多喜慶，人事倍精神。日暖春光侵衣艷，風送花來樸鼻香。<br>新月桂松梢，清風送好音。緩舒雁羽翼，輕舉蝶精神。<br>萬里春光先報暖，一天秋月更增輝。天喜照臨，宜傘室家。<br>喜事從天降，桂子結成雙。紹振祖宗之箕裘，開啟後人之事業。<br>方寸有天堪府迎，逢人無地不生春。一派水木皆佳景，重重錦上又添花。<br>春夏精神爽，秋冬大吉昌。忽然果遂真奇遇，便是男兒得志時。<br>花逢春暖枝枝秀，月到秋晴夜夜光。殘花發蕊，月缺重圓。<br>花開葉茂枝枝秀，嫩竹出林節節高。一番新氣象，隨遇盡亨通。<br>雲收月朗家家現，雨后花前朵朵香。風和竹塢添新筍，日暖蘭階長嫩芽。<br>何只丁財並進，而且人物康寧。<br>脫其荊棘，乃有真景而來。財源不竭，不但利祿盈庭。<br>倘言麒麟再慶，換過一翻新世界。果然不興舊時同。不但態羆入夢，而且大獲繩頭。<br>昔日雲移遮朗月，今朝霧散見青天。有喜色，所謀如願。<br>若遵孔孟之門，苦志蕓窗。但習陶朱之術，富有大業。<br>預卜鴻圖大展之榮，財如春水朝朝至，喜似秋月夜夜光。<br>一石打破青銅鏡，月裡嫦娥缺半邊。不盡祥光來眼底，無窮佳景到身前。<br>美中不足生狼狽，目到浮雲空自嗟。莫言一事小，弄出大乾坤。<br>滿眼兒孫增福壽，一庭少長盡安寧。玉人語燕陪君枕，肖子三槐即汝家。<br>笑語家聲振，共聚一堂親。蜀地未逢司馬到，荊州已著臥龍謀。<br>好風吃散浮雲去，明月照通大地光。交情渭北三春樹，生意江南二月花。<br>壁玉珠還時轉泰，雲開霧散月重明。前途運去金成鐵，今日時來鐵化金。<br>昨夜不知何處雨，今朝忽見滿江湖。<br>禍去福生，增爾一番新氣象。時來運泰，相逢到處盡繁華。<br>自古英雄，每多挫折。由來豪傑，偏受興磨。<br>一翻寒澈骨，怎得梅花噴鼻香。雖有名利暢地，還防苦海生波。<br>宿雲似幕難遮月，細雨如煙不損花。如昏衢得炬燭，若苦海忽遇慈航。<br>得意須防失意，開眉又恐皺眉。馬逢伯樂，劍遇張華。<br>立志非常早，懷才惜未伸。花開遭兩損，月色被雲迷。<br>秋月雲開後，薰風雨過時。坎地番夷夏，崎嶇恐撲顛。<br>發意外之財源，添歲前之秀子。財如春柳發，喜若夏蓮開。<br>平地生荊棘，淺水起風波。無邊美景頻頻至，不盡財源滾滾來。<br>莫道三冬無雨落，須防六月有寒時。雲散一天星斗現，風平四海波浪清。<br>老梅生白玉，秋菊綻黃金。雖有名利暢地，還防霜雪相侵。<br>縱有風霜犯，依然樂到好春。佳偶忽成怨偶，良緣反作孽緣。<br>莫道喜中無拂意，還妨樂裡有生愁。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"军马篇之双关\"><a href=\"#军马篇之双关\" class=\"headerlink\" title=\"军马篇之双关\"></a>军马篇之双关</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">好比枯槁之木，縱逢春而不榮。茂盛之標，雖凌霜而不敗。<br>雖無意外心常泰，猶有胸中內帶愁。滿徑好花人讚羨，一簾微雨客生愁。<br>一枝花放門牆外，幾處人思瓶裡簪。范丹雖乃穿蕉異，一時運轉展鴻基。<br>相如昔日為司馬，洪武當年去牧牛。子女雙生曾報兆，錦雞齊唱竟呈祥。<br>竹影掃街塵不動，螢光燭地草難燃。一輪夜月圓還缺，幾點晨星有若無。<br>好去好來還好意，多財多寶亦多男。門前八卦蚊休入，戶外三星我接來。<br>浪靜風和船不動，天晴月朗客優游。為人靜處尋安樂，便是清閒一日仙。<br>諸葛一生惟謹慎，呂端大事不糊塗。<br>漸入佳境，如小溪流水，未得大展鴻圖。財丁兩遂，仍妨家運轉衰。<br>家運支持，將功補過，只可靜而獲福，勿縱閒以生嗔。貴人得力，仍妨服色而丁憂。<br>太乙臨運，應主熊羆入夢，宜慎破財為佳。一則以喜，一則以懼。<br>紙花做出驚人目，好在無香在裡頭。財雖有而積聚無多。<br>縱遇丁財而逢喜，難免神色以生悲。富貴草頭露，繁華瓦上霜。<br>雖有志於四方，依然未伸大志。挫折在前，安逸在後。挫折大，險阻于常。<br>頗得貴人關照，仍然未得暢志從心。宛如枯木逢春，雖有滋生也不榮。<br>只可順風搖順槳，莫來危馬過危橋。守株待免為安穩，緣木求魚枉用功。<br>雖行貴人提拔，未許十分稱懷。財之有進有退，事亦半喜半憂。<br>得財誠恐失獻身，生子還妨損子。應得桑麻女，當逢吉服穿。<br>平途走馬無關礙，順水行舟有逆風。衣祿有餘，起跌殊多。<br>得不足以補失，喜慶能使亡憂。交脫之際，動作勿妄。<br>莫道全無事，須防不測憂。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"军马篇之颂扬\"><a href=\"#军马篇之颂扬\" class=\"headerlink\" title=\"军马篇之颂扬\"></a>军马篇之颂扬</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">如秦樓之月，未得常光。似走盤之珠，去留未定。<br>雖得鴻圖猶未展，難令如意遂君心。忽然平地一聲雷，丁財兩旺。<br>隻手創成銀世界，雙拳弄出錦乾坤。貴子連添，財利重重。<br>喜氣欣欣，財源疊疊。財丁兩旺，百事堪宜。<br>丁財如旱曲得雨，枯木逢春。生涯占大有，美利盡成事。<br>萬物看生新氣象，百般從此得精神。好風吹送巖前桂，十里人間九里花。<br>雨露細滋春草長，風雲際會小陽春。有意裁花花不發，無心插柳柳成陰。<br>吹開雲裡月，剔起暗中燈。用心機再謀世界，盡本事而得大財。<br>運逢財氣心先爽，月到中秋分外明。春至滿園皆秀色，秋來無處不花香。<br>東成西就般般合，內作外為事事亨。花紅花綠花成錦，月清月白月光明。<br>平安竹報全家慶，寶貴花開遍室春。振家聲而宏駿業，逢巧遇而得其財。<br>可秉大權恭大任，重重財氣，祿位高陞。秋到中天明月好，運到人間寶貴春。<br>脫迷離而登大道，拔雲霧而見青天。果能發奮振雄心，定卜如意獲資財。<br>海外經營多獲利，前程發達在他邦。英雄得志揚名遠，寶貴催人氣象新。<br>盡力推開沙與石，用心淘得玉兼金。時運就從今日發，百花俱是此間開。<br>且看巨船出大海，錦帆無恙挂西風。財如秋水朝朝滿，運比桃花日日紅。<br>揚揚喜慶如春至，滾滾財源似水流。名花得雨生艷色，滿面紅顏照畫堂。<br>人逢喜事精神爽，樺遇春風瑞氣香。花逢春景千般艷，月到中秋分外光。<br>小小經營成厚業，微微創置可興隆。上苑奇花呈寶貴，庭前瑞草報平安。<br>狂風吹散殘雲去，如雨稍晴紅日升。千里江山千里錦，一翻雨至一翻新。<br>財如江上之清風，喜似山間之明月。清風明月無人管，綠水青山任意游。<br>利如曉日騰雲去，財似清風送喜來。斯時幸有賢朗志，何怕南窗寄傲情。<br>喜金銀之滿庫，納榖粟以盈倉。紅日初升，陰霾已散。順時而動，循序上進。<br>心花怒放，未許稱心。財喜並臨，有喜有財。謹守成業，敏事慎言。<br>免生煩惱，鑿石生玉。淘沙見金，惠風和暢。大有年豐，小人道長。<br>甜言勿聽，見景生情。見機而作，慎勿強求。<br>金鱗在手，得還妨走。有勝有敗，得足償失，無吝無譽。皓月當人，任意而為。<br>忠而見疑，直而受謗。微風貶骨，冷雨侵肌。否極泰來，先否後亨，如日之升。<br>大道生財，壽筳祥開。舉家暢飲，三杯不少。風光月齋。雨散雲收。<br>三呼不返，一夢無回。月朗天清，花香月艷。乍暗乍明，一帆風順。<br>吐氣揚眉，浮盡書散。多修厥德，福自天中。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之老人篇\"><a href=\"#軍馬篇之老人篇\" class=\"headerlink\" title=\"軍馬篇之老人篇\"></a>軍馬篇之老人篇</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">大器晚成休道晚，長江有水任魚游。不特財源廣聚，自然到老生光。<br>言晚福，安穩如山。論財祿，長江似水。福壽綿長安樂處，丁財並進又康寧。<br>晚福更高兒女肖，晚景又盛妻妾賢。花迎麗日高低放，氣逐香風遠近聞。<br>退去災殃無別意，展開心事有餘寬。財來恰似南山火，一陣高時一陣紅。<br>過盡前途十八灘，任君隨意掛高帆。高處綠楊堪策馬，條條好路透長安。<br>只宜再納蘭姬，子嗣定然有見。視南山之壽比，樂有嘉賓。<br>賀北海之籌陳，欣多命子。無處無譽，層樓直上，到處皆亨。<br>態羆許其入夢，璋兆宜男。又賦小星之慶。大謀九就皆如意。<br>萬紫千紅氣象新，老驥倘懷千里志，枯桐空抱五材清<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之小孩篇\"><a href=\"#軍馬篇之小孩篇\" class=\"headerlink\" title=\"軍馬篇之小孩篇\"></a>軍馬篇之小孩篇</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">根深不怕，樹大何愁。理幼而學，壯而行。如月初升，光朗可愛。少須藉椿萱之福，然而啾唧多端。<br>亦可跨龍附鳳。無榮無辱。以度時光。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之命宮\"><a href=\"#軍馬篇之命宮\" class=\"headerlink\" title=\"軍馬篇之命宮\"></a>軍馬篇之命宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">命逢驛馬，非為性靜。<br>嗟日落兮，靈椿早謝，歌月朗兮，萱草長榮，嗟椿樹之悲，喜萱堂之水（指喪父）。<br>父母應得延年，可喜萱并茂（指父母全）。<br>堂露冷，嘆椿樹之早凋，萱草悲秋，得王孫而抱憾（指喪父母）。<br>萱花先謝，椿樹長年（指喪母）。<br>縱使椿萓遐齡，定然要奉鄰家香火，以免幼年啾唧。<br>縱使椿萓遐齡，於雁行中，不免折翼（指兄弟不全）。<br>雖高年之福蔭，尤有小厄相驚，幼藉二親之福，依然兩暗三光。<br>椿堂先敘，椿草長榮（指父死）。<br>幼須前人之福。然而啾唧多端。正是南嶺種梅北嶺秀，縱然遇險保呈祥。<br>先難後易，大耗守財。財輕義重，來固多，用亦不少。<br>若問天倫，椿喪萱茂，論少年，不過鏡花水月。<br>到晚景福份齊大。必主刑傷早見。椿萱難耐老。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之田宅宮\"><a href=\"#軍馬篇之田宅宮\" class=\"headerlink\" title=\"軍馬篇之田宅宮\"></a>軍馬篇之田宅宮</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gcode\">卜遺業之有限，自創置之豐隆。壯歲平常衣祿，晚年樂享田園。<br>田宅帶ＸＸ<span class=\"hljs-comment\">(任何星均可套入)</span>，能守能興。他日田園廣置，廈屋渠渠。堪為預上。<br>祖蔭有些餘積，可以無饑。<br>更不知他日良田萬頃，飼宇維新。<br>祖業雖然甚豐厚，少年自創必興隆。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之財帛宮\"><a href=\"#軍馬篇之財帛宮\" class=\"headerlink\" title=\"軍馬篇之財帛宮\"></a>軍馬篇之財帛宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">財帛值ＸＸ（任何星均可套入，下同），自係揮金如土，義重如山。<br>少得ＸＸ星宿照度，異日必然財生大道，實藏興焉。可創過萬之世界。<br>財帛值ＸＸ凶星，早財難聚，如有ＸＸ吉星同垣，異日定堪創業。自創更豐於上代。<br>又須早歲勤勞，晚年必一番作用。少年未能如意，他年獲利從心。<br>財帛值天空，財多反復，喜得金匱同垣，他日定然創置。異日可卜季倫之富潤屋也。<br>慣取市纏之利，必然旺處生財。<br>不作文章高手，定為市井班頭。<br>雖乃攀桂無緣，而許生財有道。黃卷無緣，勿以詩書求顯達，經營有道，須從商賈覓生財。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之遷移宮\"><a href=\"#軍馬篇之遷移宮\" class=\"headerlink\" title=\"軍馬篇之遷移宮\"></a>軍馬篇之遷移宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">出外Ｘ方（東南西北均可，下同），大利Ｘ方。不宜遷居。<br>連日架薪，以金木生活為合。ＸＸ（任何星，下同）吉星守垣，郵門遇貴。來往咸亨。<br>但ＸＸ同度，上落舟車，仍宜謹慎。<br>一筆掃開雲漢路，三秋直上廣寒宮。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之官祿宮\"><a href=\"#軍馬篇之官祿宮\" class=\"headerlink\" title=\"軍馬篇之官祿宮\"></a>軍馬篇之官祿宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">吉凶混雜，生平起跌殊多。衣祿有餘，異日錦衣輕裘。而居富厚，乘肥馬，而掌軍權。<br>犯ＸＸ（任何星，下同），詩書正路無緣。<br>衣祿人間多有，勿向詩書爭榮辱，宜從市井逞英雄。<br>若敵手持七寸管，也應才冠六鉤弓。<br>名登龍虎榜，身列鳳凰池。<br>詩書難謀，武力定膺爵祿。<br>Ｘ星纏擾，求利勝於求名。<br>若市井營業，定卜生財有道，必獲大利，面團團作富家翁。<br>官階遠大，祿自豐饒，端木才能，億屢中，陶朱事業，富堪求。<br>欣際會，而榮登政界。逢巧遇，以立奇功。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之福德宮\"><a href=\"#軍馬篇之福德宮\" class=\"headerlink\" title=\"軍馬篇之福德宮\"></a>軍馬篇之福德宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">心有慈祥，安人濟眾。福份齊大，雖乃早歲勤勞，晚景安逸。<br>論少年，不過鏡花水月，到晚景，福祿五全。<br>福自身修，德建自然名立。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之疾厄宮\"><a href=\"#軍馬篇之疾厄宮\" class=\"headerlink\" title=\"軍馬篇之疾厄宮\"></a>軍馬篇之疾厄宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">帶ＸＸ（任何星，下同）星宿，宜戒牛太血毒物，以免不測之災來。<br>喜得ＸＸ，吉星照度，自是避凶化吉，履險如夷。<br>帶ＸＸ星宿，勿入風月之場，勿貪意外之緣，生平宜謹慎，恐有意外之虞。<br>防口舌之侵，疾恙不沾，無憂沉痀之苦，永無害及其身。<br>可以逢凶化吉，轉禍為祥，保無隱疾侵身。<br>雖有小恙，亦無大礙。宜請金水字邊先生醫理。<br>須防病從口入。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之夫妻宮\"><a href=\"#軍馬篇之夫妻宮\" class=\"headerlink\" title=\"軍馬篇之夫妻宮\"></a>軍馬篇之夫妻宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">孟光係賢婦，不讀詩書識禮義。常存聞範識規模。喜官星透出，受得好夫。<br>印臨子位，食神顯露，亦慶亨佳兒肖子之榮。<br>持家有法，婦道精乖，上能和，不能睦。<br>女命身弱，主性純粹溫柔，夫賢子旺。魁罡性格多聰慧，疊疊相逢掌大權。<br>蓋以女命以夫子為用，其殺為官混，到底有精神。<br>在家尤利父母，出閣琴瑟調和。<br>晚年安樂，自在優游，不用勞心，而衣糧自足，無須勞，而家道自成。<br>金水司令而相生，火土乘時而相助，金水若相逢，必招美麗客。門庭吉，人物倍安寧。<br>淚酒香腮，閨幃寂寞，獨殺成權，人有權術，非凡本領。<br>子女雙生曾報兆，鬼雞齊唱竟呈祥。<br>齊婦含冤，孟姜長城之哭破，二人齊到東山坑，同看紅日照東明。<br>父母之喪，喪事不免，梟印奪食，難免花開花落之恨。<br>未得枝枝挺秀，兒女之債，花果不一。<br>女犯傷官格外嫌，帶印煞重，須防奪子。合多定損貞名，女犯傷官福不真。<br>無財無印守孤貧。如在有財兼有印，好為有衣有祿人。<br>花開花落無常定，月缺月圓又一輪。<br>乙木者，花果之木也，藤蘿之緣，牡丹之形，依玉樹而臨風,附古木而生香。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之子女宮\"><a href=\"#軍馬篇之子女宮\" class=\"headerlink\" title=\"軍馬篇之子女宮\"></a>軍馬篇之子女宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">好花不結因連雨，玉鏡無明為久塵。<br>春至花無影，雲深月不明。<br>丹桂經霜成晚子，碧桃遭雨結花遲。<br>久寒草不秀，雨久花未榮。<br>桃花貪結子，只恐五更霜。<br>難免卜商之苦，東敗於齊。楊業大會沙灘，威風八面。<br>石榴有子花應結，寶鴨與香煙怎生。<br>一夕偷花人剷草，虹霓初現雨梢晴。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之僕役宮\"><a href=\"#軍馬篇之僕役宮\" class=\"headerlink\" title=\"軍馬篇之僕役宮\"></a>軍馬篇之僕役宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">遭ＸＸ（可套入任何星，下同）星，任用宜擇人，方能得力，切勿盡心相托，以免因人而累已。<br>有受主敬賓強之義，無強奴欺主之虞。<br>必須濟以因，臨以威。懷恩畏威，自無反側之虞。<br>堂上一呼，堂下百諾，頤指氣使之效，呼聚喝散之權。<br>生平雖享，自代其勞，待婢如意，僕役從心，指揮如意。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之兄弟宮\"><a href=\"#軍馬篇之兄弟宮\" class=\"headerlink\" title=\"軍馬篇之兄弟宮\"></a>軍馬篇之兄弟宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">許昆仲而帶ＸＸ（任何星，下同）星宿，也無孫龐之意，亦無姜家大被同眠。<br>連枝同氣，鴻雁成群。<br>ＸＸ拱照，應卜王氏三槐。<br>所嫌ＸＸ，只論何家兩鳳。<br>上得兄力，下得弟緣。<br>伯牛之嘆，亦有相求相應，關張之盟，算來如女如足。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之相貌（父母）宮\"><a href=\"#軍馬篇之相貌（父母）宮\" class=\"headerlink\" title=\"軍馬篇之相貌（父母）宮\"></a>軍馬篇之相貌（父母）宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">金木相朝，明珠出海，中岳有氣，額廣顴高，晚年好景，此為相之得宜，品行端方者也。<br>五官端正，三停相配，眼有神，眉有彩，三才相對，六府均合。<br>雙眼睛有彩，雙眉之色有氣，是有貴子添生，乃有福之相。<br>可惜金木相沖，故而先受折挫煩緒也。<br>手相八卦不陷，三紋分明，終是有權，亨財帛豐厚也。<br>為人純厚，交游中，有春皓月之奇，談笑間，有桃紅柳緣之趣。<br>性格英明，品行超群，心靈性敏，義氣慣人，此君定是魁梧客。<br>貌原非醜，其人當是小丈夫。<br>人品忠直，無屈曲之心。貌如桃李之姿，心存慈悲之念。<br>食神生財，定立一生之衣祿，米糧豐厚，可批一生之衣褖無虧。<br>官星得命，平生衣祿有餘。<br>元辰，本為人，寬洪布德，剛斷英明，胸藏大志，作事超群。<br></code></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>《軍馬篇》又稱《昆馬篇》與《英耀篇》、《扎飛篇》及《阿寶篇》同為江湖術士的騙術天書。昆馬亦寫作昆碼，有混騙、棍騙之意。因為江湖相士是靠口才吃飯的，而昆是昔日廣州俗語，意思是指欺騙的說話。《軍馬篇》是一套專業術語，只在民間流傳，難登大雅之堂。多被正統論命者唾棄。但其實用價值是很高的。</p>\n<p>求卦問卜的人一進來，相士憑著他的衣著相貌、言行舉止，洞察他來算命的主旨，明了他心裡在想些什麼，懷著什麼樣的動機來求教。在這一點弄清之前，相士不會輕易發表言論。一旦認準了對方意圖，覺得判斷無誤，就毫不猶豫，當機立斷。</p>\n<p>原文</p>\n<h2 id=\"军马篇之命运\"><a href=\"#军马篇之命运\" class=\"headerlink\" title=\"军马篇之命运\"></a>军马篇之命运</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">只道浮雲風送去，人間霹靂自空來。莫道小溪流水淺，須知滑石有驚人。<br>莫謂途不堪走馬，應防路滑失前蹄。馬快當防平地石，舟忙宜慎水中磯。<br>如火燒赤壁，曹孟德之驚魂。若兵用烏江，楚霸王之喪膽。<br>只可靜坐觀風月，切勿臨淵去釣魚。周郎大破連環策，孔明臺上借東風。<br>花柳場中切勿往，好比狐狸聽旨施邪術，斷送成湯六百秋。<br>漫江撒下釣和線，尤恐釣出是非來。<br>花花世界春三月，草草人情又一秋。惟要且勤且守，切勿妄作妄為。<br>四季謀來來多阻滯，乘船騎馬實艱難。莫謂花開常鮮艷，猶恐風狂有敗枝。<br>時時謹慎，步步為營。好比夜靜水寒魚不餌，滿船空載月明歸。<br>不貪無所欲，守耐自然榮。一陣狂風一陣雨，半生雲霧半生煙。<br>一夜風來急，草木盡低頭。六畜近來生百相，一牛兩尾少人聞。<br>有所憂患，則不得免焉。高山流水少，狂風雨半天。月色虛心待，有一船軍器上營藏。<br>書中生困難攀食，水上游魚易釣烹。緊陷堅牢地，須防足下浮。<br>山下兩輪明月現，目前運限具文星。有貴難為貴，求敗不聚財。<br>車心馬角棋休下，虎口羊腸路莫行。江水澄清翻作赤，湖波蕩漾變成紅。<br>漢高著灘水，光武逢滂沱之險。華容道上逢關羽，赤壁江中遇周郎。<br>青天白日雷公響，驚動愁人夜不眠。一片白雲天外望，數聲啼鳥夢中驚。<br>門前枯樹倒，白鶴滿天飛。江山水渺渺，暗石在其中。<br>紅血杜鵑啼不盡，綠楊鶯燕語思親。高堂冷落，萱草凄涼。<br>靛房未有工師染，茅屋常多木色衣。椿枝已落，萱草猶榮。<br>門前多喜慶，人事倍精神。日暖春光侵衣艷，風送花來樸鼻香。<br>新月桂松梢，清風送好音。緩舒雁羽翼，輕舉蝶精神。<br>萬里春光先報暖，一天秋月更增輝。天喜照臨，宜傘室家。<br>喜事從天降，桂子結成雙。紹振祖宗之箕裘，開啟後人之事業。<br>方寸有天堪府迎，逢人無地不生春。一派水木皆佳景，重重錦上又添花。<br>春夏精神爽，秋冬大吉昌。忽然果遂真奇遇，便是男兒得志時。<br>花逢春暖枝枝秀，月到秋晴夜夜光。殘花發蕊，月缺重圓。<br>花開葉茂枝枝秀，嫩竹出林節節高。一番新氣象，隨遇盡亨通。<br>雲收月朗家家現，雨后花前朵朵香。風和竹塢添新筍，日暖蘭階長嫩芽。<br>何只丁財並進，而且人物康寧。<br>脫其荊棘，乃有真景而來。財源不竭，不但利祿盈庭。<br>倘言麒麟再慶，換過一翻新世界。果然不興舊時同。不但態羆入夢，而且大獲繩頭。<br>昔日雲移遮朗月，今朝霧散見青天。有喜色，所謀如願。<br>若遵孔孟之門，苦志蕓窗。但習陶朱之術，富有大業。<br>預卜鴻圖大展之榮，財如春水朝朝至，喜似秋月夜夜光。<br>一石打破青銅鏡，月裡嫦娥缺半邊。不盡祥光來眼底，無窮佳景到身前。<br>美中不足生狼狽，目到浮雲空自嗟。莫言一事小，弄出大乾坤。<br>滿眼兒孫增福壽，一庭少長盡安寧。玉人語燕陪君枕，肖子三槐即汝家。<br>笑語家聲振，共聚一堂親。蜀地未逢司馬到，荊州已著臥龍謀。<br>好風吃散浮雲去，明月照通大地光。交情渭北三春樹，生意江南二月花。<br>壁玉珠還時轉泰，雲開霧散月重明。前途運去金成鐵，今日時來鐵化金。<br>昨夜不知何處雨，今朝忽見滿江湖。<br>禍去福生，增爾一番新氣象。時來運泰，相逢到處盡繁華。<br>自古英雄，每多挫折。由來豪傑，偏受興磨。<br>一翻寒澈骨，怎得梅花噴鼻香。雖有名利暢地，還防苦海生波。<br>宿雲似幕難遮月，細雨如煙不損花。如昏衢得炬燭，若苦海忽遇慈航。<br>得意須防失意，開眉又恐皺眉。馬逢伯樂，劍遇張華。<br>立志非常早，懷才惜未伸。花開遭兩損，月色被雲迷。<br>秋月雲開後，薰風雨過時。坎地番夷夏，崎嶇恐撲顛。<br>發意外之財源，添歲前之秀子。財如春柳發，喜若夏蓮開。<br>平地生荊棘，淺水起風波。無邊美景頻頻至，不盡財源滾滾來。<br>莫道三冬無雨落，須防六月有寒時。雲散一天星斗現，風平四海波浪清。<br>老梅生白玉，秋菊綻黃金。雖有名利暢地，還防霜雪相侵。<br>縱有風霜犯，依然樂到好春。佳偶忽成怨偶，良緣反作孽緣。<br>莫道喜中無拂意，還妨樂裡有生愁。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"军马篇之双关\"><a href=\"#军马篇之双关\" class=\"headerlink\" title=\"军马篇之双关\"></a>军马篇之双关</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">好比枯槁之木，縱逢春而不榮。茂盛之標，雖凌霜而不敗。<br>雖無意外心常泰，猶有胸中內帶愁。滿徑好花人讚羨，一簾微雨客生愁。<br>一枝花放門牆外，幾處人思瓶裡簪。范丹雖乃穿蕉異，一時運轉展鴻基。<br>相如昔日為司馬，洪武當年去牧牛。子女雙生曾報兆，錦雞齊唱竟呈祥。<br>竹影掃街塵不動，螢光燭地草難燃。一輪夜月圓還缺，幾點晨星有若無。<br>好去好來還好意，多財多寶亦多男。門前八卦蚊休入，戶外三星我接來。<br>浪靜風和船不動，天晴月朗客優游。為人靜處尋安樂，便是清閒一日仙。<br>諸葛一生惟謹慎，呂端大事不糊塗。<br>漸入佳境，如小溪流水，未得大展鴻圖。財丁兩遂，仍妨家運轉衰。<br>家運支持，將功補過，只可靜而獲福，勿縱閒以生嗔。貴人得力，仍妨服色而丁憂。<br>太乙臨運，應主熊羆入夢，宜慎破財為佳。一則以喜，一則以懼。<br>紙花做出驚人目，好在無香在裡頭。財雖有而積聚無多。<br>縱遇丁財而逢喜，難免神色以生悲。富貴草頭露，繁華瓦上霜。<br>雖有志於四方，依然未伸大志。挫折在前，安逸在後。挫折大，險阻于常。<br>頗得貴人關照，仍然未得暢志從心。宛如枯木逢春，雖有滋生也不榮。<br>只可順風搖順槳，莫來危馬過危橋。守株待免為安穩，緣木求魚枉用功。<br>雖行貴人提拔，未許十分稱懷。財之有進有退，事亦半喜半憂。<br>得財誠恐失獻身，生子還妨損子。應得桑麻女，當逢吉服穿。<br>平途走馬無關礙，順水行舟有逆風。衣祿有餘，起跌殊多。<br>得不足以補失，喜慶能使亡憂。交脫之際，動作勿妄。<br>莫道全無事，須防不測憂。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"军马篇之颂扬\"><a href=\"#军马篇之颂扬\" class=\"headerlink\" title=\"军马篇之颂扬\"></a>军马篇之颂扬</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">如秦樓之月，未得常光。似走盤之珠，去留未定。<br>雖得鴻圖猶未展，難令如意遂君心。忽然平地一聲雷，丁財兩旺。<br>隻手創成銀世界，雙拳弄出錦乾坤。貴子連添，財利重重。<br>喜氣欣欣，財源疊疊。財丁兩旺，百事堪宜。<br>丁財如旱曲得雨，枯木逢春。生涯占大有，美利盡成事。<br>萬物看生新氣象，百般從此得精神。好風吹送巖前桂，十里人間九里花。<br>雨露細滋春草長，風雲際會小陽春。有意裁花花不發，無心插柳柳成陰。<br>吹開雲裡月，剔起暗中燈。用心機再謀世界，盡本事而得大財。<br>運逢財氣心先爽，月到中秋分外明。春至滿園皆秀色，秋來無處不花香。<br>東成西就般般合，內作外為事事亨。花紅花綠花成錦，月清月白月光明。<br>平安竹報全家慶，寶貴花開遍室春。振家聲而宏駿業，逢巧遇而得其財。<br>可秉大權恭大任，重重財氣，祿位高陞。秋到中天明月好，運到人間寶貴春。<br>脫迷離而登大道，拔雲霧而見青天。果能發奮振雄心，定卜如意獲資財。<br>海外經營多獲利，前程發達在他邦。英雄得志揚名遠，寶貴催人氣象新。<br>盡力推開沙與石，用心淘得玉兼金。時運就從今日發，百花俱是此間開。<br>且看巨船出大海，錦帆無恙挂西風。財如秋水朝朝滿，運比桃花日日紅。<br>揚揚喜慶如春至，滾滾財源似水流。名花得雨生艷色，滿面紅顏照畫堂。<br>人逢喜事精神爽，樺遇春風瑞氣香。花逢春景千般艷，月到中秋分外光。<br>小小經營成厚業，微微創置可興隆。上苑奇花呈寶貴，庭前瑞草報平安。<br>狂風吹散殘雲去，如雨稍晴紅日升。千里江山千里錦，一翻雨至一翻新。<br>財如江上之清風，喜似山間之明月。清風明月無人管，綠水青山任意游。<br>利如曉日騰雲去，財似清風送喜來。斯時幸有賢朗志，何怕南窗寄傲情。<br>喜金銀之滿庫，納榖粟以盈倉。紅日初升，陰霾已散。順時而動，循序上進。<br>心花怒放，未許稱心。財喜並臨，有喜有財。謹守成業，敏事慎言。<br>免生煩惱，鑿石生玉。淘沙見金，惠風和暢。大有年豐，小人道長。<br>甜言勿聽，見景生情。見機而作，慎勿強求。<br>金鱗在手，得還妨走。有勝有敗，得足償失，無吝無譽。皓月當人，任意而為。<br>忠而見疑，直而受謗。微風貶骨，冷雨侵肌。否極泰來，先否後亨，如日之升。<br>大道生財，壽筳祥開。舉家暢飲，三杯不少。風光月齋。雨散雲收。<br>三呼不返，一夢無回。月朗天清，花香月艷。乍暗乍明，一帆風順。<br>吐氣揚眉，浮盡書散。多修厥德，福自天中。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之老人篇\"><a href=\"#軍馬篇之老人篇\" class=\"headerlink\" title=\"軍馬篇之老人篇\"></a>軍馬篇之老人篇</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">大器晚成休道晚，長江有水任魚游。不特財源廣聚，自然到老生光。<br>言晚福，安穩如山。論財祿，長江似水。福壽綿長安樂處，丁財並進又康寧。<br>晚福更高兒女肖，晚景又盛妻妾賢。花迎麗日高低放，氣逐香風遠近聞。<br>退去災殃無別意，展開心事有餘寬。財來恰似南山火，一陣高時一陣紅。<br>過盡前途十八灘，任君隨意掛高帆。高處綠楊堪策馬，條條好路透長安。<br>只宜再納蘭姬，子嗣定然有見。視南山之壽比，樂有嘉賓。<br>賀北海之籌陳，欣多命子。無處無譽，層樓直上，到處皆亨。<br>態羆許其入夢，璋兆宜男。又賦小星之慶。大謀九就皆如意。<br>萬紫千紅氣象新，老驥倘懷千里志，枯桐空抱五材清<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之小孩篇\"><a href=\"#軍馬篇之小孩篇\" class=\"headerlink\" title=\"軍馬篇之小孩篇\"></a>軍馬篇之小孩篇</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">根深不怕，樹大何愁。理幼而學，壯而行。如月初升，光朗可愛。少須藉椿萱之福，然而啾唧多端。<br>亦可跨龍附鳳。無榮無辱。以度時光。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之命宮\"><a href=\"#軍馬篇之命宮\" class=\"headerlink\" title=\"軍馬篇之命宮\"></a>軍馬篇之命宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">命逢驛馬，非為性靜。<br>嗟日落兮，靈椿早謝，歌月朗兮，萱草長榮，嗟椿樹之悲，喜萱堂之水（指喪父）。<br>父母應得延年，可喜萱并茂（指父母全）。<br>堂露冷，嘆椿樹之早凋，萱草悲秋，得王孫而抱憾（指喪父母）。<br>萱花先謝，椿樹長年（指喪母）。<br>縱使椿萓遐齡，定然要奉鄰家香火，以免幼年啾唧。<br>縱使椿萓遐齡，於雁行中，不免折翼（指兄弟不全）。<br>雖高年之福蔭，尤有小厄相驚，幼藉二親之福，依然兩暗三光。<br>椿堂先敘，椿草長榮（指父死）。<br>幼須前人之福。然而啾唧多端。正是南嶺種梅北嶺秀，縱然遇險保呈祥。<br>先難後易，大耗守財。財輕義重，來固多，用亦不少。<br>若問天倫，椿喪萱茂，論少年，不過鏡花水月。<br>到晚景福份齊大。必主刑傷早見。椿萱難耐老。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之田宅宮\"><a href=\"#軍馬篇之田宅宮\" class=\"headerlink\" title=\"軍馬篇之田宅宮\"></a>軍馬篇之田宅宮</h2><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gcode\">卜遺業之有限，自創置之豐隆。壯歲平常衣祿，晚年樂享田園。<br>田宅帶ＸＸ<span class=\"hljs-comment\">(任何星均可套入)</span>，能守能興。他日田園廣置，廈屋渠渠。堪為預上。<br>祖蔭有些餘積，可以無饑。<br>更不知他日良田萬頃，飼宇維新。<br>祖業雖然甚豐厚，少年自創必興隆。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之財帛宮\"><a href=\"#軍馬篇之財帛宮\" class=\"headerlink\" title=\"軍馬篇之財帛宮\"></a>軍馬篇之財帛宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">財帛值ＸＸ（任何星均可套入，下同），自係揮金如土，義重如山。<br>少得ＸＸ星宿照度，異日必然財生大道，實藏興焉。可創過萬之世界。<br>財帛值ＸＸ凶星，早財難聚，如有ＸＸ吉星同垣，異日定堪創業。自創更豐於上代。<br>又須早歲勤勞，晚年必一番作用。少年未能如意，他年獲利從心。<br>財帛值天空，財多反復，喜得金匱同垣，他日定然創置。異日可卜季倫之富潤屋也。<br>慣取市纏之利，必然旺處生財。<br>不作文章高手，定為市井班頭。<br>雖乃攀桂無緣，而許生財有道。黃卷無緣，勿以詩書求顯達，經營有道，須從商賈覓生財。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之遷移宮\"><a href=\"#軍馬篇之遷移宮\" class=\"headerlink\" title=\"軍馬篇之遷移宮\"></a>軍馬篇之遷移宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">出外Ｘ方（東南西北均可，下同），大利Ｘ方。不宜遷居。<br>連日架薪，以金木生活為合。ＸＸ（任何星，下同）吉星守垣，郵門遇貴。來往咸亨。<br>但ＸＸ同度，上落舟車，仍宜謹慎。<br>一筆掃開雲漢路，三秋直上廣寒宮。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之官祿宮\"><a href=\"#軍馬篇之官祿宮\" class=\"headerlink\" title=\"軍馬篇之官祿宮\"></a>軍馬篇之官祿宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">吉凶混雜，生平起跌殊多。衣祿有餘，異日錦衣輕裘。而居富厚，乘肥馬，而掌軍權。<br>犯ＸＸ（任何星，下同），詩書正路無緣。<br>衣祿人間多有，勿向詩書爭榮辱，宜從市井逞英雄。<br>若敵手持七寸管，也應才冠六鉤弓。<br>名登龍虎榜，身列鳳凰池。<br>詩書難謀，武力定膺爵祿。<br>Ｘ星纏擾，求利勝於求名。<br>若市井營業，定卜生財有道，必獲大利，面團團作富家翁。<br>官階遠大，祿自豐饒，端木才能，億屢中，陶朱事業，富堪求。<br>欣際會，而榮登政界。逢巧遇，以立奇功。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之福德宮\"><a href=\"#軍馬篇之福德宮\" class=\"headerlink\" title=\"軍馬篇之福德宮\"></a>軍馬篇之福德宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">心有慈祥，安人濟眾。福份齊大，雖乃早歲勤勞，晚景安逸。<br>論少年，不過鏡花水月，到晚景，福祿五全。<br>福自身修，德建自然名立。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之疾厄宮\"><a href=\"#軍馬篇之疾厄宮\" class=\"headerlink\" title=\"軍馬篇之疾厄宮\"></a>軍馬篇之疾厄宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">帶ＸＸ（任何星，下同）星宿，宜戒牛太血毒物，以免不測之災來。<br>喜得ＸＸ，吉星照度，自是避凶化吉，履險如夷。<br>帶ＸＸ星宿，勿入風月之場，勿貪意外之緣，生平宜謹慎，恐有意外之虞。<br>防口舌之侵，疾恙不沾，無憂沉痀之苦，永無害及其身。<br>可以逢凶化吉，轉禍為祥，保無隱疾侵身。<br>雖有小恙，亦無大礙。宜請金水字邊先生醫理。<br>須防病從口入。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之夫妻宮\"><a href=\"#軍馬篇之夫妻宮\" class=\"headerlink\" title=\"軍馬篇之夫妻宮\"></a>軍馬篇之夫妻宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">孟光係賢婦，不讀詩書識禮義。常存聞範識規模。喜官星透出，受得好夫。<br>印臨子位，食神顯露，亦慶亨佳兒肖子之榮。<br>持家有法，婦道精乖，上能和，不能睦。<br>女命身弱，主性純粹溫柔，夫賢子旺。魁罡性格多聰慧，疊疊相逢掌大權。<br>蓋以女命以夫子為用，其殺為官混，到底有精神。<br>在家尤利父母，出閣琴瑟調和。<br>晚年安樂，自在優游，不用勞心，而衣糧自足，無須勞，而家道自成。<br>金水司令而相生，火土乘時而相助，金水若相逢，必招美麗客。門庭吉，人物倍安寧。<br>淚酒香腮，閨幃寂寞，獨殺成權，人有權術，非凡本領。<br>子女雙生曾報兆，鬼雞齊唱竟呈祥。<br>齊婦含冤，孟姜長城之哭破，二人齊到東山坑，同看紅日照東明。<br>父母之喪，喪事不免，梟印奪食，難免花開花落之恨。<br>未得枝枝挺秀，兒女之債，花果不一。<br>女犯傷官格外嫌，帶印煞重，須防奪子。合多定損貞名，女犯傷官福不真。<br>無財無印守孤貧。如在有財兼有印，好為有衣有祿人。<br>花開花落無常定，月缺月圓又一輪。<br>乙木者，花果之木也，藤蘿之緣，牡丹之形，依玉樹而臨風,附古木而生香。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之子女宮\"><a href=\"#軍馬篇之子女宮\" class=\"headerlink\" title=\"軍馬篇之子女宮\"></a>軍馬篇之子女宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">好花不結因連雨，玉鏡無明為久塵。<br>春至花無影，雲深月不明。<br>丹桂經霜成晚子，碧桃遭雨結花遲。<br>久寒草不秀，雨久花未榮。<br>桃花貪結子，只恐五更霜。<br>難免卜商之苦，東敗於齊。楊業大會沙灘，威風八面。<br>石榴有子花應結，寶鴨與香煙怎生。<br>一夕偷花人剷草，虹霓初現雨梢晴。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之僕役宮\"><a href=\"#軍馬篇之僕役宮\" class=\"headerlink\" title=\"軍馬篇之僕役宮\"></a>軍馬篇之僕役宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">遭ＸＸ（可套入任何星，下同）星，任用宜擇人，方能得力，切勿盡心相托，以免因人而累已。<br>有受主敬賓強之義，無強奴欺主之虞。<br>必須濟以因，臨以威。懷恩畏威，自無反側之虞。<br>堂上一呼，堂下百諾，頤指氣使之效，呼聚喝散之權。<br>生平雖享，自代其勞，待婢如意，僕役從心，指揮如意。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之兄弟宮\"><a href=\"#軍馬篇之兄弟宮\" class=\"headerlink\" title=\"軍馬篇之兄弟宮\"></a>軍馬篇之兄弟宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">許昆仲而帶ＸＸ（任何星，下同）星宿，也無孫龐之意，亦無姜家大被同眠。<br>連枝同氣，鴻雁成群。<br>ＸＸ拱照，應卜王氏三槐。<br>所嫌ＸＸ，只論何家兩鳳。<br>上得兄力，下得弟緣。<br>伯牛之嘆，亦有相求相應，關張之盟，算來如女如足。<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"軍馬篇之相貌（父母）宮\"><a href=\"#軍馬篇之相貌（父母）宮\" class=\"headerlink\" title=\"軍馬篇之相貌（父母）宮\"></a>軍馬篇之相貌（父母）宮</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs\">金木相朝，明珠出海，中岳有氣，額廣顴高，晚年好景，此為相之得宜，品行端方者也。<br>五官端正，三停相配，眼有神，眉有彩，三才相對，六府均合。<br>雙眼睛有彩，雙眉之色有氣，是有貴子添生，乃有福之相。<br>可惜金木相沖，故而先受折挫煩緒也。<br>手相八卦不陷，三紋分明，終是有權，亨財帛豐厚也。<br>為人純厚，交游中，有春皓月之奇，談笑間，有桃紅柳緣之趣。<br>性格英明，品行超群，心靈性敏，義氣慣人，此君定是魁梧客。<br>貌原非醜，其人當是小丈夫。<br>人品忠直，無屈曲之心。貌如桃李之姿，心存慈悲之念。<br>食神生財，定立一生之衣祿，米糧豐厚，可批一生之衣褖無虧。<br>官星得命，平生衣祿有餘。<br>元辰，本為人，寬洪布德，剛斷英明，胸藏大志，作事超群。<br></code></pre></td></tr></table></figure>\n"},{"title":"江湖秘本术语解读","date":"2024-12-02T09:00:53.000Z","_content":"\n来源：[维基百科](https://zh.wikipedia.org/wiki/%E6%B1%9F%E7%9B%B8%E6%B4%BE)\n## 马\n本是象棋的棋子，多跟随对方的“车”或“炮”，伺机出动。广东话的“马住（马读英文Mark）”即跟踪而伺机出动。\n\n## 术语\n* 马：（人物）手下/（动作）。\n* 出马：开始工作。\n* 搬马：集合手下。一班即一群。\n* 马住：盯梢、紧随左右。\n* 晒马：展示手下(实力)。\n## 昆码\n“昆”是昔日广州“黑（背）语”，即欺骗说话。“码”是特定的代替物品；筹码是特定价目的金钱代替物而磅码则是重量的替代物。江湖相士对准猎物的人格弱点，善于利用一套特定的说话，令其陷入圈套。不同的口码要配合表情、声势和语气。有审、敲、打、问等方法。其技巧还包括：\n\n* 千：任何议题，迎合对象性格。\n* 隆：赞誉对方，使其表现真性情。\n* 响：强调灾祸必来，后果连累子孙。\n* 卖：自我宣传。\n## 隐语\n* 人物\n“天地”隐喻父子、“追”隐喻子女、“比”隐喻兄弟或姊妹、“八”隐喻女性、“七”隐喻男性、“四子”隐喻士子、“生孙”隐喻商人、“一哥”本隐喻尸体，后引伸为迷信者、“火底”隐喻有财有势的人、“畜生”隐喻混吉人士、“工”是劳工、“花底”隐喻以交际（花）换取生计的女性，“帝寿之徒”隐喻愚蠢的人。还有“老念”（和尚、道士），“琴头”（房东），“拖尾”（官吏），“蜂仔”（密探），“柒佬”即男人。\n\n## 银元\n元称“皮锦”、毫称“星星”、金子称“黄”、银子称“白”。\n\n## 数目\n一称“流”、二称“月”、三称“汪”、四称“则”、五称“中”、六称“孙”、七称“星”、八称“张”、九称“崖”、十称“局”、百称“尺”、千称“丈”、万称“方”。\n\n## 从业者\n班目（看相），叩经（占卦），问丙（算命），扎飞（拜神），盲丙（不知被骗的人，又称老衬）。\n\n## 其他\n照子（或招子，眼睛），火（有财有势），水（贫苦），古（倒楣），古烁（病患），帝（愚蠢糊涂），寿（穷途末路，倒楣）、帝寿（好骗的人）、拜万寿（无人可骗）。","source":"_posts/江湖秘本术语解读.md","raw":"---\ntitle: 江湖秘本术语解读\ndate: 2024-12-02 17:00:53\ntags:\n    - 算命\n    - 心理学\ncategories:\n    - 心理学\n---\n\n来源：[维基百科](https://zh.wikipedia.org/wiki/%E6%B1%9F%E7%9B%B8%E6%B4%BE)\n## 马\n本是象棋的棋子，多跟随对方的“车”或“炮”，伺机出动。广东话的“马住（马读英文Mark）”即跟踪而伺机出动。\n\n## 术语\n* 马：（人物）手下/（动作）。\n* 出马：开始工作。\n* 搬马：集合手下。一班即一群。\n* 马住：盯梢、紧随左右。\n* 晒马：展示手下(实力)。\n## 昆码\n“昆”是昔日广州“黑（背）语”，即欺骗说话。“码”是特定的代替物品；筹码是特定价目的金钱代替物而磅码则是重量的替代物。江湖相士对准猎物的人格弱点，善于利用一套特定的说话，令其陷入圈套。不同的口码要配合表情、声势和语气。有审、敲、打、问等方法。其技巧还包括：\n\n* 千：任何议题，迎合对象性格。\n* 隆：赞誉对方，使其表现真性情。\n* 响：强调灾祸必来，后果连累子孙。\n* 卖：自我宣传。\n## 隐语\n* 人物\n“天地”隐喻父子、“追”隐喻子女、“比”隐喻兄弟或姊妹、“八”隐喻女性、“七”隐喻男性、“四子”隐喻士子、“生孙”隐喻商人、“一哥”本隐喻尸体，后引伸为迷信者、“火底”隐喻有财有势的人、“畜生”隐喻混吉人士、“工”是劳工、“花底”隐喻以交际（花）换取生计的女性，“帝寿之徒”隐喻愚蠢的人。还有“老念”（和尚、道士），“琴头”（房东），“拖尾”（官吏），“蜂仔”（密探），“柒佬”即男人。\n\n## 银元\n元称“皮锦”、毫称“星星”、金子称“黄”、银子称“白”。\n\n## 数目\n一称“流”、二称“月”、三称“汪”、四称“则”、五称“中”、六称“孙”、七称“星”、八称“张”、九称“崖”、十称“局”、百称“尺”、千称“丈”、万称“方”。\n\n## 从业者\n班目（看相），叩经（占卦），问丙（算命），扎飞（拜神），盲丙（不知被骗的人，又称老衬）。\n\n## 其他\n照子（或招子，眼睛），火（有财有势），水（贫苦），古（倒楣），古烁（病患），帝（愚蠢糊涂），寿（穷途末路，倒楣）、帝寿（好骗的人）、拜万寿（无人可骗）。","slug":"江湖秘本术语解读","published":1,"updated":"2024-12-02T09:03:13.501Z","_id":"cm46sw0580003g4v49sah8xki","comments":1,"layout":"post","photos":[],"content":"<p>来源：<a href=\"https://zh.wikipedia.org/wiki/%E6%B1%9F%E7%9B%B8%E6%B4%BE\">维基百科</a></p>\n<h2 id=\"马\"><a href=\"#马\" class=\"headerlink\" title=\"马\"></a>马</h2><p>本是象棋的棋子，多跟随对方的“车”或“炮”，伺机出动。广东话的“马住（马读英文Mark）”即跟踪而伺机出动。</p>\n<h2 id=\"术语\"><a href=\"#术语\" class=\"headerlink\" title=\"术语\"></a>术语</h2><ul>\n<li>马：（人物）手下&#x2F;（动作）。</li>\n<li>出马：开始工作。</li>\n<li>搬马：集合手下。一班即一群。</li>\n<li>马住：盯梢、紧随左右。</li>\n<li>晒马：展示手下(实力)。</li>\n</ul>\n<h2 id=\"昆码\"><a href=\"#昆码\" class=\"headerlink\" title=\"昆码\"></a>昆码</h2><p>“昆”是昔日广州“黑（背）语”，即欺骗说话。“码”是特定的代替物品；筹码是特定价目的金钱代替物而磅码则是重量的替代物。江湖相士对准猎物的人格弱点，善于利用一套特定的说话，令其陷入圈套。不同的口码要配合表情、声势和语气。有审、敲、打、问等方法。其技巧还包括：</p>\n<ul>\n<li>千：任何议题，迎合对象性格。</li>\n<li>隆：赞誉对方，使其表现真性情。</li>\n<li>响：强调灾祸必来，后果连累子孙。</li>\n<li>卖：自我宣传。</li>\n</ul>\n<h2 id=\"隐语\"><a href=\"#隐语\" class=\"headerlink\" title=\"隐语\"></a>隐语</h2><ul>\n<li>人物<br>“天地”隐喻父子、“追”隐喻子女、“比”隐喻兄弟或姊妹、“八”隐喻女性、“七”隐喻男性、“四子”隐喻士子、“生孙”隐喻商人、“一哥”本隐喻尸体，后引伸为迷信者、“火底”隐喻有财有势的人、“畜生”隐喻混吉人士、“工”是劳工、“花底”隐喻以交际（花）换取生计的女性，“帝寿之徒”隐喻愚蠢的人。还有“老念”（和尚、道士），“琴头”（房东），“拖尾”（官吏），“蜂仔”（密探），“柒佬”即男人。</li>\n</ul>\n<h2 id=\"银元\"><a href=\"#银元\" class=\"headerlink\" title=\"银元\"></a>银元</h2><p>元称“皮锦”、毫称“星星”、金子称“黄”、银子称“白”。</p>\n<h2 id=\"数目\"><a href=\"#数目\" class=\"headerlink\" title=\"数目\"></a>数目</h2><p>一称“流”、二称“月”、三称“汪”、四称“则”、五称“中”、六称“孙”、七称“星”、八称“张”、九称“崖”、十称“局”、百称“尺”、千称“丈”、万称“方”。</p>\n<h2 id=\"从业者\"><a href=\"#从业者\" class=\"headerlink\" title=\"从业者\"></a>从业者</h2><p>班目（看相），叩经（占卦），问丙（算命），扎飞（拜神），盲丙（不知被骗的人，又称老衬）。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>照子（或招子，眼睛），火（有财有势），水（贫苦），古（倒楣），古烁（病患），帝（愚蠢糊涂），寿（穷途末路，倒楣）、帝寿（好骗的人）、拜万寿（无人可骗）。</p>\n","excerpt":"","more":"<p>来源：<a href=\"https://zh.wikipedia.org/wiki/%E6%B1%9F%E7%9B%B8%E6%B4%BE\">维基百科</a></p>\n<h2 id=\"马\"><a href=\"#马\" class=\"headerlink\" title=\"马\"></a>马</h2><p>本是象棋的棋子，多跟随对方的“车”或“炮”，伺机出动。广东话的“马住（马读英文Mark）”即跟踪而伺机出动。</p>\n<h2 id=\"术语\"><a href=\"#术语\" class=\"headerlink\" title=\"术语\"></a>术语</h2><ul>\n<li>马：（人物）手下&#x2F;（动作）。</li>\n<li>出马：开始工作。</li>\n<li>搬马：集合手下。一班即一群。</li>\n<li>马住：盯梢、紧随左右。</li>\n<li>晒马：展示手下(实力)。</li>\n</ul>\n<h2 id=\"昆码\"><a href=\"#昆码\" class=\"headerlink\" title=\"昆码\"></a>昆码</h2><p>“昆”是昔日广州“黑（背）语”，即欺骗说话。“码”是特定的代替物品；筹码是特定价目的金钱代替物而磅码则是重量的替代物。江湖相士对准猎物的人格弱点，善于利用一套特定的说话，令其陷入圈套。不同的口码要配合表情、声势和语气。有审、敲、打、问等方法。其技巧还包括：</p>\n<ul>\n<li>千：任何议题，迎合对象性格。</li>\n<li>隆：赞誉对方，使其表现真性情。</li>\n<li>响：强调灾祸必来，后果连累子孙。</li>\n<li>卖：自我宣传。</li>\n</ul>\n<h2 id=\"隐语\"><a href=\"#隐语\" class=\"headerlink\" title=\"隐语\"></a>隐语</h2><ul>\n<li>人物<br>“天地”隐喻父子、“追”隐喻子女、“比”隐喻兄弟或姊妹、“八”隐喻女性、“七”隐喻男性、“四子”隐喻士子、“生孙”隐喻商人、“一哥”本隐喻尸体，后引伸为迷信者、“火底”隐喻有财有势的人、“畜生”隐喻混吉人士、“工”是劳工、“花底”隐喻以交际（花）换取生计的女性，“帝寿之徒”隐喻愚蠢的人。还有“老念”（和尚、道士），“琴头”（房东），“拖尾”（官吏），“蜂仔”（密探），“柒佬”即男人。</li>\n</ul>\n<h2 id=\"银元\"><a href=\"#银元\" class=\"headerlink\" title=\"银元\"></a>银元</h2><p>元称“皮锦”、毫称“星星”、金子称“黄”、银子称“白”。</p>\n<h2 id=\"数目\"><a href=\"#数目\" class=\"headerlink\" title=\"数目\"></a>数目</h2><p>一称“流”、二称“月”、三称“汪”、四称“则”、五称“中”、六称“孙”、七称“星”、八称“张”、九称“崖”、十称“局”、百称“尺”、千称“丈”、万称“方”。</p>\n<h2 id=\"从业者\"><a href=\"#从业者\" class=\"headerlink\" title=\"从业者\"></a>从业者</h2><p>班目（看相），叩经（占卦），问丙（算命），扎飞（拜神），盲丙（不知被骗的人，又称老衬）。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>照子（或招子，眼睛），火（有财有势），水（贫苦），古（倒楣），古烁（病患），帝（愚蠢糊涂），寿（穷途末路，倒楣）、帝寿（好骗的人）、拜万寿（无人可骗）。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm3o79mxk00003wv4bbhkcneo","category_id":"cm3o7asec00083wv4fo50e5ua","_id":"cm3o7ased00093wv48p45bp8e"},{"post_id":"cm3o2hc3n00036sv418hlb4a2","category_id":"cm3o7b2iv000a3wv42u963pdc","_id":"cm3o7b2iw000b3wv43m2ih0ff"},{"post_id":"cm3o2hc3j00006sv47ngx1xgh","category_id":"cm3o7b2iv000a3wv42u963pdc","_id":"cm3o7b95q000c3wv47g5416ct"},{"post_id":"cm3o2hc3m00016sv4dgju64hg","category_id":"cm3o7b2iv000a3wv42u963pdc","_id":"cm3o7be9j000d3wv47qh4ho2z"},{"post_id":"cm3o2ensw0007ikv4hyv867qs","category_id":"cm3o7b2iv000a3wv42u963pdc","_id":"cm3o7bizq000e3wv4gygd19w2"},{"post_id":"cm3o2ensp0000ikv4d80v5kxg","category_id":"cm3o7b2iv000a3wv42u963pdc","_id":"cm3o7bo6d000f3wv4fzi1053m"},{"post_id":"cm3o2ensv0006ikv43v2l0hh3","category_id":"cm3o7b2iv000a3wv42u963pdc","_id":"cm3o7bt2p000g3wv461zgfuec"},{"post_id":"cm3o28urb00003kv481uq1dir","category_id":"cm3o7b2iv000a3wv42u963pdc","_id":"cm3o7bxr4000h3wv4dffndkvq"},{"post_id":"cm46gjx9m0000dwv43gh1gwq4","category_id":"cm46gjx9q0001dwv48qqg93wj","_id":"cm46gjx9s0004dwv4c5e7fsc0"},{"post_id":"cm46sw0530000g4v4enqv7e9g","category_id":"cm46syinf000bg4v4dj18470n","_id":"cm46sying000cg4v4ghzv3erf"},{"post_id":"cm46sw0550001g4v4dgmt4h41","category_id":"cm46syinf000bg4v4dj18470n","_id":"cm46syqa6000dg4v478z10av2"},{"post_id":"cm46sw0580003g4v49sah8xki","category_id":"cm46syinf000bg4v4dj18470n","_id":"cm46syw74000gg4v4gejf3kla"}],"PostTag":[{"post_id":"cm3o28urb00003kv481uq1dir","tag_id":"cm3o28urh00023kv43wae91kf","_id":"cm3o28urj00073kv4a3ak7pp4"},{"post_id":"cm3o28urb00003kv481uq1dir","tag_id":"cm3o28urh00033kv4hj0wdwne","_id":"cm3o28urj00083kv44v1khg1f"},{"post_id":"cm3o28urb00003kv481uq1dir","tag_id":"cm3o28uri00053kv4e374f6ku","_id":"cm3o28urj00093kv4efgf1icc"},{"post_id":"cm3o28urb00003kv481uq1dir","tag_id":"cm3o28uri00063kv41336hstd","_id":"cm3o28urj000a3kv48iobf1fe"},{"post_id":"cm3o2ensp0000ikv4d80v5kxg","tag_id":"cm3o28urh00023kv43wae91kf","_id":"cm3o2enst0001ikv430hk0fq3"},{"post_id":"cm3o2ensp0000ikv4d80v5kxg","tag_id":"cm3o28urh00033kv4hj0wdwne","_id":"cm3o2enst0002ikv4h5zr4if4"},{"post_id":"cm3o2ensp0000ikv4d80v5kxg","tag_id":"cm3o28uri00053kv4e374f6ku","_id":"cm3o2ensu0004ikv4f3xch1cm"},{"post_id":"cm3o2ensp0000ikv4d80v5kxg","tag_id":"cm3o28uri00063kv41336hstd","_id":"cm3o2ensu0005ikv45wpvc1nn"},{"post_id":"cm3o2ensv0006ikv43v2l0hh3","tag_id":"cm3o28urh00023kv43wae91kf","_id":"cm3o2ensy0008ikv471j5ab8b"},{"post_id":"cm3o2ensv0006ikv43v2l0hh3","tag_id":"cm3o28urh00033kv4hj0wdwne","_id":"cm3o2ensy0009ikv4hvxo3j1f"},{"post_id":"cm3o2ensv0006ikv43v2l0hh3","tag_id":"cm3o28uri00053kv4e374f6ku","_id":"cm3o2ensy000bikv4a683d7rs"},{"post_id":"cm3o2ensv0006ikv43v2l0hh3","tag_id":"cm3o28uri00063kv41336hstd","_id":"cm3o2ensy000dikv42rzv3z1m"},{"post_id":"cm3o2ensw0007ikv4hyv867qs","tag_id":"cm3o28urh00023kv43wae91kf","_id":"cm3o2ensy000eikv41rdn01pl"},{"post_id":"cm3o2ensw0007ikv4hyv867qs","tag_id":"cm3o28urh00033kv4hj0wdwne","_id":"cm3o2ensy000fikv45apg6mvv"},{"post_id":"cm3o2ensw0007ikv4hyv867qs","tag_id":"cm3o28uri00053kv4e374f6ku","_id":"cm3o2ensy000gikv45do8evqb"},{"post_id":"cm3o2ensw0007ikv4hyv867qs","tag_id":"cm3o28uri00063kv41336hstd","_id":"cm3o2ensy000hikv48f920bh9"},{"post_id":"cm3o2hc3j00006sv47ngx1xgh","tag_id":"cm3o28urh00023kv43wae91kf","_id":"cm3o2hc3n00026sv49wno4wv3"},{"post_id":"cm3o2hc3j00006sv47ngx1xgh","tag_id":"cm3o28urh00033kv4hj0wdwne","_id":"cm3o2hc3o00046sv4b8f67x27"},{"post_id":"cm3o2hc3j00006sv47ngx1xgh","tag_id":"cm3o28uri00053kv4e374f6ku","_id":"cm3o2hc3o00066sv40faqhpnf"},{"post_id":"cm3o2hc3j00006sv47ngx1xgh","tag_id":"cm3o28uri00063kv41336hstd","_id":"cm3o2hc3o00086sv4bny85t16"},{"post_id":"cm3o2hc3m00016sv4dgju64hg","tag_id":"cm3o28urh00023kv43wae91kf","_id":"cm3o2hc3p000a6sv43o1fgn9u"},{"post_id":"cm3o2hc3m00016sv4dgju64hg","tag_id":"cm3o28urh00033kv4hj0wdwne","_id":"cm3o2hc3p000b6sv44klhbdrg"},{"post_id":"cm3o2hc3m00016sv4dgju64hg","tag_id":"cm3o28uri00053kv4e374f6ku","_id":"cm3o2hc3p000c6sv4d51v9ndz"},{"post_id":"cm3o2hc3m00016sv4dgju64hg","tag_id":"cm3o28uri00063kv41336hstd","_id":"cm3o2hc3p000d6sv4612j4c9c"},{"post_id":"cm3o2hc3n00036sv418hlb4a2","tag_id":"cm3o28urh00023kv43wae91kf","_id":"cm3o2hc3p000e6sv41tl49zxl"},{"post_id":"cm3o2hc3n00036sv418hlb4a2","tag_id":"cm3o28urh00033kv4hj0wdwne","_id":"cm3o2hc3p000f6sv46mrjg0bj"},{"post_id":"cm3o2hc3n00036sv418hlb4a2","tag_id":"cm3o28uri00053kv4e374f6ku","_id":"cm3o2hc3p000g6sv4d3r712q0"},{"post_id":"cm3o2hc3n00036sv418hlb4a2","tag_id":"cm3o28uri00063kv41336hstd","_id":"cm3o2hc3p000h6sv4gikr5qms"},{"post_id":"cm3o79mxk00003wv4bbhkcneo","tag_id":"cm3o79mxn00013wv42o4z1vl5","_id":"cm3o79mxs00053wv45xcs9q6i"},{"post_id":"cm3o79mxk00003wv4bbhkcneo","tag_id":"cm3o79mxr00033wv421r09a9b","_id":"cm3o79mxs00063wv446c103gk"},{"post_id":"cm3o79mxk00003wv4bbhkcneo","tag_id":"cm3o79mxr00043wv4fhmm3dg0","_id":"cm3o79mxs00073wv4bl07e0n2"},{"post_id":"cm46gjx9m0000dwv43gh1gwq4","tag_id":"cm46gjx9r0002dwv49bzl4tjj","_id":"cm46gjx9s0005dwv42h8pcmak"},{"post_id":"cm46gjx9m0000dwv43gh1gwq4","tag_id":"cm46gjx9s0003dwv44cd159wk","_id":"cm46gjx9s0006dwv44ap673bo"},{"post_id":"cm46sw0530000g4v4enqv7e9g","tag_id":"cm46sw0560002g4v49m123cpw","_id":"cm46sw05b0006g4v4fvvtgddx"},{"post_id":"cm46sw0530000g4v4enqv7e9g","tag_id":"cm46sw0580004g4v4emnucyhx","_id":"cm46sw05b0007g4v43ezld2ex"},{"post_id":"cm46sw0550001g4v4dgmt4h41","tag_id":"cm46sw0580004g4v4emnucyhx","_id":"cm46sw05c0009g4v4eayjcc0s"},{"post_id":"cm46sw0550001g4v4dgmt4h41","tag_id":"cm46sw0560002g4v49m123cpw","_id":"cm46sw05c000ag4v4awzv1cfa"},{"post_id":"cm46sw0580003g4v49sah8xki","tag_id":"cm46sw0580004g4v4emnucyhx","_id":"cm46syw74000eg4v47a8n7usy"},{"post_id":"cm46sw0580003g4v49sah8xki","tag_id":"cm46sw0560002g4v49m123cpw","_id":"cm46syw74000fg4v4duod017q"}],"Tag":[{"name":"C#","_id":"cm3o28urh00023kv43wae91kf"},{"name":".NET","_id":"cm3o28urh00033kv4hj0wdwne"},{"name":"MAUI","_id":"cm3o28uri00053kv4e374f6ku"},{"name":"Prism","_id":"cm3o28uri00063kv41336hstd"},{"name":"Hexo","_id":"cm3o79mxn00013wv42o4z1vl5"},{"name":"Github Page","_id":"cm3o79mxr00033wv421r09a9b"},{"name":"Fluid","_id":"cm3o79mxr00043wv4fhmm3dg0"},{"name":"office","_id":"cm46gjx9r0002dwv49bzl4tjj"},{"name":"激活","_id":"cm46gjx9s0003dwv44cd159wk"},{"name":"心理学","_id":"cm46sw0560002g4v49m123cpw"},{"name":"算命","_id":"cm46sw0580004g4v4emnucyhx"}]}}